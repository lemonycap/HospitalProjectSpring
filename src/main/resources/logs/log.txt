[DEBUG] 2020-05-27 00:28:48.587 [restartedMain] ClasspathLoggingApplicationListener - Application started with classpath: [file:/F:/GitRepository/Study/demo/target/classes/]
[INFO ] 2020-05-27 00:28:48.708 [restartedMain] DemoApplication - Starting DemoApplication on DESKTOP-HD45276 with PID 10720 (F:\GitRepository\Study\demo\target\classes started by Liza in F:\GitRepository\Study\demo)
[DEBUG] 2020-05-27 00:28:48.713 [restartedMain] DemoApplication - Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
[INFO ] 2020-05-27 00:28:48.714 [restartedMain] DemoApplication - No active profile set, falling back to default profiles: default
[DEBUG] 2020-05-27 00:28:48.714 [restartedMain] SpringApplication - Loading source class com.example.demo.DemoApplication
[DEBUG] 2020-05-27 00:28:48.769 [restartedMain] ConfigFileApplicationListener - Loaded config file 'file:/F:/GitRepository/Study/demo/target/classes/application.properties' (classpath:/application.properties)
[DEBUG] 2020-05-27 00:28:48.770 [restartedMain] ChangeableUrls - Matching URLs for reloading : [file:/F:/GitRepository/Study/demo/target/classes/]
[DEBUG] 2020-05-27 00:28:48.771 [restartedMain] DevToolsSettings - Included patterns for restart : []
[DEBUG] 2020-05-27 00:28:48.771 [restartedMain] DevToolsSettings - Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
[INFO ] 2020-05-27 00:28:48.771 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2020-05-27 00:28:48.771 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[DEBUG] 2020-05-27 00:28:48.771 [restartedMain] AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175
[DEBUG] 2020-05-27 00:28:48.806 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] 2020-05-27 00:28:48.824 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[DEBUG] 2020-05-27 00:28:48.921 [restartedMain] ClassPathBeanDefinitionScanner - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\config\WebSecurityConfig.class]
[DEBUG] 2020-05-27 00:28:48.928 [restartedMain] ClassPathBeanDefinitionScanner - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\controllers\AppController.class]
[DEBUG] 2020-05-27 00:28:48.929 [restartedMain] ClassPathBeanDefinitionScanner - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\controllers\DoctorController.class]
[DEBUG] 2020-05-27 00:28:48.929 [restartedMain] ClassPathBeanDefinitionScanner - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\controllers\NurseController.class]
[DEBUG] 2020-05-27 00:28:48.940 [restartedMain] ClassPathBeanDefinitionScanner - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\services\DoctorService.class]
[DEBUG] 2020-05-27 00:28:48.941 [restartedMain] ClassPathBeanDefinitionScanner - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\services\NurseService.class]
[DEBUG] 2020-05-27 00:28:48.941 [restartedMain] ClassPathBeanDefinitionScanner - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\services\PatientDataService.class]
[DEBUG] 2020-05-27 00:28:49.151 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[DEBUG] 2020-05-27 00:28:49.172 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[DEBUG] 2020-05-27 00:28:49.176 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[DEBUG] 2020-05-27 00:28:49.230 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[DEBUG] 2020-05-27 00:28:49.235 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.datasource.url' in PropertySource 'configurationProperties' with value of type String
[DEBUG] 2020-05-27 00:28:49.478 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[DEBUG] 2020-05-27 00:28:49.524 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[DEBUG] 2020-05-27 00:28:49.532 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[DEBUG] 2020-05-27 00:28:49.544 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[INFO ] 2020-05-27 00:28:49.596 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
[DEBUG] 2020-05-27 00:28:49.605 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[DEBUG] 2020-05-27 00:28:49.613 [restartedMain] AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.example.demo'. Automatic @Repository and @Entity scanning is enabled.
[DEBUG] 2020-05-27 00:28:49.614 [restartedMain] RepositoryConfigurationDelegate - Scanning for JPA repositories in packages com.example.demo.
[DEBUG] 2020-05-27 00:28:49.626 [restartedMain] RepositoryComponentProvider - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\repos\DiagnosisRepo.class]
[DEBUG] 2020-05-27 00:28:49.626 [restartedMain] RepositoryComponentProvider - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\repos\MedicineListRepo.class]
[DEBUG] 2020-05-27 00:28:49.626 [restartedMain] RepositoryComponentProvider - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\repos\PatientDataRepo.class]
[DEBUG] 2020-05-27 00:28:49.627 [restartedMain] RepositoryComponentProvider - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\repos\PrescriptionRepo.class]
[DEBUG] 2020-05-27 00:28:49.627 [restartedMain] RepositoryComponentProvider - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\repos\RoleRepo.class]
[DEBUG] 2020-05-27 00:28:49.627 [restartedMain] RepositoryComponentProvider - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\repos\UserRepo.class]
[DEBUG] 2020-05-27 00:28:49.692 [restartedMain] ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [F:\GitRepository\Study\demo\target\classes\com\example\demo\services\UserDetailsServiceImpl.class]
[DEBUG] 2020-05-27 00:28:49.706 [restartedMain] RepositoryConfigurationDelegate - Registering deferred repository initialization listener.
[INFO ] 2020-05-27 00:28:49.707 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92ms. Found 6 JPA repository interfaces.
[DEBUG] 2020-05-27 00:28:49.897 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[DEBUG] 2020-05-27 00:28:49.902 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator'
[DEBUG] 2020-05-27 00:28:49.902 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
[DEBUG] 2020-05-27 00:28:49.902 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
[DEBUG] 2020-05-27 00:28:49.938 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[DEBUG] 2020-05-27 00:28:49.939 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'conversionServicePostProcessor'
[DEBUG] 2020-05-27 00:28:49.940 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[DEBUG] 2020-05-27 00:28:49.940 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[DEBUG] 2020-05-27 00:28:49.941 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[DEBUG] 2020-05-27 00:28:49.949 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] 2020-05-27 00:28:49.949 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] 2020-05-27 00:28:49.951 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[DEBUG] 2020-05-27 00:28:49.951 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[DEBUG] 2020-05-27 00:28:49.952 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
[DEBUG] 2020-05-27 00:28:49.952 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
[DEBUG] 2020-05-27 00:28:49.953 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[DEBUG] 2020-05-27 00:28:49.981 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
[DEBUG] 2020-05-27 00:28:49.992 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
[DEBUG] 2020-05-27 00:28:49.995 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
[DEBUG] 2020-05-27 00:28:50.000 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[DEBUG] 2020-05-27 00:28:50.000 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[DEBUG] 2020-05-27 00:28:50.001 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSourceInitializedPublisher'
[DEBUG] 2020-05-27 00:28:50.002 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
[DEBUG] 2020-05-27 00:28:50.003 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2020-05-27 00:28:50.003 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[DEBUG] 2020-05-27 00:28:50.031 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionAttributeSource'
[DEBUG] 2020-05-27 00:28:50.035 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionInterceptor'
[DEBUG] 2020-05-27 00:28:50.036 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[DEBUG] 2020-05-27 00:28:50.042 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[DEBUG] 2020-05-27 00:28:50.042 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[DEBUG] 2020-05-27 00:28:50.052 [restartedMain] UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@7d37f797]
[DEBUG] 2020-05-27 00:28:50.052 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[DEBUG] 2020-05-27 00:28:50.053 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[DEBUG] 2020-05-27 00:28:50.087 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[DEBUG] 2020-05-27 00:28:50.087 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[DEBUG] 2020-05-27 00:28:50.088 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[DEBUG] 2020-05-27 00:28:50.088 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.090 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[DEBUG] 2020-05-27 00:28:50.098 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
[DEBUG] 2020-05-27 00:28:50.121 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[DEBUG] 2020-05-27 00:28:50.122 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[DEBUG] 2020-05-27 00:28:50.123 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[DEBUG] 2020-05-27 00:28:50.124 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[DEBUG] 2020-05-27 00:28:50.124 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[DEBUG] 2020-05-27 00:28:50.127 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[DEBUG] 2020-05-27 00:28:50.127 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[DEBUG] 2020-05-27 00:28:50.130 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[DEBUG] 2020-05-27 00:28:50.130 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.131 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[DEBUG] 2020-05-27 00:28:50.151 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer'
[DEBUG] 2020-05-27 00:28:50.151 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.152 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[DEBUG] 2020-05-27 00:28:50.153 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[DEBUG] 2020-05-27 00:28:50.154 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[DEBUG] 2020-05-27 00:28:50.154 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet'
[DEBUG] 2020-05-27 00:28:50.154 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[DEBUG] 2020-05-27 00:28:50.155 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[DEBUG] 2020-05-27 00:28:50.160 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[DEBUG] 2020-05-27 00:28:50.172 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[DEBUG] 2020-05-27 00:28:50.172 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[DEBUG] 2020-05-27 00:28:50.173 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement'
[DEBUG] 2020-05-27 00:28:50.173 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.174 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[DEBUG] 2020-05-27 00:28:50.179 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[DEBUG] 2020-05-27 00:28:50.183 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
[DEBUG] 2020-05-27 00:28:50.247 [restartedMain] TomcatServletWebServerFactory - Code archive: C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar
[DEBUG] 2020-05-27 00:28:50.247 [restartedMain] TomcatServletWebServerFactory - Code archive: C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar
[DEBUG] 2020-05-27 00:28:50.248 [restartedMain] TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[INFO ] 2020-05-27 00:28:50.320 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8077 (http)
[INFO ] 2020-05-27 00:28:50.328 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8077"]
[INFO ] 2020-05-27 00:28:50.328 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2020-05-27 00:28:50.329 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.35]
[INFO ] 2020-05-27 00:28:50.450 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[DEBUG] 2020-05-27 00:28:50.450 [restartedMain] ContextLoader - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[INFO ] 2020-05-27 00:28:50.450 [restartedMain] ContextLoader - Root WebApplicationContext: initialization completed in 1679 ms
[DEBUG] 2020-05-27 00:28:50.452 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'securityFilterChainRegistration'
[DEBUG] 2020-05-27 00:28:50.452 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.454 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
[DEBUG] 2020-05-27 00:28:50.456 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
[DEBUG] 2020-05-27 00:28:50.463 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter'
[DEBUG] 2020-05-27 00:28:50.464 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter'
[DEBUG] 2020-05-27 00:28:50.465 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.467 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter'
[DEBUG] 2020-05-27 00:28:50.476 [restartedMain] ServletContextInitializerBeans - Mapping filters: springSecurityFilterChain urls=[/*] order=-100, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
[DEBUG] 2020-05-27 00:28:50.476 [restartedMain] ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/]
[DEBUG] 2020-05-27 00:28:50.489 [restartedMain] OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
[DEBUG] 2020-05-27 00:28:50.489 [restartedMain] OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
[DEBUG] 2020-05-27 00:28:50.489 [restartedMain] DelegatingFilterProxyRegistrationBean$1 - Filter 'springSecurityFilterChain' configured for use
[DEBUG] 2020-05-27 00:28:50.490 [restartedMain] OrderedFormContentFilter - Filter 'formContentFilter' configured for use
[DEBUG] 2020-05-27 00:28:50.500 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
[DEBUG] 2020-05-27 00:28:50.500 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.501 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
[DEBUG] 2020-05-27 00:28:50.501 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
[DEBUG] 2020-05-27 00:28:50.502 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[DEBUG] 2020-05-27 00:28:50.509 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[DEBUG] 2020-05-27 00:28:50.520 [restartedMain] HikariConfig - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3426448b
[DEBUG] 2020-05-27 00:28:50.537 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
[DEBUG] 2020-05-27 00:28:50.539 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[DEBUG] 2020-05-27 00:28:50.539 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:50.545 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
[DEBUG] 2020-05-27 00:28:50.545 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
[DEBUG] 2020-05-27 00:28:50.546 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory'
[DEBUG] 2020-05-27 00:28:50.546 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
[DEBUG] 2020-05-27 00:28:50.547 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
[DEBUG] 2020-05-27 00:28:50.550 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
[DEBUG] 2020-05-27 00:28:50.552 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
[DEBUG] 2020-05-27 00:28:50.552 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
[DEBUG] 2020-05-27 00:28:50.552 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@3239f06f'
[DEBUG] 2020-05-27 00:28:50.552 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
[DEBUG] 2020-05-27 00:28:50.555 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
[DEBUG] 2020-05-27 00:28:50.555 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
[DEBUG] 2020-05-27 00:28:50.562 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
[DEBUG] 2020-05-27 00:28:50.562 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaVendorAdapter'
[DEBUG] 2020-05-27 00:28:50.583 [restartedMain] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2020-05-27 00:28:50.585 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
[DEBUG] 2020-05-27 00:28:50.586 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactoryBootstrapExecutorCustomizer'
[DEBUG] 2020-05-27 00:28:50.587 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.588 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor'
[DEBUG] 2020-05-27 00:28:50.588 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.589 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskExecutorBuilder'
[DEBUG] 2020-05-27 00:28:50.590 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[DEBUG] 2020-05-27 00:28:50.593 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[DEBUG] 2020-05-27 00:28:50.596 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[INFO ] 2020-05-27 00:28:50.599 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[DEBUG] 2020-05-27 00:28:50.600 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'entityManagerFactoryBootstrapExecutorCustomizer' via factory method to bean named 'applicationTaskExecutor'
[DEBUG] 2020-05-27 00:28:50.601 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
[DEBUG] 2020-05-27 00:28:50.620 [task-1] LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
[DEBUG] 2020-05-27 00:28:50.628 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'demoApplication'
[DEBUG] 2020-05-27 00:28:50.629 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'webSecurityConfig'
[DEBUG] 2020-05-27 00:28:50.637 [restartedMain] CachedIntrospectionResults - Not strongly caching class [com.example.demo.config.WebSecurityConfig$$EnhancerBySpringCGLIB$$408a63e] because it is not cache-safe
[DEBUG] 2020-05-27 00:28:50.638 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'objectPostProcessor'
[DEBUG] 2020-05-27 00:28:50.639 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
[DEBUG] 2020-05-27 00:28:50.639 [task-1] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3426448b
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/F:/GitRepository/Study/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.demo.entity.AppUser
		com.example.demo.entity.Diagnosis
		com.example.demo.entity.MedicineList
		com.example.demo.entity.PatientData
		com.example.demo.entity.Prescription
		com.example.demo.entity.Role]
	Mapping files names []
	Properties []
[DEBUG] 2020-05-27 00:28:50.641 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@3239f06f'
[DEBUG] 2020-05-27 00:28:50.648 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[DEBUG] 2020-05-27 00:28:50.648 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[DEBUG] 2020-05-27 00:28:50.650 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[DEBUG] 2020-05-27 00:28:50.653 [task-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-05-27 00:28:50.654 [task-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-05-27 00:28:50.655 [task-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-05-27 00:28:50.660 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[DEBUG] 2020-05-27 00:28:50.661 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@3239f06f'
[DEBUG] 2020-05-27 00:28:50.671 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
[DEBUG] 2020-05-27 00:28:50.672 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[DEBUG] 2020-05-27 00:28:50.673 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[DEBUG] 2020-05-27 00:28:50.673 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[DEBUG] 2020-05-27 00:28:50.673 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@3239f06f'
[DEBUG] 2020-05-27 00:28:50.681 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
[DEBUG] 2020-05-27 00:28:50.681 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
[DEBUG] 2020-05-27 00:28:50.683 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
[DEBUG] 2020-05-27 00:28:50.684 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
[WARN ] 2020-05-27 00:28:50.685 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[DEBUG] 2020-05-27 00:28:50.687 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
[DEBUG] 2020-05-27 00:28:50.688 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
[DEBUG] 2020-05-27 00:28:50.689 [restartedMain] LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.data.web.config.SpringDataWebConfiguration$$EnhancerBySpringCGLIB$$b4319fe8] - unable to determine constructor/method parameter names
[DEBUG] 2020-05-27 00:28:50.690 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:50.693 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'pageableCustomizer'
[DEBUG] 2020-05-27 00:28:50.693 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.695 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[DEBUG] 2020-05-27 00:28:50.696 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
[DEBUG] 2020-05-27 00:28:50.697 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'sortCustomizer'
[INFO ] 2020-05-27 00:28:50.702 [task-1] Version - HHH000412: Hibernate ORM core version 5.4.15.Final
[DEBUG] 2020-05-27 00:28:50.703 [task-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-05-27 00:28:50.705 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
[DEBUG] 2020-05-27 00:28:50.709 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
[DEBUG] 2020-05-27 00:28:50.712 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:50.713 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
[DEBUG] 2020-05-27 00:28:50.714 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:50.714 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
[DEBUG] 2020-05-27 00:28:50.715 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:50.717 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'appController'
[DEBUG] 2020-05-27 00:28:50.720 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.UserRepo…
[DEBUG] 2020-05-27 00:28:50.726 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.RoleRepo…
[DEBUG] 2020-05-27 00:28:50.729 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PatientDataRepo…
[DEBUG] 2020-05-27 00:28:50.732 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'passwordEncoder'
[DEBUG] 2020-05-27 00:28:50.748 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'patientDataService'
[DEBUG] 2020-05-27 00:28:50.753 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.UserRepo…
[DEBUG] 2020-05-27 00:28:50.754 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.RoleRepo…
[DEBUG] 2020-05-27 00:28:50.754 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PatientDataRepo…
[DEBUG] 2020-05-27 00:28:50.754 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PrescriptionRepo…
[DEBUG] 2020-05-27 00:28:50.781 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'doctorController'
[DEBUG] 2020-05-27 00:28:50.782 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.UserRepo…
[DEBUG] 2020-05-27 00:28:50.782 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.RoleRepo…
[DEBUG] 2020-05-27 00:28:50.782 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PatientDataRepo…
[DEBUG] 2020-05-27 00:28:50.783 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'doctorService'
[DEBUG] 2020-05-27 00:28:50.784 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PatientDataRepo…
[DEBUG] 2020-05-27 00:28:50.784 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.DiagnosisRepo…
[DEBUG] 2020-05-27 00:28:50.786 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.UserRepo…
[DEBUG] 2020-05-27 00:28:50.786 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PrescriptionRepo…
[DEBUG] 2020-05-27 00:28:50.786 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.MedicineListRepo…
[DEBUG] 2020-05-27 00:28:50.794 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'nurseController'
[DEBUG] 2020-05-27 00:28:50.794 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.UserRepo…
[DEBUG] 2020-05-27 00:28:50.795 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PatientDataRepo…
[DEBUG] 2020-05-27 00:28:50.797 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'nurseService'
[DEBUG] 2020-05-27 00:28:50.797 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.MedicineListRepo…
[DEBUG] 2020-05-27 00:28:50.797 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PatientDataRepo…
[DEBUG] 2020-05-27 00:28:50.797 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.DiagnosisRepo…
[DEBUG] 2020-05-27 00:28:50.798 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.UserRepo…
[DEBUG] 2020-05-27 00:28:50.798 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.PrescriptionRepo…
[DEBUG] 2020-05-27 00:28:50.802 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'authenticationManagerBuilder'
[DEBUG] 2020-05-27 00:28:50.802 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
[DEBUG] 2020-05-27 00:28:50.802 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:50.804 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'authenticationEventPublisher'
[DEBUG] 2020-05-27 00:28:50.804 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.805 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:50.814 [task-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-05-27 00:28:50.817 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
[DEBUG] 2020-05-27 00:28:50.825 [task-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-05-27 00:28:50.825 [task-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-05-27 00:28:50.828 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'autowiredWebSecurityConfigurersIgnoreParents'
[DEBUG] 2020-05-27 00:28:50.831 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'autowiredWebSecurityConfigurersIgnoreParents' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@3239f06f'
[INFO ] 2020-05-27 00:28:50.841 [task-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-05-27 00:28:50.845 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'delegatingApplicationListener'
[DEBUG] 2020-05-27 00:28:50.846 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'springSecurityFilterChain'
[DEBUG] 2020-05-27 00:28:50.847 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'authenticationProvider'
[DEBUG] 2020-05-27 00:28:50.859 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'userDetailsService'
[DEBUG] 2020-05-27 00:28:50.860 [restartedMain] RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver - Creating lazy injection proxy for com.example.demo.repos.UserRepo…
[DEBUG] 2020-05-27 00:28:50.867 [task-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1f21b053
[DEBUG] 2020-05-27 00:28:50.867 [task-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1f21b053
[DEBUG] 2020-05-27 00:28:50.867 [task-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f21b053
[DEBUG] 2020-05-27 00:28:50.868 [task-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@600e8e1f
[DEBUG] 2020-05-27 00:28:50.868 [task-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44c30530
[DEBUG] 2020-05-27 00:28:50.868 [task-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2392653f
[DEBUG] 2020-05-27 00:28:50.869 [task-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@76b29d02
[DEBUG] 2020-05-27 00:28:50.870 [task-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@76b29d02
[DEBUG] 2020-05-27 00:28:50.870 [task-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@76b29d02
[DEBUG] 2020-05-27 00:28:50.871 [task-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1b564dde
[DEBUG] 2020-05-27 00:28:50.871 [task-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1b564dde
[DEBUG] 2020-05-27 00:28:50.871 [task-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b564dde
[DEBUG] 2020-05-27 00:28:50.872 [task-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@57dc186b
[DEBUG] 2020-05-27 00:28:50.872 [task-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@57dc186b
[DEBUG] 2020-05-27 00:28:50.872 [task-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57dc186b
[DEBUG] 2020-05-27 00:28:50.873 [task-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:50.873 [task-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:50.873 [task-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:50.874 [task-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@756a8429
[DEBUG] 2020-05-27 00:28:50.874 [task-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@756a8429
[DEBUG] 2020-05-27 00:28:50.874 [task-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@756a8429
[DEBUG] 2020-05-27 00:28:50.875 [task-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@10206597
[DEBUG] 2020-05-27 00:28:50.875 [task-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@10206597
[DEBUG] 2020-05-27 00:28:50.875 [task-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@10206597
[DEBUG] 2020-05-27 00:28:50.876 [task-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4c910555
[DEBUG] 2020-05-27 00:28:50.876 [task-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4c910555
[DEBUG] 2020-05-27 00:28:50.876 [task-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c910555
[DEBUG] 2020-05-27 00:28:50.876 [task-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@79774093
[DEBUG] 2020-05-27 00:28:50.876 [task-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@79774093
[DEBUG] 2020-05-27 00:28:50.877 [task-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b1d5d5e
[DEBUG] 2020-05-27 00:28:50.877 [task-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b1d5d5e
[DEBUG] 2020-05-27 00:28:50.884 [task-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5defd596
[DEBUG] 2020-05-27 00:28:50.884 [task-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5defd596
[DEBUG] 2020-05-27 00:28:50.885 [task-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2c04ea57
[DEBUG] 2020-05-27 00:28:50.885 [task-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5af5e4fb
[DEBUG] 2020-05-27 00:28:50.886 [task-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@76261098
[DEBUG] 2020-05-27 00:28:50.887 [task-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@76261098
[DEBUG] 2020-05-27 00:28:50.888 [task-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6b6a7a37
[DEBUG] 2020-05-27 00:28:50.889 [task-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6b6a7a37
[DEBUG] 2020-05-27 00:28:50.890 [task-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3c59abc1
[DEBUG] 2020-05-27 00:28:50.890 [task-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3c59abc1
[DEBUG] 2020-05-27 00:28:50.891 [task-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4d6afd16
[DEBUG] 2020-05-27 00:28:50.891 [task-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4d6afd16
[DEBUG] 2020-05-27 00:28:50.892 [task-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3daaffd6
[DEBUG] 2020-05-27 00:28:50.892 [task-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3daaffd6
[DEBUG] 2020-05-27 00:28:50.893 [task-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@49a9732c
[DEBUG] 2020-05-27 00:28:50.893 [task-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@49a9732c
[DEBUG] 2020-05-27 00:28:50.894 [task-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3fb195e5
[DEBUG] 2020-05-27 00:28:50.894 [task-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3fb195e5
[DEBUG] 2020-05-27 00:28:50.895 [task-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5b8a3750
[DEBUG] 2020-05-27 00:28:50.895 [task-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5b8a3750
[DEBUG] 2020-05-27 00:28:50.896 [task-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7214223d
[DEBUG] 2020-05-27 00:28:50.896 [task-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7214223d
[DEBUG] 2020-05-27 00:28:50.897 [task-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@356a0bf3
[DEBUG] 2020-05-27 00:28:50.897 [task-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@356a0bf3
[DEBUG] 2020-05-27 00:28:50.898 [task-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4b911a58
[DEBUG] 2020-05-27 00:28:50.898 [task-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b911a58
[DEBUG] 2020-05-27 00:28:50.900 [task-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@46e6ad44
[DEBUG] 2020-05-27 00:28:50.900 [task-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@46e6ad44
[DEBUG] 2020-05-27 00:28:50.900 [task-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@46e6ad44
[DEBUG] 2020-05-27 00:28:50.901 [task-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6c1d335e
[DEBUG] 2020-05-27 00:28:50.904 [task-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5452d3df
[DEBUG] 2020-05-27 00:28:50.904 [task-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5452d3df
[DEBUG] 2020-05-27 00:28:50.904 [task-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5452d3df
[DEBUG] 2020-05-27 00:28:50.905 [task-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@455b4e33
[DEBUG] 2020-05-27 00:28:50.906 [task-1] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74cfb07c
[DEBUG] 2020-05-27 00:28:50.907 [task-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@724b9ec6
[DEBUG] 2020-05-27 00:28:50.907 [task-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@724b9ec6
[DEBUG] 2020-05-27 00:28:50.907 [task-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1d47e12
[DEBUG] 2020-05-27 00:28:50.907 [task-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d47e12
[DEBUG] 2020-05-27 00:28:50.908 [task-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c4662fc
[DEBUG] 2020-05-27 00:28:50.908 [task-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c4662fc
[DEBUG] 2020-05-27 00:28:50.909 [task-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1d0786e8
[DEBUG] 2020-05-27 00:28:50.909 [task-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1d0786e8
[DEBUG] 2020-05-27 00:28:50.909 [task-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1a1a0c26
[DEBUG] 2020-05-27 00:28:50.910 [task-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1a1a0c26
[DEBUG] 2020-05-27 00:28:50.910 [task-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6495fbb9
[DEBUG] 2020-05-27 00:28:50.911 [task-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@71fc2f13
[DEBUG] 2020-05-27 00:28:50.911 [task-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@71fc2f13
[DEBUG] 2020-05-27 00:28:50.911 [task-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@71fc2f13
[DEBUG] 2020-05-27 00:28:50.912 [task-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1286cb51
[DEBUG] 2020-05-27 00:28:50.912 [task-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1286cb51
[DEBUG] 2020-05-27 00:28:50.912 [task-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1286cb51
[DEBUG] 2020-05-27 00:28:50.913 [task-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2eebe277
[DEBUG] 2020-05-27 00:28:50.913 [task-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5ea18082
[DEBUG] 2020-05-27 00:28:50.914 [task-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@29a6ade4
[DEBUG] 2020-05-27 00:28:50.914 [task-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@29a6ade4
[DEBUG] 2020-05-27 00:28:50.914 [task-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@29a6ade4
[DEBUG] 2020-05-27 00:28:50.914 [task-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12abb305
[DEBUG] 2020-05-27 00:28:50.915 [task-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12abb305
[DEBUG] 2020-05-27 00:28:50.915 [task-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12abb305
[DEBUG] 2020-05-27 00:28:50.915 [task-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@10c7ad9
[DEBUG] 2020-05-27 00:28:50.915 [task-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1cd1e57f
[DEBUG] 2020-05-27 00:28:50.916 [task-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3dac0729
[DEBUG] 2020-05-27 00:28:50.916 [task-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3dac0729
[DEBUG] 2020-05-27 00:28:50.917 [task-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11ab418f
[DEBUG] 2020-05-27 00:28:50.918 [task-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6e1b5867
[DEBUG] 2020-05-27 00:28:50.918 [task-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6e1b5867
[DEBUG] 2020-05-27 00:28:50.919 [task-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@b49e23e
[DEBUG] 2020-05-27 00:28:50.919 [task-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b49e23e
[DEBUG] 2020-05-27 00:28:50.920 [task-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a5faea7
[DEBUG] 2020-05-27 00:28:50.920 [task-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ee8a956
[DEBUG] 2020-05-27 00:28:50.922 [task-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7dcd2ca2
[DEBUG] 2020-05-27 00:28:50.925 [task-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1df0708d
[DEBUG] 2020-05-27 00:28:50.925 [task-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1df0708d
[DEBUG] 2020-05-27 00:28:50.925 [task-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f321f8c
[DEBUG] 2020-05-27 00:28:50.925 [task-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@774481d2
[DEBUG] 2020-05-27 00:28:50.925 [task-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1145b3a0
[DEBUG] 2020-05-27 00:28:50.925 [task-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4346114b
[DEBUG] 2020-05-27 00:28:50.926 [task-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c97a8d0
[DEBUG] 2020-05-27 00:28:50.926 [task-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f0ef881
[DEBUG] 2020-05-27 00:28:50.926 [task-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33ea8273
[DEBUG] 2020-05-27 00:28:50.926 [task-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4055110c
[DEBUG] 2020-05-27 00:28:50.934 [task-1] BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6af4a336] into BootstrapContext; was [null]
[DEBUG] 2020-05-27 00:28:50.934 [task-1] ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6af4a336) [was null]
[DEBUG] 2020-05-27 00:28:50.935 [task-1] BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@16368d18] into BootstrapContext; was [null]
[DEBUG] 2020-05-27 00:28:50.935 [task-1] BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@636dcd61] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@78050853]
[DEBUG] 2020-05-27 00:28:50.939 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for ExactUrl [processUrl='/login?error']
[DEBUG] 2020-05-27 00:28:50.941 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for ExactUrl [processUrl='/login']
[DEBUG] 2020-05-27 00:28:50.941 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for ExactUrl [processUrl='/login']
[DEBUG] 2020-05-27 00:28:50.941 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for Ant [pattern='/logout', POST]
[DEBUG] 2020-05-27 00:28:50.941 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for ExactUrl [processUrl='/login?logout']
[DEBUG] 2020-05-27 00:28:50.942 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for Ant [pattern='/']
[DEBUG] 2020-05-27 00:28:50.942 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'permitAll', for Ant [pattern='/registration']
[DEBUG] 2020-05-27 00:28:50.942 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'hasAuthority('DOCTOR')', for Ant [pattern='/doctor/**']
[DEBUG] 2020-05-27 00:28:50.942 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'hasAuthority('PATIENT')', for Ant [pattern='/patient/**']
[DEBUG] 2020-05-27 00:28:50.942 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'hasAuthority('NURSE')', for Ant [pattern='/nurse/**']
[DEBUG] 2020-05-27 00:28:50.942 [restartedMain] ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression 'authenticated', for any request
[DEBUG] 2020-05-27 00:28:50.947 [restartedMain] FilterSecurityInterceptor - Validated configuration attributes
[DEBUG] 2020-05-27 00:28:50.948 [task-1] BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6af4a336]
[DEBUG] 2020-05-27 00:28:50.948 [task-1] ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6af4a336]
[DEBUG] 2020-05-27 00:28:50.948 [restartedMain] FilterSecurityInterceptor - Validated configuration attributes
[INFO ] 2020-05-27 00:28:50.951 [restartedMain] DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e582f2d, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a64ce0f, org.springframework.security.web.header.HeaderWriterFilter@7df7e5b1, org.springframework.security.web.csrf.CsrfFilter@76cc8397, org.springframework.security.web.authentication.logout.LogoutFilter@40830838, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@472dc55f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b6e749, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@697d2de7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e5384f9, org.springframework.security.web.session.SessionManagementFilter@734ebbab, org.springframework.security.web.access.ExceptionTranslationFilter@50b491a7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@25cbfe71]
[DEBUG] 2020-05-27 00:28:50.956 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'webSecurityExpressionHandler'
[DEBUG] 2020-05-27 00:28:50.956 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'privilegeEvaluator'
[DEBUG] 2020-05-27 00:28:50.957 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-05-27 00:28:50.957 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-05-27 00:28:50.957 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestDataValueProcessor'
[DEBUG] 2020-05-27 00:28:50.958 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-05-27 00:28:50.958 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-05-27 00:28:50.958 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-05-27 00:28:50.958 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.959 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.959 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-05-27 00:28:50.959 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[DEBUG] 2020-05-27 00:28:50.959 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-05-27 00:28:50.960 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[DEBUG] 2020-05-27 00:28:50.960 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[DEBUG] 2020-05-27 00:28:50.960 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-05-27 00:28:50.961 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'error'
[DEBUG] 2020-05-27 00:28:50.961 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-05-27 00:28:50.962 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver'
[DEBUG] 2020-05-27 00:28:50.962 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-05-27 00:28:50.962 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-05-27 00:28:50.963 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[DEBUG] 2020-05-27 00:28:50.963 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:50.963 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[DEBUG] 2020-05-27 00:28:50.963 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-05-27 00:28:50.963 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-05-27 00:28:50.963 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[DEBUG] 2020-05-27 00:28:50.964 [task-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2020-05-27 00:28:50.965 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes'
[DEBUG] 2020-05-27 00:28:50.966 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController'
[DEBUG] 2020-05-27 00:28:50.967 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[DEBUG] 2020-05-27 00:28:50.969 [task-1] HikariConfig - HikariPool-1 - configuration:
[DEBUG] 2020-05-27 00:28:50.971 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[DEBUG] 2020-05-27 00:28:50.974 [task-1] HikariConfig - allowPoolSuspension.............false
[DEBUG] 2020-05-27 00:28:50.974 [task-1] HikariConfig - autoCommit......................true
[DEBUG] 2020-05-27 00:28:50.974 [task-1] HikariConfig - catalog.........................none
[DEBUG] 2020-05-27 00:28:50.975 [task-1] HikariConfig - connectionInitSql...............none
[DEBUG] 2020-05-27 00:28:50.975 [task-1] HikariConfig - connectionTestQuery.............none
[DEBUG] 2020-05-27 00:28:50.975 [task-1] HikariConfig - connectionTimeout...............30000
[DEBUG] 2020-05-27 00:28:50.975 [task-1] HikariConfig - dataSource......................none
[DEBUG] 2020-05-27 00:28:50.975 [task-1] HikariConfig - dataSourceClassName.............none
[DEBUG] 2020-05-27 00:28:50.975 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:50.975 [task-1] HikariConfig - dataSourceJNDI..................none
[DEBUG] 2020-05-27 00:28:50.975 [task-1] HikariConfig - dataSourceProperties............{password=<masked>}
[DEBUG] 2020-05-27 00:28:50.976 [task-1] HikariConfig - driverClassName................."com.mysql.cj.jdbc.Driver"
[DEBUG] 2020-05-27 00:28:50.976 [task-1] HikariConfig - exceptionOverrideClassName......none
[DEBUG] 2020-05-27 00:28:50.976 [task-1] HikariConfig - healthCheckProperties...........{}
[DEBUG] 2020-05-27 00:28:50.976 [task-1] HikariConfig - healthCheckRegistry.............none
[DEBUG] 2020-05-27 00:28:50.976 [task-1] HikariConfig - idleTimeout.....................600000
[DEBUG] 2020-05-27 00:28:50.976 [task-1] HikariConfig - initializationFailTimeout.......1
[DEBUG] 2020-05-27 00:28:50.976 [task-1] HikariConfig - isolateInternalQueries..........false
[DEBUG] 2020-05-27 00:28:50.976 [task-1] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/hospitaldb?useSSL=false&serverTimezone=UTC
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - leakDetectionThreshold..........0
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - maxLifetime.....................1800000
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - maximumPoolSize.................10
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - metricRegistry..................none
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - metricsTrackerFactory...........none
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - minimumIdle.....................10
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - password........................<masked>
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - poolName........................"HikariPool-1"
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - readOnly........................false
[DEBUG] 2020-05-27 00:28:50.977 [task-1] HikariConfig - registerMbeans..................false
[DEBUG] 2020-05-27 00:28:50.978 [task-1] HikariConfig - scheduledExecutor...............none
[DEBUG] 2020-05-27 00:28:50.978 [task-1] HikariConfig - schema..........................none
[DEBUG] 2020-05-27 00:28:50.978 [task-1] HikariConfig - threadFactory...................internal
[DEBUG] 2020-05-27 00:28:50.978 [task-1] HikariConfig - transactionIsolation............default
[DEBUG] 2020-05-27 00:28:50.978 [task-1] HikariConfig - username........................"root"
[DEBUG] 2020-05-27 00:28:50.978 [task-1] HikariConfig - validationTimeout...............5000
[INFO ] 2020-05-27 00:28:50.978 [task-1] HikariDataSource - HikariPool-1 - Starting...
[DEBUG] 2020-05-27 00:28:50.984 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'prescriptionRepo'
[DEBUG] 2020-05-27 00:28:51.032 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaMappingContext'
[DEBUG] 2020-05-27 00:28:51.032 [restartedMain] JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
[DEBUG] 2020-05-27 00:28:51.173 [task-1] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@18ca30f6
[INFO ] 2020-05-27 00:28:51.174 [task-1] HikariDataSource - HikariPool-1 - Start completed.
[DEBUG] 2020-05-27 00:28:51.179 [task-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.11
      major : 8
      minor : 0
[DEBUG] 2020-05-27 00:28:51.179 [task-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
[DEBUG] 2020-05-27 00:28:51.180 [task-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-05-27 00:28:51.192 [task-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-05-27 00:28:51.205 [task-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-05-27 00:28:51.247 [task-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-05-27 00:28:51.276 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[DEBUG] 2020-05-27 00:28:51.278 [task-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-05-27 00:28:51.281 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@65661b44
[DEBUG] 2020-05-27 00:28:51.282 [task-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34fd4b4f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@353ab527]
[DEBUG] 2020-05-27 00:28:51.284 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@245b117f
[DEBUG] 2020-05-27 00:28:51.305 [task-1] AnnotationBinder - Binding entity from annotated class: com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.311 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@15b59138
[DEBUG] 2020-05-27 00:28:51.315 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4474ee30
[DEBUG] 2020-05-27 00:28:51.327 [task-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-05-27 00:28:51.330 [task-1] EntityBinder - Import with entity name AppUser
[DEBUG] 2020-05-27 00:28:51.333 [task-1] EntityBinder - Bind entity com.example.demo.entity.AppUser on table users
[DEBUG] 2020-05-27 00:28:51.342 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d7fc7fa
[DEBUG] 2020-05-27 00:28:51.346 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@403ad6f5
[DEBUG] 2020-05-27 00:28:51.349 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@26d5b45
[DEBUG] 2020-05-27 00:28:51.357 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.361 [task-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-05-27 00:28:51.362 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.AppUser:id]
[DEBUG] 2020-05-27 00:28:51.363 [task-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-05-27 00:28:51.365 [task-1] PropertyBinder - Building property id
[DEBUG] 2020-05-27 00:28:51.370 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72a35668
[DEBUG] 2020-05-27 00:28:51.370 [task-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[DEBUG] 2020-05-27 00:28:51.371 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.371 [task-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-05-27 00:28:51.371 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.AppUser:email]
[DEBUG] 2020-05-27 00:28:51.371 [task-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-05-27 00:28:51.371 [task-1] PropertyBinder - Building property email
[DEBUG] 2020-05-27 00:28:51.375 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=enabled, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.375 [task-1] PropertyBinder - MetadataSourceProcessor property enabled with lazy=false
[DEBUG] 2020-05-27 00:28:51.375 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.AppUser:enabled]
[DEBUG] 2020-05-27 00:28:51.375 [task-1] SimpleValueBinder - building SimpleValue for enabled
[DEBUG] 2020-05-27 00:28:51.376 [task-1] PropertyBinder - Building property enabled
[DEBUG] 2020-05-27 00:28:51.376 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.376 [task-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-05-27 00:28:51.377 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.AppUser:name]
[DEBUG] 2020-05-27 00:28:51.377 [task-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-05-27 00:28:51.377 [task-1] PropertyBinder - Building property name
[DEBUG] 2020-05-27 00:28:51.377 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.377 [task-1] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-05-27 00:28:51.377 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.AppUser:password]
[DEBUG] 2020-05-27 00:28:51.377 [task-1] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-05-27 00:28:51.377 [task-1] PropertyBinder - Building property password
[DEBUG] 2020-05-27 00:28:51.378 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='role', referencedColumn='role_id', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.378 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.382 [task-1] PropertyBinder - Building property role
[DEBUG] 2020-05-27 00:28:51.382 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=surname, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.382 [task-1] PropertyBinder - MetadataSourceProcessor property surname with lazy=false
[DEBUG] 2020-05-27 00:28:51.382 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.AppUser:surname]
[DEBUG] 2020-05-27 00:28:51.382 [task-1] SimpleValueBinder - building SimpleValue for surname
[DEBUG] 2020-05-27 00:28:51.382 [task-1] PropertyBinder - Building property surname
[DEBUG] 2020-05-27 00:28:51.383 [task-1] AnnotationBinder - Binding entity from annotated class: com.example.demo.entity.Diagnosis
[DEBUG] 2020-05-27 00:28:51.383 [task-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-05-27 00:28:51.383 [task-1] EntityBinder - Import with entity name Diagnosis
[DEBUG] 2020-05-27 00:28:51.383 [task-1] EntityBinder - Bind entity com.example.demo.entity.Diagnosis on table diagnosis_table
[DEBUG] 2020-05-27 00:28:51.384 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(diagnosis_table), mappingColumn=id_diagnosis, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.384 [task-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-05-27 00:28:51.384 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.Diagnosis:id]
[DEBUG] 2020-05-27 00:28:51.384 [task-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-05-27 00:28:51.384 [task-1] PropertyBinder - Building property id
[DEBUG] 2020-05-27 00:28:51.384 [task-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_diagnosis)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[DEBUG] 2020-05-27 00:28:51.384 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(diagnosis_table), mappingColumn=diagnosis_difficulty, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.384 [task-1] PropertyBinder - MetadataSourceProcessor property difficulty with lazy=false
[DEBUG] 2020-05-27 00:28:51.384 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.Diagnosis:difficulty]
[DEBUG] 2020-05-27 00:28:51.385 [task-1] SimpleValueBinder - building SimpleValue for difficulty
[DEBUG] 2020-05-27 00:28:51.385 [task-1] PropertyBinder - Building property difficulty
[DEBUG] 2020-05-27 00:28:51.385 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(diagnosis_table), mappingColumn=diagnosis_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.385 [task-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-05-27 00:28:51.385 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.Diagnosis:name]
[DEBUG] 2020-05-27 00:28:51.385 [task-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-05-27 00:28:51.385 [task-1] PropertyBinder - Building property name
[DEBUG] 2020-05-27 00:28:51.385 [task-1] AnnotationBinder - Binding entity from annotated class: com.example.demo.entity.MedicineList
[DEBUG] 2020-05-27 00:28:51.385 [task-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-05-27 00:28:51.385 [task-1] EntityBinder - Import with entity name MedicineList
[DEBUG] 2020-05-27 00:28:51.386 [task-1] EntityBinder - Bind entity com.example.demo.entity.MedicineList on table medicine_list
[DEBUG] 2020-05-27 00:28:51.386 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(medicine_list), mappingColumn=medicine_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.386 [task-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-05-27 00:28:51.386 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.MedicineList:id]
[DEBUG] 2020-05-27 00:28:51.386 [task-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-05-27 00:28:51.386 [task-1] PropertyBinder - Building property id
[DEBUG] 2020-05-27 00:28:51.387 [task-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(medicine_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[DEBUG] 2020-05-27 00:28:51.387 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(medicine_list), mappingColumn=medicine_amount, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.387 [task-1] PropertyBinder - MetadataSourceProcessor property amount with lazy=false
[DEBUG] 2020-05-27 00:28:51.387 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.MedicineList:amount]
[DEBUG] 2020-05-27 00:28:51.387 [task-1] SimpleValueBinder - building SimpleValue for amount
[DEBUG] 2020-05-27 00:28:51.387 [task-1] PropertyBinder - Building property amount
[DEBUG] 2020-05-27 00:28:51.387 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(medicine_list), mappingColumn=medicine_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.387 [task-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-05-27 00:28:51.387 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.MedicineList:name]
[DEBUG] 2020-05-27 00:28:51.387 [task-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-05-27 00:28:51.387 [task-1] PropertyBinder - Building property name
[DEBUG] 2020-05-27 00:28:51.387 [task-1] AnnotationBinder - Binding entity from annotated class: com.example.demo.entity.PatientData
[DEBUG] 2020-05-27 00:28:51.387 [task-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-05-27 00:28:51.387 [task-1] EntityBinder - Import with entity name PatientData
[DEBUG] 2020-05-27 00:28:51.388 [task-1] EntityBinder - Bind entity com.example.demo.entity.PatientData on table patient_data
[DEBUG] 2020-05-27 00:28:51.392 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.393 [task-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-05-27 00:28:51.393 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.PatientData:id]
[DEBUG] 2020-05-27 00:28:51.393 [task-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-05-27 00:28:51.393 [task-1] PropertyBinder - Building property id
[DEBUG] 2020-05-27 00:28:51.393 [task-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[DEBUG] 2020-05-27 00:28:51.394 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.395 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@680bd843
[DEBUG] 2020-05-27 00:28:51.395 [HikariPool-1 connection adder] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[DEBUG] 2020-05-27 00:28:51.399 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.399 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=current_prescriptions_list_key, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.399 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='currentPrescriptionsList_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-05-27 00:28:51.400 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='patient_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.400 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='prescription_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.400 [task-1] CollectionBinder - Collection role: com.example.demo.entity.PatientData.currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.401 [task-1] PropertyBinder - Building property currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.402 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='diagnosis_id', referencedColumn='id_diagnosis', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.402 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=diagnosis, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.402 [task-1] PropertyBinder - Building property diagnosis
[DEBUG] 2020-05-27 00:28:51.402 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='doctor_id', referencedColumn='user_id', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.402 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=doctor, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.403 [task-1] PropertyBinder - Building property doctor
[DEBUG] 2020-05-27 00:28:51.403 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='nurse_id', referencedColumn='user_id', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.403 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=nurse, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.403 [task-1] PropertyBinder - Building property nurse
[DEBUG] 2020-05-27 00:28:51.403 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='patient_id', referencedColumn='user_id', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.403 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=patient, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.403 [task-1] PropertyBinder - Building property patient
[DEBUG] 2020-05-27 00:28:51.403 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=patient_status, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.403 [task-1] PropertyBinder - MetadataSourceProcessor property patientStatus with lazy=false
[DEBUG] 2020-05-27 00:28:51.403 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.PatientData:patientStatus]
[DEBUG] 2020-05-27 00:28:51.403 [task-1] SimpleValueBinder - building SimpleValue for patientStatus
[DEBUG] 2020-05-27 00:28:51.403 [task-1] PropertyBinder - Building property patientStatus
[DEBUG] 2020-05-27 00:28:51.403 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.404 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.404 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(patient_data), mappingColumn=prescription_history_key, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.404 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='prescriptionHistory_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-05-27 00:28:51.404 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='patient_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.404 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='prescription_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.404 [task-1] CollectionBinder - Collection role: com.example.demo.entity.PatientData.prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.404 [task-1] PropertyBinder - Building property prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.404 [task-1] AnnotationBinder - Binding entity from annotated class: com.example.demo.entity.Prescription
[DEBUG] 2020-05-27 00:28:51.404 [task-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-05-27 00:28:51.404 [task-1] EntityBinder - Import with entity name Prescription
[DEBUG] 2020-05-27 00:28:51.404 [task-1] EntityBinder - Bind entity com.example.demo.entity.Prescription on table prescription_table
[DEBUG] 2020-05-27 00:28:51.405 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=id_prescription, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.405 [task-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-05-27 00:28:51.405 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.Prescription:id]
[DEBUG] 2020-05-27 00:28:51.405 [task-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-05-27 00:28:51.405 [task-1] PropertyBinder - Building property id
[DEBUG] 2020-05-27 00:28:51.405 [task-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_prescription)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[DEBUG] 2020-05-27 00:28:51.405 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=prescription_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.406 [task-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-05-27 00:28:51.406 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.Prescription:name]
[DEBUG] 2020-05-27 00:28:51.406 [task-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-05-27 00:28:51.406 [task-1] PropertyBinder - Building property name
[DEBUG] 2020-05-27 00:28:51.406 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.406 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.406 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=patient_current_prescriptions_key, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.406 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='patientCurrentPrescriptions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-05-27 00:28:51.407 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='prescription_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.407 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='patient_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.407 [task-1] CollectionBinder - Collection role: com.example.demo.entity.Prescription.patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.407 [task-1] PropertyBinder - Building property patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.407 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=prescription_class, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.407 [task-1] PropertyBinder - MetadataSourceProcessor property prescriptionClass with lazy=false
[DEBUG] 2020-05-27 00:28:51.407 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.Prescription:prescriptionClass]
[DEBUG] 2020-05-27 00:28:51.407 [task-1] SimpleValueBinder - building SimpleValue for prescriptionClass
[DEBUG] 2020-05-27 00:28:51.408 [task-1] PropertyBinder - Building property prescriptionClass
[DEBUG] 2020-05-27 00:28:51.408 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.408 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.408 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(prescription_table), mappingColumn=prescriptions_key, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.408 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='prescriptions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-05-27 00:28:51.408 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='prescription_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.408 [task-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='patient_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-05-27 00:28:51.408 [task-1] CollectionBinder - Collection role: com.example.demo.entity.Prescription.prescriptions
[DEBUG] 2020-05-27 00:28:51.408 [task-1] PropertyBinder - Building property prescriptions
[DEBUG] 2020-05-27 00:28:51.409 [task-1] AnnotationBinder - Binding entity from annotated class: com.example.demo.entity.Role
[DEBUG] 2020-05-27 00:28:51.409 [task-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-05-27 00:28:51.409 [task-1] EntityBinder - Import with entity name Role
[DEBUG] 2020-05-27 00:28:51.409 [task-1] EntityBinder - Bind entity com.example.demo.entity.Role on table user_roles
[DEBUG] 2020-05-27 00:28:51.410 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.411 [task-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-05-27 00:28:51.411 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.Role:id]
[DEBUG] 2020-05-27 00:28:51.411 [task-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-05-27 00:28:51.411 [task-1] PropertyBinder - Building property id
[DEBUG] 2020-05-27 00:28:51.411 [task-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[DEBUG] 2020-05-27 00:28:51.411 [task-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-05-27 00:28:51.411 [task-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-05-27 00:28:51.411 [task-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.demo.entity.Role:name]
[DEBUG] 2020-05-27 00:28:51.411 [task-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-05-27 00:28:51.411 [task-1] PropertyBinder - Building property name
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for enabled
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for surname
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for difficulty
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for amount
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-05-27 00:28:51.413 [task-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-05-27 00:28:51.414 [task-1] SimpleValueBinder - Starting fillSimpleValue for patientStatus
[DEBUG] 2020-05-27 00:28:51.414 [task-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-05-27 00:28:51.414 [task-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-05-27 00:28:51.414 [task-1] SimpleValueBinder - Starting fillSimpleValue for prescriptionClass
[DEBUG] 2020-05-27 00:28:51.414 [task-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-05-27 00:28:51.414 [task-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-05-27 00:28:51.419 [task-1] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-05-27 00:28:51.420 [task-1] PrimaryKey - Forcing column [id_diagnosis] to be non-null as it is part of the primary key for table [diagnosis_table]
[DEBUG] 2020-05-27 00:28:51.420 [task-1] PrimaryKey - Forcing column [medicine_id] to be non-null as it is part of the primary key for table [medicine_list]
[DEBUG] 2020-05-27 00:28:51.420 [task-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [patient_data]
[DEBUG] 2020-05-27 00:28:51.420 [task-1] PrimaryKey - Forcing column [id_prescription] to be non-null as it is part of the primary key for table [prescription_table]
[DEBUG] 2020-05-27 00:28:51.420 [task-1] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-05-27 00:28:51.420 [task-1] CollectionSecondPass - Second pass for collection: com.example.demo.entity.Prescription.prescriptions
[DEBUG] 2020-05-27 00:28:51.420 [task-1] CollectionBinder - Binding as ManyToMany: com.example.demo.entity.Prescription.prescriptions
[DEBUG] 2020-05-27 00:28:51.422 [task-1] PrimaryKey - Forcing column [prescription_id] to be non-null as it is part of the primary key for table [prescription_history]
[DEBUG] 2020-05-27 00:28:51.422 [task-1] PrimaryKey - Forcing column [patient_id] to be non-null as it is part of the primary key for table [prescription_history]
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionSecondPass - Mapped collection key: prescription_id, element: patient_id
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionSecondPass - Second pass for collection: com.example.demo.entity.Prescription.patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionBinder - Binding as ManyToMany: com.example.demo.entity.Prescription.patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.423 [task-1] PrimaryKey - Forcing column [prescription_id] to be non-null as it is part of the primary key for table [current_prescriptions]
[DEBUG] 2020-05-27 00:28:51.423 [task-1] PrimaryKey - Forcing column [patient_id] to be non-null as it is part of the primary key for table [current_prescriptions]
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionSecondPass - Mapped collection key: prescription_id, element: patient_id
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionSecondPass - Second pass for collection: com.example.demo.entity.PatientData.prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionBinder - Binding as ManyToMany: com.example.demo.entity.PatientData.prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.423 [task-1] PrimaryKey - Forcing column [patient_id] to be non-null as it is part of the primary key for table [prescription_history]
[DEBUG] 2020-05-27 00:28:51.423 [task-1] PrimaryKey - Forcing column [prescription_id] to be non-null as it is part of the primary key for table [prescription_history]
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionSecondPass - Mapped collection key: patient_id, element: prescription_id
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionSecondPass - Second pass for collection: com.example.demo.entity.PatientData.currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionBinder - Binding as ManyToMany: com.example.demo.entity.PatientData.currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.423 [task-1] PrimaryKey - Forcing column [patient_id] to be non-null as it is part of the primary key for table [current_prescriptions]
[DEBUG] 2020-05-27 00:28:51.423 [task-1] PrimaryKey - Forcing column [prescription_id] to be non-null as it is part of the primary key for table [current_prescriptions]
[DEBUG] 2020-05-27 00:28:51.423 [task-1] CollectionSecondPass - Mapped collection key: patient_id, element: prescription_id
[DEBUG] 2020-05-27 00:28:51.423 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.PatientData
[DEBUG] 2020-05-27 00:28:51.427 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.Prescription
[DEBUG] 2020-05-27 00:28:51.428 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.Diagnosis
[DEBUG] 2020-05-27 00:28:51.428 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.429 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.429 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.429 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.PatientData
[DEBUG] 2020-05-27 00:28:51.429 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.Prescription
[DEBUG] 2020-05-27 00:28:51.429 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.Role
[DEBUG] 2020-05-27 00:28:51.430 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.PatientData
[DEBUG] 2020-05-27 00:28:51.430 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.Prescription
[DEBUG] 2020-05-27 00:28:51.430 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.Diagnosis
[DEBUG] 2020-05-27 00:28:51.430 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.430 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.430 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.430 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.PatientData
[DEBUG] 2020-05-27 00:28:51.431 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.Prescription
[DEBUG] 2020-05-27 00:28:51.431 [task-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.example.demo.entity.Role
[DEBUG] 2020-05-27 00:28:51.458 [task-1] SessionFactoryImpl - Building session factory
[DEBUG] 2020-05-27 00:28:51.459 [task-1] Settings - SessionFactory name : null
[DEBUG] 2020-05-27 00:28:51.459 [task-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-05-27 00:28:51.459 [task-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-05-27 00:28:51.459 [task-1] Settings - Statistics: disabled
[DEBUG] 2020-05-27 00:28:51.459 [task-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-05-27 00:28:51.459 [task-1] Settings - Default entity-mode: pojo
[DEBUG] 2020-05-27 00:28:51.459 [task-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-05-27 00:28:51.459 [task-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Default batch fetch size: -1
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Default null ordering: NONE
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Query language substitutions: {}
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Named query checking : enabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Second-level cache: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Second-level query cache: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Second-level query cache factory: null
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Second-level cache region prefix: null
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JDBC batch size: 15
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Scrollable result sets: enabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Wrap result sets: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JDBC result set fetch size: null
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Connection release mode: ON_CLOSE
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JPA compliance - query : disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JPA compliance - lists : disabled
[DEBUG] 2020-05-27 00:28:51.460 [task-1] Settings - JPA compliance - transactions : disabled
[DEBUG] 2020-05-27 00:28:51.520 [task-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-05-27 00:28:51.520 [task-1] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=12, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4e3cba54, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=F:\GitRepository\Study\demo\target\classes;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-mustache\2.3.0.RELEASE\spring-boot-starter-mustache-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\com\samskivert\jmustache\1.15\jmustache-1.15.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.3.0.RELEASE\spring-boot-starter-thymeleaf-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Liza\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Liza\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Liza\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\Liza\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-devtools\2.3.0.RELEASE\spring-boot-devtools-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot\2.3.0.RELEASE\spring-boot-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-context\5.2.6.RELEASE\spring-context-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.0.RELEASE\spring-boot-autoconfigure-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.3.0.RELEASE\spring-boot-starter-web-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.3.0.RELEASE\spring-boot-starter-json-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;C:\Users\Liza\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;C:\Users\Liza\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;C:\Users\Liza\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.0\jackson-datatype-jdk8-2.11.0.jar;C:\Users\Liza\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.0\jackson-datatype-jsr310-2.11.0.jar;C:\Users\Liza\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.0\jackson-module-parameter-names-2.11.0.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.0.RELEASE\spring-boot-starter-tomcat-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.35\tomcat-embed-core-9.0.35.jar;C:\Users\Liza\.m2\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;C:\Users\Liza\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.35\tomcat-embed-websocket-9.0.35.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-web\5.2.6.RELEASE\spring-web-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-beans\5.2.6.RELEASE\spring-beans-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-webmvc\5.2.6.RELEASE\spring-webmvc-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-expression\5.2.6.RELEASE\spring-expression-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.3.0.RELEASE\spring-boot-starter-data-jpa-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.3.0.RELEASE\spring-boot-starter-aop-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\aspectj\aspectjweaver\1.9.5\aspectjweaver-1.9.5.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.3.0.RELEASE\spring-boot-starter-jdbc-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\com\zaxxer\HikariCP\3.4.5\HikariCP-3.4.5.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-jdbc\5.2.6.RELEASE\spring-jdbc-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\Liza\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Liza\.m2\repository\org\hibernate\hibernate-core\5.4.15.Final\hibernate-core-5.4.15.Final.jar;C:\Users\Liza\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\Liza\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Liza\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\Liza\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Liza\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\Liza\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Liza\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\Liza\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Liza\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.3\jaxb-runtime-2.3.3.jar;C:\Users\Liza\.m2\repository\org\glassfish\jaxb\txw2\2.3.3\txw2-2.3.3.jar;C:\Users\Liza\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.11\istack-commons-runtime-3.0.11.jar;C:\Users\Liza\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Liza\.m2\repository\org\springframework\data\spring-data-jpa\2.3.0.RELEASE\spring-data-jpa-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\data\spring-data-commons\2.3.0.RELEASE\spring-data-commons-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-orm\5.2.6.RELEASE\spring-orm-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-tx\5.2.6.RELEASE\spring-tx-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-aspects\5.2.6.RELEASE\spring-aspects-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\mysql\mysql-connector-java\8.0.20\mysql-connector-java-8.0.20.jar;C:\Users\Liza\.m2\repository\org\springframework\security\spring-security-core\5.3.2.RELEASE\spring-security-core-5.3.2.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\security\spring-security-web\5.3.2.RELEASE\spring-security-web-5.3.2.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-core\5.2.6.RELEASE\spring-core-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-jcl\5.2.6.RELEASE\spring-jcl-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Liza\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.3.0.RELEASE\spring-boot-starter-security-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\spring-aop\5.2.6.RELEASE\spring-aop-5.2.6.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\security\spring-security-config\5.3.2.RELEASE\spring-security-config-5.3.2.RELEASE.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.0.RELEASE\spring-boot-starter-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Liza\.m2\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;C:\Users\Liza\.m2\repository\org\springframework\boot\spring-boot-starter-log4j2\2.3.0.RELEASE\spring-boot-starter-log4j2-2.3.0.RELEASE.jar;C:\Users\Liza\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.13.2\log4j-slf4j-impl-2.13.2.jar;C:\Users\Liza\.m2\repository\org\apache\logging\log4j\log4j-jul\2.13.2\log4j-jul-2.13.2.jar;C:\Users\Liza\.m2\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;C:\Users\Liza\.m2\repository\org\apache\logging\log4j\log4j-api\2.13.3\log4j-api-2.13.3.jar;C:\Users\Liza\.m2\repository\org\apache\logging\log4j\log4j-core\2.13.3\log4j-core-2.13.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Europe/Kiev, user.country.format=UA, java.vm.specification.version=12, os.name=Windows 10, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Program Files\Java\jdk-12.0.1\bin, sun.java.command=com.example.demo.DemoApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@a15e66d, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=C:\Users\Liza, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-04-16, java.home=C:\Program Files\Java\jdk-12.0.1, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=12.0.1+12, user.name=Liza, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Liza\AppData\Local\Temp\, catalina.home=C:\Users\Liza\AppData\Local\Temp\tomcat.1725626010938229948.8077, java.version=12.0.1, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=F:\GitRepository\Study\demo, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10720, sun.os.patch.level=, catalina.base=C:\Users\Liza\AppData\Local\Temp\tomcat.1725626010938229948.8077, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7b34d8b7, java.library.path=C:\Program Files\Java\jdk-12.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\Liza\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Liza\AppData\Local\Programs\Python\Python38\;C:\Program Files\Java\jdk-12.0.1\bin;C:\Users\Liza\AppData\Local\GitHubDesktop\bin;C:\Users\Liza\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=12.0.1+12, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=56.0}
[DEBUG] 2020-05-27 00:28:51.536 [task-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-05-27 00:28:51.536 [task-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-05-27 00:28:51.536 [task-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34fd4b4f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28b697bb]
[DEBUG] 2020-05-27 00:28:51.570 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.Diagnosis] is safe
[DEBUG] 2020-05-27 00:28:51.570 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.Diagnosis
[DEBUG] 2020-05-27 00:28:51.580 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.Diagnosis] is safe
[DEBUG] 2020-05-27 00:28:51.581 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.Diagnosis
[DEBUG] 2020-05-27 00:28:51.735 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.MedicineList] is safe
[DEBUG] 2020-05-27 00:28:51.735 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.MedicineList
[DEBUG] 2020-05-27 00:28:51.736 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.MedicineList] is safe
[DEBUG] 2020-05-27 00:28:51.736 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.MedicineList
[DEBUG] 2020-05-27 00:28:51.748 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.PatientData] is safe
[DEBUG] 2020-05-27 00:28:51.748 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.PatientData
[DEBUG] 2020-05-27 00:28:51.750 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.PatientData] is safe
[DEBUG] 2020-05-27 00:28:51.750 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.PatientData
[DEBUG] 2020-05-27 00:28:51.772 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.Prescription] is safe
[DEBUG] 2020-05-27 00:28:51.772 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.Prescription
[DEBUG] 2020-05-27 00:28:51.773 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.Prescription] is safe
[DEBUG] 2020-05-27 00:28:51.773 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.Prescription
[DEBUG] 2020-05-27 00:28:51.782 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.AppUser] is safe
[DEBUG] 2020-05-27 00:28:51.782 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.782 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.AppUser] is safe
[DEBUG] 2020-05-27 00:28:51.782 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.794 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.Role] is safe
[DEBUG] 2020-05-27 00:28:51.795 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.Role
[DEBUG] 2020-05-27 00:28:51.795 [task-1] ClassLoaderAccessImpl - Not known whether passed class name [com.example.demo.entity.Role] is safe
[DEBUG] 2020-05-27 00:28:51.795 [task-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.demo.entity.Role
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister - Static SQL for collection: com.example.demo.entity.Prescription.prescriptions
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row insert: insert into prescription_history (prescription_id, patient_id) values (?, ?)
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row update: update prescription_history set patient_id=? where prescription_id=? and patient_id=?
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row delete: delete from prescription_history where prescription_id=? and patient_id=?
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  One-shot delete: delete from prescription_history where prescription_id=?
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister - Static SQL for collection: com.example.demo.entity.Prescription.patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row insert: insert into current_prescriptions (prescription_id, patient_id) values (?, ?)
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row update: update current_prescriptions set patient_id=? where prescription_id=? and patient_id=?
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row delete: delete from current_prescriptions where prescription_id=? and patient_id=?
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  One-shot delete: delete from current_prescriptions where prescription_id=?
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister - Static SQL for collection: com.example.demo.entity.PatientData.currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row insert: insert into current_prescriptions (patient_id, prescription_id) values (?, ?)
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row update: update current_prescriptions set prescription_id=? where patient_id=? and prescription_id=?
[DEBUG] 2020-05-27 00:28:51.809 [task-1] AbstractCollectionPersister -  Row delete: delete from current_prescriptions where patient_id=? and prescription_id=?
[DEBUG] 2020-05-27 00:28:51.810 [task-1] AbstractCollectionPersister -  One-shot delete: delete from current_prescriptions where patient_id=?
[DEBUG] 2020-05-27 00:28:51.810 [task-1] AbstractCollectionPersister - Static SQL for collection: com.example.demo.entity.PatientData.prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.810 [task-1] AbstractCollectionPersister -  Row insert: insert into prescription_history (patient_id, prescription_id) values (?, ?)
[DEBUG] 2020-05-27 00:28:51.810 [task-1] AbstractCollectionPersister -  Row update: update prescription_history set prescription_id=? where patient_id=? and prescription_id=?
[DEBUG] 2020-05-27 00:28:51.810 [task-1] AbstractCollectionPersister -  Row delete: delete from prescription_history where patient_id=? and prescription_id=?
[DEBUG] 2020-05-27 00:28:51.810 [task-1] AbstractCollectionPersister -  One-shot delete: delete from prescription_history where patient_id=?
[DEBUG] 2020-05-27 00:28:51.812 [task-1] AbstractEntityPersister - Static SQL for entity: com.example.demo.entity.Diagnosis
[DEBUG] 2020-05-27 00:28:51.812 [task-1] AbstractEntityPersister -  Version select: select id_diagnosis from diagnosis_table where id_diagnosis =?
[DEBUG] 2020-05-27 00:28:51.812 [task-1] AbstractEntityPersister -  Snapshot select: select diagnosis_.id_diagnosis, diagnosis_.diagnosis_difficulty as diagnosi2_1_, diagnosis_.diagnosis_name as diagnosi3_1_ from diagnosis_table diagnosis_ where diagnosis_.id_diagnosis=?
[DEBUG] 2020-05-27 00:28:51.812 [task-1] AbstractEntityPersister -  Insert 0: insert into diagnosis_table (diagnosis_difficulty, diagnosis_name, id_diagnosis) values (?, ?, ?)
[DEBUG] 2020-05-27 00:28:51.812 [task-1] AbstractEntityPersister -  Update 0: update diagnosis_table set diagnosis_difficulty=?, diagnosis_name=? where id_diagnosis=?
[DEBUG] 2020-05-27 00:28:51.812 [task-1] AbstractEntityPersister -  Delete 0: delete from diagnosis_table where id_diagnosis=?
[DEBUG] 2020-05-27 00:28:51.828 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36870180]
[DEBUG] 2020-05-27 00:28:51.829 [task-1] MetamodelGraphWalker - Visiting attribute path : difficulty
[DEBUG] 2020-05-27 00:28:51.829 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.829 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.838 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.841 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.Diagnosis)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.Diagnosis, querySpaceUid=<gen:0>, path=com.example.demo.entity.Diagnosis)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.Diagnosis)
          - SQL table alias mapping - diagnosis0_
          - alias suffix - 0_
          - suffixed key columns - {id_diagn1_1_0_}

[DEBUG] 2020-05-27 00:28:51.843 [task-1] EntityLoader - Static select for entity com.example.demo.entity.Diagnosis [NONE]: select diagnosis0_.id_diagnosis as id_diagn1_1_0_, diagnosis0_.diagnosis_difficulty as diagnosi2_1_0_, diagnosis0_.diagnosis_name as diagnosi3_1_0_ from diagnosis_table diagnosis0_ where diagnosis0_.id_diagnosis=?
[DEBUG] 2020-05-27 00:28:51.843 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b41887]
[DEBUG] 2020-05-27 00:28:51.843 [task-1] MetamodelGraphWalker - Visiting attribute path : difficulty
[DEBUG] 2020-05-27 00:28:51.843 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.843 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.843 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.843 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.Diagnosis)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.Diagnosis, querySpaceUid=<gen:0>, path=com.example.demo.entity.Diagnosis)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.Diagnosis)
          - SQL table alias mapping - diagnosis0_
          - alias suffix - 0_
          - suffixed key columns - {id_diagn1_1_0_}

[DEBUG] 2020-05-27 00:28:51.843 [task-1] EntityLoader - Static select for entity com.example.demo.entity.Diagnosis [READ]: select diagnosis0_.id_diagnosis as id_diagn1_1_0_, diagnosis0_.diagnosis_difficulty as diagnosi2_1_0_, diagnosis0_.diagnosis_name as diagnosi3_1_0_ from diagnosis_table diagnosis0_ where diagnosis0_.id_diagnosis=?
[DEBUG] 2020-05-27 00:28:51.851 [task-1] Loader - Static select for action ACTION_MERGE on entity com.example.demo.entity.Diagnosis: select diagnosis0_.id_diagnosis as id_diagn1_1_0_, diagnosis0_.diagnosis_difficulty as diagnosi2_1_0_, diagnosis0_.diagnosis_name as diagnosi3_1_0_ from diagnosis_table diagnosis0_ where diagnosis0_.id_diagnosis=?
[DEBUG] 2020-05-27 00:28:51.851 [task-1] Loader - Static select for action ACTION_REFRESH on entity com.example.demo.entity.Diagnosis: select diagnosis0_.id_diagnosis as id_diagn1_1_0_, diagnosis0_.diagnosis_difficulty as diagnosi2_1_0_, diagnosis0_.diagnosis_name as diagnosi3_1_0_ from diagnosis_table diagnosis0_ where diagnosis0_.id_diagnosis=?
[DEBUG] 2020-05-27 00:28:51.851 [task-1] AbstractEntityPersister - Static SQL for entity: com.example.demo.entity.MedicineList
[DEBUG] 2020-05-27 00:28:51.851 [task-1] AbstractEntityPersister -  Version select: select medicine_id from medicine_list where medicine_id =?
[DEBUG] 2020-05-27 00:28:51.851 [task-1] AbstractEntityPersister -  Snapshot select: select medicineli_.medicine_id, medicineli_.medicine_amount as medicine2_2_, medicineli_.medicine_name as medicine3_2_ from medicine_list medicineli_ where medicineli_.medicine_id=?
[DEBUG] 2020-05-27 00:28:51.851 [task-1] AbstractEntityPersister -  Insert 0: insert into medicine_list (medicine_amount, medicine_name, medicine_id) values (?, ?, ?)
[DEBUG] 2020-05-27 00:28:51.851 [task-1] AbstractEntityPersister -  Update 0: update medicine_list set medicine_amount=?, medicine_name=? where medicine_id=?
[DEBUG] 2020-05-27 00:28:51.851 [task-1] AbstractEntityPersister -  Delete 0: delete from medicine_list where medicine_id=?
[DEBUG] 2020-05-27 00:28:51.851 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c919a7e]
[DEBUG] 2020-05-27 00:28:51.851 [task-1] MetamodelGraphWalker - Visiting attribute path : amount
[DEBUG] 2020-05-27 00:28:51.851 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.851 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.852 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.852 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.MedicineList)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.MedicineList, querySpaceUid=<gen:0>, path=com.example.demo.entity.MedicineList)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.MedicineList)
          - SQL table alias mapping - medicineli0_
          - alias suffix - 0_
          - suffixed key columns - {medicine1_2_0_}

[DEBUG] 2020-05-27 00:28:51.852 [task-1] EntityLoader - Static select for entity com.example.demo.entity.MedicineList [NONE]: select medicineli0_.medicine_id as medicine1_2_0_, medicineli0_.medicine_amount as medicine2_2_0_, medicineli0_.medicine_name as medicine3_2_0_ from medicine_list medicineli0_ where medicineli0_.medicine_id=?
[DEBUG] 2020-05-27 00:28:51.852 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@729a8014]
[DEBUG] 2020-05-27 00:28:51.852 [task-1] MetamodelGraphWalker - Visiting attribute path : amount
[DEBUG] 2020-05-27 00:28:51.852 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.852 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.852 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.852 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.MedicineList)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.MedicineList, querySpaceUid=<gen:0>, path=com.example.demo.entity.MedicineList)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.MedicineList)
          - SQL table alias mapping - medicineli0_
          - alias suffix - 0_
          - suffixed key columns - {medicine1_2_0_}

[DEBUG] 2020-05-27 00:28:51.852 [task-1] EntityLoader - Static select for entity com.example.demo.entity.MedicineList [READ]: select medicineli0_.medicine_id as medicine1_2_0_, medicineli0_.medicine_amount as medicine2_2_0_, medicineli0_.medicine_name as medicine3_2_0_ from medicine_list medicineli0_ where medicineli0_.medicine_id=?
[DEBUG] 2020-05-27 00:28:51.853 [task-1] Loader - Static select for action ACTION_MERGE on entity com.example.demo.entity.MedicineList: select medicineli0_.medicine_id as medicine1_2_0_, medicineli0_.medicine_amount as medicine2_2_0_, medicineli0_.medicine_name as medicine3_2_0_ from medicine_list medicineli0_ where medicineli0_.medicine_id=?
[DEBUG] 2020-05-27 00:28:51.853 [task-1] Loader - Static select for action ACTION_REFRESH on entity com.example.demo.entity.MedicineList: select medicineli0_.medicine_id as medicine1_2_0_, medicineli0_.medicine_amount as medicine2_2_0_, medicineli0_.medicine_name as medicine3_2_0_ from medicine_list medicineli0_ where medicineli0_.medicine_id=?
[DEBUG] 2020-05-27 00:28:51.853 [task-1] AbstractEntityPersister - Static SQL for entity: com.example.demo.entity.PatientData
[DEBUG] 2020-05-27 00:28:51.853 [task-1] AbstractEntityPersister -  Version select: select id from patient_data where id =?
[DEBUG] 2020-05-27 00:28:51.853 [task-1] AbstractEntityPersister -  Snapshot select: select patientdat_.id, patientdat_.diagnosis_id as diagnosi3_3_, patientdat_.doctor_id as doctor_i4_3_, patientdat_.nurse_id as nurse_id5_3_, patientdat_.patient_id as patient_6_3_, patientdat_.patient_status as patient_2_3_ from patient_data patientdat_ where patientdat_.id=?
[DEBUG] 2020-05-27 00:28:51.853 [task-1] AbstractEntityPersister -  Insert 0: insert into patient_data (diagnosis_id, doctor_id, nurse_id, patient_id, patient_status, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-05-27 00:28:51.853 [task-1] AbstractEntityPersister -  Update 0: update patient_data set diagnosis_id=?, doctor_id=?, nurse_id=?, patient_id=?, patient_status=? where id=?
[DEBUG] 2020-05-27 00:28:51.853 [task-1] AbstractEntityPersister -  Delete 0: delete from patient_data where id=?
[DEBUG] 2020-05-27 00:28:51.853 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24df1405]
[DEBUG] 2020-05-27 00:28:51.853 [task-1] MetamodelGraphWalker - Visiting attribute path : currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.857 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b2951a8]
[DEBUG] 2020-05-27 00:28:51.858 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d7498c6]
[DEBUG] 2020-05-27 00:28:51.858 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis
[DEBUG] 2020-05-27 00:28:51.859 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0248e9]
[DEBUG] 2020-05-27 00:28:51.860 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis.difficulty
[DEBUG] 2020-05-27 00:28:51.860 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis.name
[DEBUG] 2020-05-27 00:28:51.860 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor
[DEBUG] 2020-05-27 00:28:51.860 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e379e31]
[DEBUG] 2020-05-27 00:28:51.860 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.email
[DEBUG] 2020-05-27 00:28:51.860 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.enabled
[DEBUG] 2020-05-27 00:28:51.860 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.name
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.password
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.role
[DEBUG] 2020-05-27 00:28:51.861 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3826fc5d]
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.role.name
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.surname
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse
[DEBUG] 2020-05-27 00:28:51.861 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@127c6877]
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.email
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.enabled
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.name
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.password
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.role
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Property path deemed to be circular : nurse.role
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.surname
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : patient
[DEBUG] 2020-05-27 00:28:51.861 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe2e488]
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.email
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.enabled
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.name
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.password
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.role
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Property path deemed to be circular : patient.role
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.surname
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : patientStatus
[DEBUG] 2020-05-27 00:28:51.861 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.861 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7988fe48]
[DEBUG] 2020-05-27 00:28:51.861 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69a01cff]
[DEBUG] 2020-05-27 00:28:51.861 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.861 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.864 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.PatientData)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:0>, path=com.example.demo.entity.PatientData)
          - CollectionAttributeFetchImpl(collection=com.example.demo.entity.PatientData.currentPrescriptionsList, querySpaceUid=<gen:1>, path=com.example.demo.entity.PatientData.currentPrescriptionsList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:2>, path=com.example.demo.entity.PatientData.currentPrescriptionsList.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.Diagnosis, querySpaceUid=<gen:3>, path=com.example.demo.entity.PatientData.diagnosis)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:4>, path=com.example.demo.entity.PatientData.doctor)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.Role, querySpaceUid=<gen:5>, path=com.example.demo.entity.PatientData.doctor.role)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:6>, path=com.example.demo.entity.PatientData.nurse)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:7>, path=com.example.demo.entity.PatientData.patient)
          - CollectionAttributeFetchImpl(collection=com.example.demo.entity.PatientData.prescriptionHistory, querySpaceUid=<gen:8>, path=com.example.demo.entity.PatientData.prescriptionHistory)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:9>, path=com.example.demo.entity.PatientData.prescriptionHistory.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.PatientData)
          - SQL table alias mapping - patientdat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(diagnosis)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.demo.entity.Diagnosis)
                - SQL table alias mapping - diagnosis1_
                - alias suffix - 1_
                - suffixed key columns - {id_diagn1_1_1_}
          - JOIN (JoinDefinedByMetadata(doctor)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.example.demo.entity.AppUser)
                - SQL table alias mapping - appuser2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_7_2_}
                - JOIN (JoinDefinedByMetadata(role)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.example.demo.entity.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {role_id1_6_3_}
          - JOIN (JoinDefinedByMetadata(nurse)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.example.demo.entity.AppUser)
                - SQL table alias mapping - appuser4_
                - alias suffix - 4_
                - suffixed key columns - {user_id1_7_4_}
          - JOIN (JoinDefinedByMetadata(patient)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.example.demo.entity.AppUser)
                - SQL table alias mapping - appuser5_
                - alias suffix - 5_
                - suffixed key columns - {user_id1_7_5_}

[DEBUG] 2020-05-27 00:28:51.864 [task-1] EntityLoader - Static select for entity com.example.demo.entity.PatientData [NONE]: select patientdat0_.id as id1_3_0_, patientdat0_.diagnosis_id as diagnosi3_3_0_, patientdat0_.doctor_id as doctor_i4_3_0_, patientdat0_.nurse_id as nurse_id5_3_0_, patientdat0_.patient_id as patient_6_3_0_, patientdat0_.patient_status as patient_2_3_0_, diagnosis1_.id_diagnosis as id_diagn1_1_1_, diagnosis1_.diagnosis_difficulty as diagnosi2_1_1_, diagnosis1_.diagnosis_name as diagnosi3_1_1_, appuser2_.user_id as user_id1_7_2_, appuser2_.email as email2_7_2_, appuser2_.enabled as enabled3_7_2_, appuser2_.name as name4_7_2_, appuser2_.password as password5_7_2_, appuser2_.role as role7_7_2_, appuser2_.surname as surname6_7_2_, role3_.role_id as role_id1_6_3_, role3_.name as name2_6_3_, appuser4_.user_id as user_id1_7_4_, appuser4_.email as email2_7_4_, appuser4_.enabled as enabled3_7_4_, appuser4_.name as name4_7_4_, appuser4_.password as password5_7_4_, appuser4_.role as role7_7_4_, appuser4_.surname as surname6_7_4_, appuser5_.user_id as user_id1_7_5_, appuser5_.email as email2_7_5_, appuser5_.enabled as enabled3_7_5_, appuser5_.name as name4_7_5_, appuser5_.password as password5_7_5_, appuser5_.role as role7_7_5_, appuser5_.surname as surname6_7_5_ from patient_data patientdat0_ left outer join diagnosis_table diagnosis1_ on patientdat0_.diagnosis_id=diagnosis1_.id_diagnosis left outer join users appuser2_ on patientdat0_.doctor_id=appuser2_.user_id left outer join user_roles role3_ on appuser2_.role=role3_.role_id left outer join users appuser4_ on patientdat0_.nurse_id=appuser4_.user_id left outer join users appuser5_ on patientdat0_.patient_id=appuser5_.user_id where patientdat0_.id=?
[DEBUG] 2020-05-27 00:28:51.864 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@212b6fa8]
[DEBUG] 2020-05-27 00:28:51.864 [task-1] MetamodelGraphWalker - Visiting attribute path : currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.865 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@761b0a62]
[DEBUG] 2020-05-27 00:28:51.865 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2612a09c]
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis
[DEBUG] 2020-05-27 00:28:51.865 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbeddd9]
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis.difficulty
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis.name
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor
[DEBUG] 2020-05-27 00:28:51.865 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11587536]
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.email
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.enabled
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.name
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.password
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.role
[DEBUG] 2020-05-27 00:28:51.865 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8877052]
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.role.name
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.surname
[DEBUG] 2020-05-27 00:28:51.865 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse
[DEBUG] 2020-05-27 00:28:51.866 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14510ebe]
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.email
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.enabled
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.name
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.password
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.role
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Property path deemed to be circular : nurse.role
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.surname
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : patient
[DEBUG] 2020-05-27 00:28:51.866 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5f3893]
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.email
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.enabled
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.name
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.password
[DEBUG] 2020-05-27 00:28:51.866 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.role
[DEBUG] 2020-05-27 00:28:51.867 [task-1] MetamodelGraphWalker - Property path deemed to be circular : patient.role
[DEBUG] 2020-05-27 00:28:51.867 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.surname
[DEBUG] 2020-05-27 00:28:51.867 [task-1] MetamodelGraphWalker - Visiting attribute path : patientStatus
[DEBUG] 2020-05-27 00:28:51.867 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.867 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2756349c]
[DEBUG] 2020-05-27 00:28:51.867 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3618d98c]
[DEBUG] 2020-05-27 00:28:51.867 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.868 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.870 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.PatientData)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:0>, path=com.example.demo.entity.PatientData)
          - CollectionAttributeFetchImpl(collection=com.example.demo.entity.PatientData.currentPrescriptionsList, querySpaceUid=<gen:1>, path=com.example.demo.entity.PatientData.currentPrescriptionsList)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:2>, path=com.example.demo.entity.PatientData.currentPrescriptionsList.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.Diagnosis, querySpaceUid=<gen:3>, path=com.example.demo.entity.PatientData.diagnosis)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:4>, path=com.example.demo.entity.PatientData.doctor)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.Role, querySpaceUid=<gen:5>, path=com.example.demo.entity.PatientData.doctor.role)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:6>, path=com.example.demo.entity.PatientData.nurse)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:7>, path=com.example.demo.entity.PatientData.patient)
          - CollectionAttributeFetchImpl(collection=com.example.demo.entity.PatientData.prescriptionHistory, querySpaceUid=<gen:8>, path=com.example.demo.entity.PatientData.prescriptionHistory)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:9>, path=com.example.demo.entity.PatientData.prescriptionHistory.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.PatientData)
          - SQL table alias mapping - patientdat0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(diagnosis)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.demo.entity.Diagnosis)
                - SQL table alias mapping - diagnosis1_
                - alias suffix - 1_
                - suffixed key columns - {id_diagn1_1_1_}
          - JOIN (JoinDefinedByMetadata(doctor)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.example.demo.entity.AppUser)
                - SQL table alias mapping - appuser2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_7_2_}
                - JOIN (JoinDefinedByMetadata(role)) : <gen:4> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.example.demo.entity.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {role_id1_6_3_}
          - JOIN (JoinDefinedByMetadata(nurse)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.example.demo.entity.AppUser)
                - SQL table alias mapping - appuser4_
                - alias suffix - 4_
                - suffixed key columns - {user_id1_7_4_}
          - JOIN (JoinDefinedByMetadata(patient)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.example.demo.entity.AppUser)
                - SQL table alias mapping - appuser5_
                - alias suffix - 5_
                - suffixed key columns - {user_id1_7_5_}

[DEBUG] 2020-05-27 00:28:51.871 [task-1] EntityLoader - Static select for entity com.example.demo.entity.PatientData [READ]: select patientdat0_.id as id1_3_0_, patientdat0_.diagnosis_id as diagnosi3_3_0_, patientdat0_.doctor_id as doctor_i4_3_0_, patientdat0_.nurse_id as nurse_id5_3_0_, patientdat0_.patient_id as patient_6_3_0_, patientdat0_.patient_status as patient_2_3_0_, diagnosis1_.id_diagnosis as id_diagn1_1_1_, diagnosis1_.diagnosis_difficulty as diagnosi2_1_1_, diagnosis1_.diagnosis_name as diagnosi3_1_1_, appuser2_.user_id as user_id1_7_2_, appuser2_.email as email2_7_2_, appuser2_.enabled as enabled3_7_2_, appuser2_.name as name4_7_2_, appuser2_.password as password5_7_2_, appuser2_.role as role7_7_2_, appuser2_.surname as surname6_7_2_, role3_.role_id as role_id1_6_3_, role3_.name as name2_6_3_, appuser4_.user_id as user_id1_7_4_, appuser4_.email as email2_7_4_, appuser4_.enabled as enabled3_7_4_, appuser4_.name as name4_7_4_, appuser4_.password as password5_7_4_, appuser4_.role as role7_7_4_, appuser4_.surname as surname6_7_4_, appuser5_.user_id as user_id1_7_5_, appuser5_.email as email2_7_5_, appuser5_.enabled as enabled3_7_5_, appuser5_.name as name4_7_5_, appuser5_.password as password5_7_5_, appuser5_.role as role7_7_5_, appuser5_.surname as surname6_7_5_ from patient_data patientdat0_ left outer join diagnosis_table diagnosis1_ on patientdat0_.diagnosis_id=diagnosis1_.id_diagnosis left outer join users appuser2_ on patientdat0_.doctor_id=appuser2_.user_id left outer join user_roles role3_ on appuser2_.role=role3_.role_id left outer join users appuser4_ on patientdat0_.nurse_id=appuser4_.user_id left outer join users appuser5_ on patientdat0_.patient_id=appuser5_.user_id where patientdat0_.id=?
[DEBUG] 2020-05-27 00:28:51.872 [task-1] Loader - Static select for action ACTION_MERGE on entity com.example.demo.entity.PatientData: select patientdat0_.id as id1_3_5_, patientdat0_.diagnosis_id as diagnosi3_3_5_, patientdat0_.doctor_id as doctor_i4_3_5_, patientdat0_.nurse_id as nurse_id5_3_5_, patientdat0_.patient_id as patient_6_3_5_, patientdat0_.patient_status as patient_2_3_5_, diagnosis1_.id_diagnosis as id_diagn1_1_0_, diagnosis1_.diagnosis_difficulty as diagnosi2_1_0_, diagnosis1_.diagnosis_name as diagnosi3_1_0_, appuser2_.user_id as user_id1_7_1_, appuser2_.email as email2_7_1_, appuser2_.enabled as enabled3_7_1_, appuser2_.name as name4_7_1_, appuser2_.password as password5_7_1_, appuser2_.role as role7_7_1_, appuser2_.surname as surname6_7_1_, role3_.role_id as role_id1_6_2_, role3_.name as name2_6_2_, appuser4_.user_id as user_id1_7_3_, appuser4_.email as email2_7_3_, appuser4_.enabled as enabled3_7_3_, appuser4_.name as name4_7_3_, appuser4_.password as password5_7_3_, appuser4_.role as role7_7_3_, appuser4_.surname as surname6_7_3_, appuser5_.user_id as user_id1_7_4_, appuser5_.email as email2_7_4_, appuser5_.enabled as enabled3_7_4_, appuser5_.name as name4_7_4_, appuser5_.password as password5_7_4_, appuser5_.role as role7_7_4_, appuser5_.surname as surname6_7_4_ from patient_data patientdat0_ left outer join diagnosis_table diagnosis1_ on patientdat0_.diagnosis_id=diagnosis1_.id_diagnosis left outer join users appuser2_ on patientdat0_.doctor_id=appuser2_.user_id left outer join user_roles role3_ on appuser2_.role=role3_.role_id left outer join users appuser4_ on patientdat0_.nurse_id=appuser4_.user_id left outer join users appuser5_ on patientdat0_.patient_id=appuser5_.user_id where patientdat0_.id=?
[DEBUG] 2020-05-27 00:28:51.873 [task-1] Loader - Static select for action ACTION_REFRESH on entity com.example.demo.entity.PatientData: select patientdat0_.id as id1_3_5_, patientdat0_.diagnosis_id as diagnosi3_3_5_, patientdat0_.doctor_id as doctor_i4_3_5_, patientdat0_.nurse_id as nurse_id5_3_5_, patientdat0_.patient_id as patient_6_3_5_, patientdat0_.patient_status as patient_2_3_5_, diagnosis1_.id_diagnosis as id_diagn1_1_0_, diagnosis1_.diagnosis_difficulty as diagnosi2_1_0_, diagnosis1_.diagnosis_name as diagnosi3_1_0_, appuser2_.user_id as user_id1_7_1_, appuser2_.email as email2_7_1_, appuser2_.enabled as enabled3_7_1_, appuser2_.name as name4_7_1_, appuser2_.password as password5_7_1_, appuser2_.role as role7_7_1_, appuser2_.surname as surname6_7_1_, role3_.role_id as role_id1_6_2_, role3_.name as name2_6_2_, appuser4_.user_id as user_id1_7_3_, appuser4_.email as email2_7_3_, appuser4_.enabled as enabled3_7_3_, appuser4_.name as name4_7_3_, appuser4_.password as password5_7_3_, appuser4_.role as role7_7_3_, appuser4_.surname as surname6_7_3_, appuser5_.user_id as user_id1_7_4_, appuser5_.email as email2_7_4_, appuser5_.enabled as enabled3_7_4_, appuser5_.name as name4_7_4_, appuser5_.password as password5_7_4_, appuser5_.role as role7_7_4_, appuser5_.surname as surname6_7_4_ from patient_data patientdat0_ left outer join diagnosis_table diagnosis1_ on patientdat0_.diagnosis_id=diagnosis1_.id_diagnosis left outer join users appuser2_ on patientdat0_.doctor_id=appuser2_.user_id left outer join user_roles role3_ on appuser2_.role=role3_.role_id left outer join users appuser4_ on patientdat0_.nurse_id=appuser4_.user_id left outer join users appuser5_ on patientdat0_.patient_id=appuser5_.user_id where patientdat0_.id=?
[DEBUG] 2020-05-27 00:28:51.873 [task-1] AbstractEntityPersister - Static SQL for entity: com.example.demo.entity.Prescription
[DEBUG] 2020-05-27 00:28:51.873 [task-1] AbstractEntityPersister -  Version select: select id_prescription from prescription_table where id_prescription =?
[DEBUG] 2020-05-27 00:28:51.873 [task-1] AbstractEntityPersister -  Snapshot select: select prescripti_.id_prescription, prescripti_.prescription_name as prescrip2_5_, prescripti_.prescription_class as prescrip3_5_ from prescription_table prescripti_ where prescripti_.id_prescription=?
[DEBUG] 2020-05-27 00:28:51.873 [task-1] AbstractEntityPersister -  Insert 0: insert into prescription_table (prescription_name, prescription_class, id_prescription) values (?, ?, ?)
[DEBUG] 2020-05-27 00:28:51.873 [task-1] AbstractEntityPersister -  Update 0: update prescription_table set prescription_name=?, prescription_class=? where id_prescription=?
[DEBUG] 2020-05-27 00:28:51.873 [task-1] AbstractEntityPersister -  Delete 0: delete from prescription_table where id_prescription=?
[DEBUG] 2020-05-27 00:28:51.874 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9b96b7f]
[DEBUG] 2020-05-27 00:28:51.874 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.874 [task-1] MetamodelGraphWalker - Visiting attribute path : patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.874 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b51e58f]
[DEBUG] 2020-05-27 00:28:51.874 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a16f55d]
[DEBUG] 2020-05-27 00:28:51.874 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptionClass
[DEBUG] 2020-05-27 00:28:51.874 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptions
[DEBUG] 2020-05-27 00:28:51.874 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68b691f3]
[DEBUG] 2020-05-27 00:28:51.874 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3728861e]
[DEBUG] 2020-05-27 00:28:51.874 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.874 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.875 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.Prescription)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:0>, path=com.example.demo.entity.Prescription)
          - CollectionAttributeFetchImpl(collection=com.example.demo.entity.Prescription.patientCurrentPrescriptions, querySpaceUid=<gen:1>, path=com.example.demo.entity.Prescription.patientCurrentPrescriptions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:2>, path=com.example.demo.entity.Prescription.patientCurrentPrescriptions.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.demo.entity.Prescription.prescriptions, querySpaceUid=<gen:3>, path=com.example.demo.entity.Prescription.prescriptions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:4>, path=com.example.demo.entity.Prescription.prescriptions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.Prescription)
          - SQL table alias mapping - prescripti0_
          - alias suffix - 0_
          - suffixed key columns - {id_presc1_5_0_}

[DEBUG] 2020-05-27 00:28:51.875 [task-1] EntityLoader - Static select for entity com.example.demo.entity.Prescription [NONE]: select prescripti0_.id_prescription as id_presc1_5_0_, prescripti0_.prescription_name as prescrip2_5_0_, prescripti0_.prescription_class as prescrip3_5_0_ from prescription_table prescripti0_ where prescripti0_.id_prescription=?
[DEBUG] 2020-05-27 00:28:51.875 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e170e9]
[DEBUG] 2020-05-27 00:28:51.875 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.875 [task-1] MetamodelGraphWalker - Visiting attribute path : patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.875 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4225e2e7]
[DEBUG] 2020-05-27 00:28:51.875 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ce84cb]
[DEBUG] 2020-05-27 00:28:51.875 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptionClass
[DEBUG] 2020-05-27 00:28:51.875 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptions
[DEBUG] 2020-05-27 00:28:51.875 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39a0cc23]
[DEBUG] 2020-05-27 00:28:51.875 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21766cbb]
[DEBUG] 2020-05-27 00:28:51.875 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.875 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.875 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.Prescription)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:0>, path=com.example.demo.entity.Prescription)
          - CollectionAttributeFetchImpl(collection=com.example.demo.entity.Prescription.patientCurrentPrescriptions, querySpaceUid=<gen:1>, path=com.example.demo.entity.Prescription.patientCurrentPrescriptions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:2>, path=com.example.demo.entity.Prescription.patientCurrentPrescriptions.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.demo.entity.Prescription.prescriptions, querySpaceUid=<gen:3>, path=com.example.demo.entity.Prescription.prescriptions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:4>, path=com.example.demo.entity.Prescription.prescriptions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.Prescription)
          - SQL table alias mapping - prescripti0_
          - alias suffix - 0_
          - suffixed key columns - {id_presc1_5_0_}

[DEBUG] 2020-05-27 00:28:51.876 [task-1] EntityLoader - Static select for entity com.example.demo.entity.Prescription [READ]: select prescripti0_.id_prescription as id_presc1_5_0_, prescripti0_.prescription_name as prescrip2_5_0_, prescripti0_.prescription_class as prescrip3_5_0_ from prescription_table prescripti0_ where prescripti0_.id_prescription=?
[DEBUG] 2020-05-27 00:28:51.876 [task-1] Loader - Static select for action ACTION_MERGE on entity com.example.demo.entity.Prescription: select prescripti0_.id_prescription as id_presc1_5_0_, prescripti0_.prescription_name as prescrip2_5_0_, prescripti0_.prescription_class as prescrip3_5_0_ from prescription_table prescripti0_ where prescripti0_.id_prescription=?
[DEBUG] 2020-05-27 00:28:51.876 [task-1] Loader - Static select for action ACTION_REFRESH on entity com.example.demo.entity.Prescription: select prescripti0_.id_prescription as id_presc1_5_0_, prescripti0_.prescription_name as prescrip2_5_0_, prescripti0_.prescription_class as prescrip3_5_0_ from prescription_table prescripti0_ where prescripti0_.id_prescription=?
[DEBUG] 2020-05-27 00:28:51.876 [task-1] AbstractEntityPersister - Static SQL for entity: com.example.demo.entity.AppUser
[DEBUG] 2020-05-27 00:28:51.876 [task-1] AbstractEntityPersister -  Version select: select user_id from users where user_id =?
[DEBUG] 2020-05-27 00:28:51.876 [task-1] AbstractEntityPersister -  Snapshot select: select appuser_.user_id, appuser_.email as email2_7_, appuser_.enabled as enabled3_7_, appuser_.name as name4_7_, appuser_.password as password5_7_, appuser_.role as role7_7_, appuser_.surname as surname6_7_ from users appuser_ where appuser_.user_id=?
[DEBUG] 2020-05-27 00:28:51.876 [task-1] AbstractEntityPersister -  Insert 0: insert into users (email, enabled, name, password, role, surname, user_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-05-27 00:28:51.876 [task-1] AbstractEntityPersister -  Update 0: update users set email=?, enabled=?, name=?, password=?, role=?, surname=? where user_id=?
[DEBUG] 2020-05-27 00:28:51.876 [task-1] AbstractEntityPersister -  Delete 0: delete from users where user_id=?
[DEBUG] 2020-05-27 00:28:51.876 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2990a8]
[DEBUG] 2020-05-27 00:28:51.876 [task-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-05-27 00:28:51.876 [task-1] MetamodelGraphWalker - Visiting attribute path : enabled
[DEBUG] 2020-05-27 00:28:51.876 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.876 [task-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-05-27 00:28:51.876 [task-1] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-05-27 00:28:51.877 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367aa9ed]
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : role.name
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : surname
[DEBUG] 2020-05-27 00:28:51.877 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.877 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.877 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.AppUser)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:0>, path=com.example.demo.entity.AppUser)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.Role, querySpaceUid=<gen:1>, path=com.example.demo.entity.AppUser.role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.AppUser)
          - SQL table alias mapping - appuser0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(role)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.demo.entity.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-05-27 00:28:51.877 [task-1] EntityLoader - Static select for entity com.example.demo.entity.AppUser [NONE]: select appuser0_.user_id as user_id1_7_0_, appuser0_.email as email2_7_0_, appuser0_.enabled as enabled3_7_0_, appuser0_.name as name4_7_0_, appuser0_.password as password5_7_0_, appuser0_.role as role7_7_0_, appuser0_.surname as surname6_7_0_, role1_.role_id as role_id1_6_1_, role1_.name as name2_6_1_ from users appuser0_ left outer join user_roles role1_ on appuser0_.role=role1_.role_id where appuser0_.user_id=?
[DEBUG] 2020-05-27 00:28:51.877 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@245770da]
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : enabled
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-05-27 00:28:51.877 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc00139]
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : role.name
[DEBUG] 2020-05-27 00:28:51.877 [task-1] MetamodelGraphWalker - Visiting attribute path : surname
[DEBUG] 2020-05-27 00:28:51.877 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.878 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.878 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.AppUser)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:0>, path=com.example.demo.entity.AppUser)
          - EntityAttributeFetchImpl(entity=com.example.demo.entity.Role, querySpaceUid=<gen:1>, path=com.example.demo.entity.AppUser.role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.AppUser)
          - SQL table alias mapping - appuser0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(role)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.demo.entity.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-05-27 00:28:51.878 [task-1] EntityLoader - Static select for entity com.example.demo.entity.AppUser [READ]: select appuser0_.user_id as user_id1_7_0_, appuser0_.email as email2_7_0_, appuser0_.enabled as enabled3_7_0_, appuser0_.name as name4_7_0_, appuser0_.password as password5_7_0_, appuser0_.role as role7_7_0_, appuser0_.surname as surname6_7_0_, role1_.role_id as role_id1_6_1_, role1_.name as name2_6_1_ from users appuser0_ left outer join user_roles role1_ on appuser0_.role=role1_.role_id where appuser0_.user_id=?
[DEBUG] 2020-05-27 00:28:51.878 [task-1] Loader - Static select for action ACTION_MERGE on entity com.example.demo.entity.AppUser: select appuser0_.user_id as user_id1_7_1_, appuser0_.email as email2_7_1_, appuser0_.enabled as enabled3_7_1_, appuser0_.name as name4_7_1_, appuser0_.password as password5_7_1_, appuser0_.role as role7_7_1_, appuser0_.surname as surname6_7_1_, role1_.role_id as role_id1_6_0_, role1_.name as name2_6_0_ from users appuser0_ left outer join user_roles role1_ on appuser0_.role=role1_.role_id where appuser0_.user_id=?
[DEBUG] 2020-05-27 00:28:51.878 [task-1] Loader - Static select for action ACTION_REFRESH on entity com.example.demo.entity.AppUser: select appuser0_.user_id as user_id1_7_1_, appuser0_.email as email2_7_1_, appuser0_.enabled as enabled3_7_1_, appuser0_.name as name4_7_1_, appuser0_.password as password5_7_1_, appuser0_.role as role7_7_1_, appuser0_.surname as surname6_7_1_, role1_.role_id as role_id1_6_0_, role1_.name as name2_6_0_ from users appuser0_ left outer join user_roles role1_ on appuser0_.role=role1_.role_id where appuser0_.user_id=?
[DEBUG] 2020-05-27 00:28:51.878 [task-1] AbstractEntityPersister - Static SQL for entity: com.example.demo.entity.Role
[DEBUG] 2020-05-27 00:28:51.878 [task-1] AbstractEntityPersister -  Version select: select role_id from user_roles where role_id =?
[DEBUG] 2020-05-27 00:28:51.878 [task-1] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.name as name2_6_ from user_roles role_ where role_.role_id=?
[DEBUG] 2020-05-27 00:28:51.878 [task-1] AbstractEntityPersister -  Insert 0: insert into user_roles (name, role_id) values (?, ?)
[DEBUG] 2020-05-27 00:28:51.878 [task-1] AbstractEntityPersister -  Update 0: update user_roles set name=? where role_id=?
[DEBUG] 2020-05-27 00:28:51.878 [task-1] AbstractEntityPersister -  Delete 0: delete from user_roles where role_id=?
[DEBUG] 2020-05-27 00:28:51.878 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@848b586]
[DEBUG] 2020-05-27 00:28:51.878 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.878 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.878 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.879 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.Role, querySpaceUid=<gen:0>, path=com.example.demo.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}

[DEBUG] 2020-05-27 00:28:51.879 [task-1] EntityLoader - Static select for entity com.example.demo.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.name as name2_6_0_ from user_roles role0_ where role0_.role_id=?
[DEBUG] 2020-05-27 00:28:51.879 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c63584c]
[DEBUG] 2020-05-27 00:28:51.879 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.879 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.879 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.879 [task-1] LoadPlanTreePrinter - LoadPlan(entity=com.example.demo.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.demo.entity.Role, querySpaceUid=<gen:0>, path=com.example.demo.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.demo.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}

[DEBUG] 2020-05-27 00:28:51.879 [task-1] EntityLoader - Static select for entity com.example.demo.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.name as name2_6_0_ from user_roles role0_ where role0_.role_id=?
[DEBUG] 2020-05-27 00:28:51.879 [task-1] Loader - Static select for action ACTION_MERGE on entity com.example.demo.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.name as name2_6_0_ from user_roles role0_ where role0_.role_id=?
[DEBUG] 2020-05-27 00:28:51.879 [task-1] Loader - Static select for action ACTION_REFRESH on entity com.example.demo.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.name as name2_6_0_ from user_roles role0_ where role0_.role_id=?
[DEBUG] 2020-05-27 00:28:51.885 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fdeb869]
[DEBUG] 2020-05-27 00:28:51.885 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47788bea]
[DEBUG] 2020-05-27 00:28:51.886 [task-1] MetamodelGraphWalker - Visiting attribute path : currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.886 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f485120]
[DEBUG] 2020-05-27 00:28:51.886 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d948ade]
[DEBUG] 2020-05-27 00:28:51.887 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis
[DEBUG] 2020-05-27 00:28:51.887 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27de9f23]
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis.difficulty
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis.name
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor
[DEBUG] 2020-05-27 00:28:51.888 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5846c27]
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.email
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.enabled
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.name
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.password
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.role
[DEBUG] 2020-05-27 00:28:51.888 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fab771c]
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.role.name
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.surname
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse
[DEBUG] 2020-05-27 00:28:51.888 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b5c8fe]
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.email
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.enabled
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.name
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.password
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.role
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Property path deemed to be circular : nurse.role
[DEBUG] 2020-05-27 00:28:51.888 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.surname
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : patient
[DEBUG] 2020-05-27 00:28:51.889 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60ae6259]
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.email
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.enabled
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.name
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.password
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.role
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Property path deemed to be circular : patient.role
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.surname
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : patientStatus
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.889 [task-1] MetamodelGraphWalker - Property path deemed to be circular : prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.889 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.894 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.895 [task-1] LoadPlanTreePrinter - LoadPlan(collection=com.example.demo.entity.Prescription.prescriptions)
    - Returns
       - CollectionReturnImpl(collection=com.example.demo.entity.Prescription.prescriptions, querySpaceUid=<gen:0>, path=[com.example.demo.entity.Prescription.prescriptions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:1>, path=[com.example.demo.entity.Prescription.prescriptions].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.demo.entity.PatientData.currentPrescriptionsList, querySpaceUid=<gen:2>, path=[com.example.demo.entity.Prescription.prescriptions].<elements>.currentPrescriptionsList)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:3>, path=[com.example.demo.entity.Prescription.prescriptions].<elements>.currentPrescriptionsList.<elements>)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.Diagnosis, querySpaceUid=<gen:4>, path=[com.example.demo.entity.Prescription.prescriptions].<elements>.diagnosis)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:5>, path=[com.example.demo.entity.Prescription.prescriptions].<elements>.doctor)
                - EntityAttributeFetchImpl(entity=com.example.demo.entity.Role, querySpaceUid=<gen:6>, path=[com.example.demo.entity.Prescription.prescriptions].<elements>.doctor.role)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:7>, path=[com.example.demo.entity.Prescription.prescriptions].<elements>.nurse)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:8>, path=[com.example.demo.entity.Prescription.prescriptions].<elements>.patient)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.demo.entity.Prescription.prescriptions)
          - SQL table alias mapping - prescripti0_
          - alias suffix - 0_
          - suffixed key columns - {prescrip1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.demo.entity.PatientData)
                - SQL table alias mapping - patientdat1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(diagnosis)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.example.demo.entity.Diagnosis)
                      - SQL table alias mapping - diagnosis2_
                      - alias suffix - 2_
                      - suffixed key columns - {id_diagn1_1_2_}
                - JOIN (JoinDefinedByMetadata(doctor)) : <gen:1> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.example.demo.entity.AppUser)
                      - SQL table alias mapping - appuser3_
                      - alias suffix - 3_
                      - suffixed key columns - {user_id1_7_3_}
                      - JOIN (JoinDefinedByMetadata(role)) : <gen:5> -> <gen:6>
                         - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.example.demo.entity.Role)
                            - SQL table alias mapping - role4_
                            - alias suffix - 4_
                            - suffixed key columns - {role_id1_6_4_}
                - JOIN (JoinDefinedByMetadata(nurse)) : <gen:1> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.example.demo.entity.AppUser)
                      - SQL table alias mapping - appuser5_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id1_7_5_}
                - JOIN (JoinDefinedByMetadata(patient)) : <gen:1> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.example.demo.entity.AppUser)
                      - SQL table alias mapping - appuser6_
                      - alias suffix - 6_
                      - suffixed key columns - {user_id1_7_6_}

[DEBUG] 2020-05-27 00:28:51.896 [task-1] CollectionLoader - Static select for collection com.example.demo.entity.Prescription.prescriptions: select prescripti0_.prescription_id as prescrip1_4_0_, prescripti0_.patient_id as patient_2_4_0_, patientdat1_.id as id1_3_1_, patientdat1_.diagnosis_id as diagnosi3_3_1_, patientdat1_.doctor_id as doctor_i4_3_1_, patientdat1_.nurse_id as nurse_id5_3_1_, patientdat1_.patient_id as patient_6_3_1_, patientdat1_.patient_status as patient_2_3_1_, diagnosis2_.id_diagnosis as id_diagn1_1_2_, diagnosis2_.diagnosis_difficulty as diagnosi2_1_2_, diagnosis2_.diagnosis_name as diagnosi3_1_2_, appuser3_.user_id as user_id1_7_3_, appuser3_.email as email2_7_3_, appuser3_.enabled as enabled3_7_3_, appuser3_.name as name4_7_3_, appuser3_.password as password5_7_3_, appuser3_.role as role7_7_3_, appuser3_.surname as surname6_7_3_, role4_.role_id as role_id1_6_4_, role4_.name as name2_6_4_, appuser5_.user_id as user_id1_7_5_, appuser5_.email as email2_7_5_, appuser5_.enabled as enabled3_7_5_, appuser5_.name as name4_7_5_, appuser5_.password as password5_7_5_, appuser5_.role as role7_7_5_, appuser5_.surname as surname6_7_5_, appuser6_.user_id as user_id1_7_6_, appuser6_.email as email2_7_6_, appuser6_.enabled as enabled3_7_6_, appuser6_.name as name4_7_6_, appuser6_.password as password5_7_6_, appuser6_.role as role7_7_6_, appuser6_.surname as surname6_7_6_ from prescription_history prescripti0_ inner join patient_data patientdat1_ on prescripti0_.patient_id=patientdat1_.id left outer join diagnosis_table diagnosis2_ on patientdat1_.diagnosis_id=diagnosis2_.id_diagnosis left outer join users appuser3_ on patientdat1_.doctor_id=appuser3_.user_id left outer join user_roles role4_ on appuser3_.role=role4_.role_id left outer join users appuser5_ on patientdat1_.nurse_id=appuser5_.user_id left outer join users appuser6_ on patientdat1_.patient_id=appuser6_.user_id where prescripti0_.prescription_id=?
[DEBUG] 2020-05-27 00:28:51.896 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5af349ca]
[DEBUG] 2020-05-27 00:28:51.896 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63d62e8e]
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Property path deemed to be circular : currentPrescriptionsList
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis
[DEBUG] 2020-05-27 00:28:51.896 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5097dc29]
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis.difficulty
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : diagnosis.name
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor
[DEBUG] 2020-05-27 00:28:51.896 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7543fc02]
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.email
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.enabled
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.name
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.password
[DEBUG] 2020-05-27 00:28:51.896 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.role
[DEBUG] 2020-05-27 00:28:51.897 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58256975]
[DEBUG] 2020-05-27 00:28:51.897 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.role.name
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : doctor.surname
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse
[DEBUG] 2020-05-27 00:28:51.898 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@967e373]
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.email
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.enabled
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.name
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.password
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.role
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Property path deemed to be circular : nurse.role
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : nurse.surname
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : patient
[DEBUG] 2020-05-27 00:28:51.898 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2075777c]
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.email
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.enabled
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.name
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.password
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.role
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Property path deemed to be circular : patient.role
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : patient.surname
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : patientStatus
[DEBUG] 2020-05-27 00:28:51.898 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptionHistory
[DEBUG] 2020-05-27 00:28:51.898 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@803b2b]
[DEBUG] 2020-05-27 00:28:51.899 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e8bce4]
[DEBUG] 2020-05-27 00:28:51.899 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.899 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.901 [task-1] LoadPlanTreePrinter - LoadPlan(collection=com.example.demo.entity.Prescription.patientCurrentPrescriptions)
    - Returns
       - CollectionReturnImpl(collection=com.example.demo.entity.Prescription.patientCurrentPrescriptions, querySpaceUid=<gen:0>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:1>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.Diagnosis, querySpaceUid=<gen:2>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions].<elements>.diagnosis)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:3>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions].<elements>.doctor)
                - EntityAttributeFetchImpl(entity=com.example.demo.entity.Role, querySpaceUid=<gen:4>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions].<elements>.doctor.role)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:5>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions].<elements>.nurse)
             - EntityAttributeFetchImpl(entity=com.example.demo.entity.AppUser, querySpaceUid=<gen:6>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions].<elements>.patient)
             - CollectionAttributeFetchImpl(collection=com.example.demo.entity.PatientData.prescriptionHistory, querySpaceUid=<gen:7>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions].<elements>.prescriptionHistory)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:8>, path=[com.example.demo.entity.Prescription.patientCurrentPrescriptions].<elements>.prescriptionHistory.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.demo.entity.Prescription.patientCurrentPrescriptions)
          - SQL table alias mapping - patientcur0_
          - alias suffix - 0_
          - suffixed key columns - {prescrip1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.demo.entity.PatientData)
                - SQL table alias mapping - patientdat1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(diagnosis)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.example.demo.entity.Diagnosis)
                      - SQL table alias mapping - diagnosis2_
                      - alias suffix - 2_
                      - suffixed key columns - {id_diagn1_1_2_}
                - JOIN (JoinDefinedByMetadata(doctor)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.demo.entity.AppUser)
                      - SQL table alias mapping - appuser3_
                      - alias suffix - 3_
                      - suffixed key columns - {user_id1_7_3_}
                      - JOIN (JoinDefinedByMetadata(role)) : <gen:3> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.example.demo.entity.Role)
                            - SQL table alias mapping - role4_
                            - alias suffix - 4_
                            - suffixed key columns - {role_id1_6_4_}
                - JOIN (JoinDefinedByMetadata(nurse)) : <gen:1> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.example.demo.entity.AppUser)
                      - SQL table alias mapping - appuser5_
                      - alias suffix - 5_
                      - suffixed key columns - {user_id1_7_5_}
                - JOIN (JoinDefinedByMetadata(patient)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.example.demo.entity.AppUser)
                      - SQL table alias mapping - appuser6_
                      - alias suffix - 6_
                      - suffixed key columns - {user_id1_7_6_}

[DEBUG] 2020-05-27 00:28:51.901 [task-1] CollectionLoader - Static select for collection com.example.demo.entity.Prescription.patientCurrentPrescriptions: select patientcur0_.prescription_id as prescrip1_0_0_, patientcur0_.patient_id as patient_2_0_0_, patientdat1_.id as id1_3_1_, patientdat1_.diagnosis_id as diagnosi3_3_1_, patientdat1_.doctor_id as doctor_i4_3_1_, patientdat1_.nurse_id as nurse_id5_3_1_, patientdat1_.patient_id as patient_6_3_1_, patientdat1_.patient_status as patient_2_3_1_, diagnosis2_.id_diagnosis as id_diagn1_1_2_, diagnosis2_.diagnosis_difficulty as diagnosi2_1_2_, diagnosis2_.diagnosis_name as diagnosi3_1_2_, appuser3_.user_id as user_id1_7_3_, appuser3_.email as email2_7_3_, appuser3_.enabled as enabled3_7_3_, appuser3_.name as name4_7_3_, appuser3_.password as password5_7_3_, appuser3_.role as role7_7_3_, appuser3_.surname as surname6_7_3_, role4_.role_id as role_id1_6_4_, role4_.name as name2_6_4_, appuser5_.user_id as user_id1_7_5_, appuser5_.email as email2_7_5_, appuser5_.enabled as enabled3_7_5_, appuser5_.name as name4_7_5_, appuser5_.password as password5_7_5_, appuser5_.role as role7_7_5_, appuser5_.surname as surname6_7_5_, appuser6_.user_id as user_id1_7_6_, appuser6_.email as email2_7_6_, appuser6_.enabled as enabled3_7_6_, appuser6_.name as name4_7_6_, appuser6_.password as password5_7_6_, appuser6_.role as role7_7_6_, appuser6_.surname as surname6_7_6_ from current_prescriptions patientcur0_ inner join patient_data patientdat1_ on patientcur0_.patient_id=patientdat1_.id left outer join diagnosis_table diagnosis2_ on patientdat1_.diagnosis_id=diagnosis2_.id_diagnosis left outer join users appuser3_ on patientdat1_.doctor_id=appuser3_.user_id left outer join user_roles role4_ on appuser3_.role=role4_.role_id left outer join users appuser5_ on patientdat1_.nurse_id=appuser5_.user_id left outer join users appuser6_ on patientdat1_.patient_id=appuser6_.user_id where patientcur0_.prescription_id=?
[DEBUG] 2020-05-27 00:28:51.901 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1eade7b2]
[DEBUG] 2020-05-27 00:28:51.901 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795703e7]
[DEBUG] 2020-05-27 00:28:51.901 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.901 [task-1] MetamodelGraphWalker - Visiting attribute path : patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.901 [task-1] MetamodelGraphWalker - Property path deemed to be circular : patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.901 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptionClass
[DEBUG] 2020-05-27 00:28:51.901 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptions
[DEBUG] 2020-05-27 00:28:51.901 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59b15833]
[DEBUG] 2020-05-27 00:28:51.901 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b830d9]
[DEBUG] 2020-05-27 00:28:51.902 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.902 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.902 [task-1] LoadPlanTreePrinter - LoadPlan(collection=com.example.demo.entity.PatientData.currentPrescriptionsList)
    - Returns
       - CollectionReturnImpl(collection=com.example.demo.entity.PatientData.currentPrescriptionsList, querySpaceUid=<gen:0>, path=[com.example.demo.entity.PatientData.currentPrescriptionsList])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:1>, path=[com.example.demo.entity.PatientData.currentPrescriptionsList].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.demo.entity.Prescription.prescriptions, querySpaceUid=<gen:2>, path=[com.example.demo.entity.PatientData.currentPrescriptionsList].<elements>.prescriptions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:3>, path=[com.example.demo.entity.PatientData.currentPrescriptionsList].<elements>.prescriptions.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.demo.entity.PatientData.currentPrescriptionsList)
          - SQL table alias mapping - currentpre0_
          - alias suffix - 0_
          - suffixed key columns - {patient_2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_presc1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.demo.entity.Prescription)
                - SQL table alias mapping - prescripti1_
                - alias suffix - 1_
                - suffixed key columns - {id_presc1_5_1_}

[DEBUG] 2020-05-27 00:28:51.902 [task-1] CollectionLoader - Static select for collection com.example.demo.entity.PatientData.currentPrescriptionsList: select currentpre0_.patient_id as patient_2_0_0_, currentpre0_.prescription_id as prescrip1_0_0_, prescripti1_.id_prescription as id_presc1_5_1_, prescripti1_.prescription_name as prescrip2_5_1_, prescripti1_.prescription_class as prescrip3_5_1_ from current_prescriptions currentpre0_ inner join prescription_table prescripti1_ on currentpre0_.prescription_id=prescripti1_.id_prescription where currentpre0_.patient_id=?
[DEBUG] 2020-05-27 00:28:51.902 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19029645]
[DEBUG] 2020-05-27 00:28:51.902 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34a85853]
[DEBUG] 2020-05-27 00:28:51.902 [task-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-05-27 00:28:51.902 [task-1] MetamodelGraphWalker - Visiting attribute path : patientCurrentPrescriptions
[DEBUG] 2020-05-27 00:28:51.903 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33d12dc3]
[DEBUG] 2020-05-27 00:28:51.903 [task-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45cd912a]
[DEBUG] 2020-05-27 00:28:51.903 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptionClass
[DEBUG] 2020-05-27 00:28:51.903 [task-1] MetamodelGraphWalker - Visiting attribute path : prescriptions
[DEBUG] 2020-05-27 00:28:51.903 [task-1] MetamodelGraphWalker - Property path deemed to be circular : prescriptions
[DEBUG] 2020-05-27 00:28:51.903 [task-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-05-27 00:28:51.903 [task-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-05-27 00:28:51.903 [task-1] LoadPlanTreePrinter - LoadPlan(collection=com.example.demo.entity.PatientData.prescriptionHistory)
    - Returns
       - CollectionReturnImpl(collection=com.example.demo.entity.PatientData.prescriptionHistory, querySpaceUid=<gen:0>, path=[com.example.demo.entity.PatientData.prescriptionHistory])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.Prescription, querySpaceUid=<gen:1>, path=[com.example.demo.entity.PatientData.prescriptionHistory].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.demo.entity.Prescription.patientCurrentPrescriptions, querySpaceUid=<gen:2>, path=[com.example.demo.entity.PatientData.prescriptionHistory].<elements>.patientCurrentPrescriptions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.demo.entity.PatientData, querySpaceUid=<gen:3>, path=[com.example.demo.entity.PatientData.prescriptionHistory].<elements>.patientCurrentPrescriptions.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.demo.entity.PatientData.prescriptionHistory)
          - SQL table alias mapping - prescripti0_
          - alias suffix - 0_
          - suffixed key columns - {patient_2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_presc1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.demo.entity.Prescription)
                - SQL table alias mapping - prescripti1_
                - alias suffix - 1_
                - suffixed key columns - {id_presc1_5_1_}

[DEBUG] 2020-05-27 00:28:51.903 [task-1] CollectionLoader - Static select for collection com.example.demo.entity.PatientData.prescriptionHistory: select prescripti0_.patient_id as patient_2_4_0_, prescripti0_.prescription_id as prescrip1_4_0_, prescripti1_.id_prescription as id_presc1_5_1_, prescripti1_.prescription_name as prescrip2_5_1_, prescripti1_.prescription_class as prescrip3_5_1_ from prescription_history prescripti0_ inner join prescription_table prescripti1_ on prescripti0_.prescription_id=prescripti1_.id_prescription where prescripti0_.patient_id=?
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : current_prescriptions
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : diagnosis_table
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : hibernate_sequence
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : medicine_list
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : patient_data
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : prescription_history
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : prescription_table
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : user_roles
[DEBUG] 2020-05-27 00:28:52.058 [task-1] Table - No alter strings for table : users
[INFO ] 2020-05-27 00:28:52.555 [task-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-05-27 00:28:52.556 [task-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-05-27 00:28:52.556 [task-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-05-27 00:28:52.562 [task-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a6aee8d
[DEBUG] 2020-05-27 00:28:52.563 [task-1] SessionFactoryRegistry - Registering SessionFactory: 05a812e8-1362-455f-afe7-f0ca3a786aab (<unnamed>)
[DEBUG] 2020-05-27 00:28:52.563 [task-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[INFO ] 2020-05-27 00:28:52.563 [task-1] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[DEBUG] 2020-05-27 00:28:52.573 [restartedMain] JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext!
[DEBUG] 2020-05-27 00:28:52.593 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:52.638 [restartedMain] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-05-27 00:28:52.644 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:52.656 [restartedMain] CachedIntrospectionResults - Not strongly caching class [com.example.demo.entity.Prescription] because it is not cache-safe
[DEBUG] 2020-05-27 00:28:52.680 [restartedMain] CachedIntrospectionResults - Not strongly caching class [com.example.demo.entity.PatientData] because it is not cache-safe
[DEBUG] 2020-05-27 00:28:52.686 [restartedMain] CachedIntrospectionResults - Not strongly caching class [com.example.demo.entity.AppUser] because it is not cache-safe
[DEBUG] 2020-05-27 00:28:52.693 [restartedMain] CachedIntrospectionResults - Not strongly caching class [com.example.demo.entity.Role] because it is not cache-safe
[DEBUG] 2020-05-27 00:28:52.709 [restartedMain] CachedIntrospectionResults - Not strongly caching class [com.example.demo.entity.Diagnosis] because it is not cache-safe
[DEBUG] 2020-05-27 00:28:52.728 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'medicineListRepo'
[DEBUG] 2020-05-27 00:28:52.735 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:52.740 [restartedMain] CachedIntrospectionResults - Not strongly caching class [com.example.demo.entity.MedicineList] because it is not cache-safe
[DEBUG] 2020-05-27 00:28:52.743 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'patientDataRepo'
[DEBUG] 2020-05-27 00:28:52.750 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:52.750 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'userRepo'
[DEBUG] 2020-05-27 00:28:52.756 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:52.759 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'diagnosisRepo'
[DEBUG] 2020-05-27 00:28:52.767 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:52.768 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'roleRepo'
[DEBUG] 2020-05-27 00:28:52.775 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:52.784 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator'
[DEBUG] 2020-05-27 00:28:52.786 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[DEBUG] 2020-05-27 00:28:52.786 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:52.786 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[DEBUG] 2020-05-27 00:28:52.792 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
[DEBUG] 2020-05-27 00:28:52.793 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:52.793 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
[DEBUG] 2020-05-27 00:28:52.807 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters'
[DEBUG] 2020-05-27 00:28:52.807 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[DEBUG] 2020-05-27 00:28:52.815 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[DEBUG] 2020-05-27 00:28:52.815 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[DEBUG] 2020-05-27 00:28:52.816 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[DEBUG] 2020-05-27 00:28:52.821 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[DEBUG] 2020-05-27 00:28:52.821 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[DEBUG] 2020-05-27 00:28:52.822 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper'
[DEBUG] 2020-05-27 00:28:52.822 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[DEBUG] 2020-05-27 00:28:52.823 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[DEBUG] 2020-05-27 00:28:52.826 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[DEBUG] 2020-05-27 00:28:52.826 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[DEBUG] 2020-05-27 00:28:52.827 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[DEBUG] 2020-05-27 00:28:52.830 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:52.830 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[DEBUG] 2020-05-27 00:28:52.832 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:52.832 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[DEBUG] 2020-05-27 00:28:52.834 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule'
[DEBUG] 2020-05-27 00:28:52.834 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[DEBUG] 2020-05-27 00:28:52.838 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule'
[DEBUG] 2020-05-27 00:28:52.838 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[DEBUG] 2020-05-27 00:28:52.851 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonGeoModule'
[DEBUG] 2020-05-27 00:28:52.851 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
[DEBUG] 2020-05-27 00:28:52.857 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[DEBUG] 2020-05-27 00:28:52.898 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[DEBUG] 2020-05-27 00:28:52.909 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'sortResolver'
[DEBUG] 2020-05-27 00:28:52.919 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'pageableResolver'
[DEBUG] 2020-05-27 00:28:52.934 [restartedMain] RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[DEBUG] 2020-05-27 00:28:52.951 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[DEBUG] 2020-05-27 00:28:52.952 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[DEBUG] 2020-05-27 00:28:52.953 [task-2] DefaultListableBeanFactory - Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
[DEBUG] 2020-05-27 00:28:52.954 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanExporter'
[DEBUG] 2020-05-27 00:28:52.954 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
[DEBUG] 2020-05-27 00:28:52.954 [task-2] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'environment'
[DEBUG] 2020-05-27 00:28:52.955 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'objectNamingStrategy'
[DEBUG] 2020-05-27 00:28:52.957 [task-2] DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
[DEBUG] 2020-05-27 00:28:52.957 [task-2] DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@3239f06f'
[DEBUG] 2020-05-27 00:28:52.960 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanServer'
[DEBUG] 2020-05-27 00:28:52.962 [task-2] JmxUtils - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@22a71081
[DEBUG] 2020-05-27 00:28:52.970 [task-2] SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[DEBUG] 2020-05-27 00:28:52.971 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'liveReloadServerEventListener'
[DEBUG] 2020-05-27 00:28:52.971 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
[DEBUG] 2020-05-27 00:28:52.972 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'optionalLiveReloadServer'
[DEBUG] 2020-05-27 00:28:52.973 [task-2] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[DEBUG] 2020-05-27 00:28:52.975 [task-2] DefaultListableBeanFactory - Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[DEBUG] 2020-05-27 00:28:52.976 [task-2] DefaultListableBeanFactory - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
[DEBUG] 2020-05-27 00:28:52.976 [task-2] LiveReloadServer - Starting live reload server on port 35729
[INFO ] 2020-05-27 00:28:52.978 [task-2] OptionalLiveReloadServer - LiveReload server is running on port 35729
[DEBUG] 2020-05-27 00:28:52.979 [task-2] DefaultListableBeanFactory - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
[DEBUG] 2020-05-27 00:28:52.979 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[DEBUG] 2020-05-27 00:28:52.981 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[DEBUG] 2020-05-27 00:28:52.982 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[DEBUG] 2020-05-27 00:28:52.982 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:52.982 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[DEBUG] 2020-05-27 00:28:52.983 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[DEBUG] 2020-05-27 00:28:52.983 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:52.983 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[DEBUG] 2020-05-27 00:28:53.021 [restartedMain] RequestMappingHandlerMapping - 16 mappings in 'requestMappingHandlerMapping'
[DEBUG] 2020-05-27 00:28:53.022 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[DEBUG] 2020-05-27 00:28:53.022 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:53.022 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:53.023 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[DEBUG] 2020-05-27 00:28:53.025 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
[INFO ] 2020-05-27 00:28:53.026 [restartedMain] WelcomePageHandlerMapping - Adding welcome page template: index
[DEBUG] 2020-05-27 00:28:53.031 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher'
[DEBUG] 2020-05-27 00:28:53.032 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[DEBUG] 2020-05-27 00:28:53.032 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[DEBUG] 2020-05-27 00:28:53.034 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[DEBUG] 2020-05-27 00:28:53.034 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[DEBUG] 2020-05-27 00:28:53.034 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:53.034 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[DEBUG] 2020-05-27 00:28:53.034 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[DEBUG] 2020-05-27 00:28:53.035 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:53.035 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[DEBUG] 2020-05-27 00:28:53.037 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionMapping'
[DEBUG] 2020-05-27 00:28:53.037 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:53.037 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
[DEBUG] 2020-05-27 00:28:53.039 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping'
[DEBUG] 2020-05-27 00:28:53.040 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcUrlPathHelper'
[DEBUG] 2020-05-27 00:28:53.040 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcPathMatcher'
[DEBUG] 2020-05-27 00:28:53.040 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
[DEBUG] 2020-05-27 00:28:53.040 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:53.040 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
[DEBUG] 2020-05-27 00:28:53.049 [restartedMain] SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[DEBUG] 2020-05-27 00:28:53.050 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[DEBUG] 2020-05-27 00:28:53.050 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerFunctionAdapter'
[DEBUG] 2020-05-27 00:28:53.051 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[DEBUG] 2020-05-27 00:28:53.052 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
[DEBUG] 2020-05-27 00:28:53.052 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
[DEBUG] 2020-05-27 00:28:53.053 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[DEBUG] 2020-05-27 00:28:53.054 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[DEBUG] 2020-05-27 00:28:53.054 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver'
[DEBUG] 2020-05-27 00:28:53.054 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
[DEBUG] 2020-05-27 00:28:53.058 [restartedMain] ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
[DEBUG] 2020-05-27 00:28:53.059 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver'
[DEBUG] 2020-05-27 00:28:53.060 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
[DEBUG] 2020-05-27 00:28:53.062 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver'
[DEBUG] 2020-05-27 00:28:53.067 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
[DEBUG] 2020-05-27 00:28:53.067 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@3239f06f'
[DEBUG] 2020-05-27 00:28:53.068 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mustacheViewResolver'
[DEBUG] 2020-05-27 00:28:53.068 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mustache.MustacheServletWebConfiguration'
[DEBUG] 2020-05-27 00:28:53.069 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mustacheCompiler'
[DEBUG] 2020-05-27 00:28:53.069 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.069 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mustache-org.springframework.boot.autoconfigure.mustache.MustacheProperties'
[DEBUG] 2020-05-27 00:28:53.073 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration' via constructor to bean named 'spring.mustache-org.springframework.boot.autoconfigure.mustache.MustacheProperties'
[DEBUG] 2020-05-27 00:28:53.073 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:53.074 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'mustacheTemplateLoader'
[DEBUG] 2020-05-27 00:28:53.074 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'mustacheCompiler' via factory method to bean named 'mustacheTemplateLoader'
[DEBUG] 2020-05-27 00:28:53.074 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'mustacheCompiler' via factory method to bean named 'environment'
[DEBUG] 2020-05-27 00:28:53.081 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'mustacheViewResolver' via factory method to bean named 'mustacheCompiler'
[DEBUG] 2020-05-27 00:28:53.081 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'mustacheViewResolver' via factory method to bean named 'spring.mustache-org.springframework.boot.autoconfigure.mustache.MustacheProperties'
[DEBUG] 2020-05-27 00:28:53.084 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'thymeleafViewResolver'
[DEBUG] 2020-05-27 00:28:53.084 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
[DEBUG] 2020-05-27 00:28:53.085 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
[DEBUG] 2020-05-27 00:28:53.088 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'templateEngine'
[DEBUG] 2020-05-27 00:28:53.088 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration'
[DEBUG] 2020-05-27 00:28:53.088 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'templateEngine' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
[DEBUG] 2020-05-27 00:28:53.097 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultTemplateResolver'
[DEBUG] 2020-05-27 00:28:53.097 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
[DEBUG] 2020-05-27 00:28:53.098 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
[DEBUG] 2020-05-27 00:28:53.098 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21890175'
[DEBUG] 2020-05-27 00:28:53.102 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'java8TimeDialect'
[DEBUG] 2020-05-27 00:28:53.102 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
[DEBUG] 2020-05-27 00:28:53.105 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
[DEBUG] 2020-05-27 00:28:53.105 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'templateEngine'
[DEBUG] 2020-05-27 00:28:53.108 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
[DEBUG] 2020-05-27 00:28:53.108 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
[DEBUG] 2020-05-27 00:28:53.108 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.108 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.108 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability'
[DEBUG] 2020-05-27 00:28:53.109 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.110 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
[DEBUG] 2020-05-27 00:28:53.111 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
[DEBUG] 2020-05-27 00:28:53.111 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
[DEBUG] 2020-05-27 00:28:53.112 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
[DEBUG] 2020-05-27 00:28:53.112 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
[DEBUG] 2020-05-27 00:28:53.113 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
[DEBUG] 2020-05-27 00:28:53.113 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.113 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
[DEBUG] 2020-05-27 00:28:53.115 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
[DEBUG] 2020-05-27 00:28:53.115 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.116 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
[DEBUG] 2020-05-27 00:28:53.121 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.121 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.122 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.122 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor'
[DEBUG] 2020-05-27 00:28:53.122 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
[DEBUG] 2020-05-27 00:28:53.123 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
[DEBUG] 2020-05-27 00:28:53.124 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.124 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
[DEBUG] 2020-05-27 00:28:53.124 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
[DEBUG] 2020-05-27 00:28:53.126 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[DEBUG] 2020-05-27 00:28:53.126 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
[DEBUG] 2020-05-27 00:28:53.127 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.130 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[DEBUG] 2020-05-27 00:28:53.132 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[DEBUG] 2020-05-27 00:28:53.133 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
[DEBUG] 2020-05-27 00:28:53.133 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcTemplate'
[DEBUG] 2020-05-27 00:28:53.134 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[DEBUG] 2020-05-27 00:28:53.134 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[DEBUG] 2020-05-27 00:28:53.134 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
[DEBUG] 2020-05-27 00:28:53.143 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
[DEBUG] 2020-05-27 00:28:53.143 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
[DEBUG] 2020-05-27 00:28:53.145 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
[DEBUG] 2020-05-27 00:28:53.149 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.150 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.150 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties'
[DEBUG] 2020-05-27 00:28:53.151 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.151 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[DEBUG] 2020-05-27 00:28:53.152 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[DEBUG] 2020-05-27 00:28:53.153 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[DEBUG] 2020-05-27 00:28:53.154 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration'
[DEBUG] 2020-05-27 00:28:53.155 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.155 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration'
[DEBUG] 2020-05-27 00:28:53.156 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.156 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
[DEBUG] 2020-05-27 00:28:53.156 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
[DEBUG] 2020-05-27 00:28:53.156 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
[DEBUG] 2020-05-27 00:28:53.156 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionTemplate'
[DEBUG] 2020-05-27 00:28:53.157 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[DEBUG] 2020-05-27 00:28:53.158 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.158 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.159 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver'
[DEBUG] 2020-05-27 00:28:53.160 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
[DEBUG] 2020-05-27 00:28:53.161 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
[DEBUG] 2020-05-27 00:28:53.161 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
[DEBUG] 2020-05-27 00:28:53.162 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
[DEBUG] 2020-05-27 00:28:53.163 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
[DEBUG] 2020-05-27 00:28:53.164 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
[DEBUG] 2020-05-27 00:28:53.165 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'classPathRestartStrategy'
[DEBUG] 2020-05-27 00:28:53.166 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
[DEBUG] 2020-05-27 00:28:53.166 [restartedMain] DefaultListableBeanFactory - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
[DEBUG] 2020-05-27 00:28:53.173 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
[DEBUG] 2020-05-27 00:28:53.174 [restartedMain] DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
[DEBUG] 2020-05-27 00:28:53.188 [restartedMain] AnnotationMBeanExporter - Registering beans for JMX exposure on startup
[DEBUG] 2020-05-27 00:28:53.188 [restartedMain] AnnotationMBeanExporter - Autodetecting user-defined JMX MBeans
[DEBUG] 2020-05-27 00:28:53.190 [restartedMain] AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
[DEBUG] 2020-05-27 00:28:53.194 [restartedMain] AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
[DEBUG] 2020-05-27 00:28:53.197 [restartedMain] DefaultLifecycleProcessor - Starting beans in phase 2147483646
[INFO ] 2020-05-27 00:28:53.198 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8077"]
[INFO ] 2020-05-27 00:28:53.221 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8077 (http) with context path ''
[DEBUG] 2020-05-27 00:28:53.221 [restartedMain] DefaultLifecycleProcessor - Successfully started bean 'webServerStartStop'
[DEBUG] 2020-05-27 00:28:53.221 [restartedMain] DefaultLifecycleProcessor - Starting beans in phase 2147483647
[DEBUG] 2020-05-27 00:28:53.221 [restartedMain] DefaultLifecycleProcessor - Successfully started bean 'webServerGracefulShutdown'
[INFO ] 2020-05-27 00:28:53.222 [restartedMain] DeferredRepositoryInitializationListener - Triggering deferred initialization of Spring Data repositories…
[DEBUG] 2020-05-27 00:28:53.222 [restartedMain] RepositoryFactorySupport - Initializing repository instance for com.example.demo.repos.PrescriptionRepo…
[DEBUG] 2020-05-27 00:28:53.228 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.284 [restartedMain] JpaQueryFactory - Looking up query for method findPrescriptionById
[DEBUG] 2020-05-27 00:28:53.287 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.304 [restartedMain] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5e56d2e6
[DEBUG] 2020-05-27 00:28:53.316 [restartedMain] QueryTranslatorImpl - parse() - HQL: Select p from com.example.demo.entity.Prescription p where p.id = :id
[DEBUG] 2020-05-27 00:28:53.321 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.326 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Prescription'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[DEBUG] 2020-05-27 00:28:53.339 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.348 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.Prescription (p) -> prescripti0_
[DEBUG] 2020-05-27 00:28:53.349 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.351 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.352 [restartedMain] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.354 [restartedMain] FromReferenceNode - Resolved : p.id -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.355 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.355 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} prescripti0_.id_prescription ) ( FromClause{level=1} prescription_table prescripti0_ ) ( where ( = ( prescripti0_.id_prescription prescripti0_.id_prescription id ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.360 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Prescription): [prescription_table]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
    |  | originalText: p
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
          | path: p.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.362 [restartedMain] JoinProcessor - Using FROM fragment [prescription_table prescripti0_]
[DEBUG] 2020-05-27 00:28:53.362 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.362 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (prescription_table)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription as id_presc1_5_' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[prescripti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'prescription_table prescripti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=prescription_table,tableAlias=prescripti0_,origin=null,columns={,className=com.example.demo.entity.Prescription}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'prescripti0_.id_prescription' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=p.id,tableAlias=prescripti0_,className=com.example.demo.entity.Prescription,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@50b32cac}

[DEBUG] 2020-05-27 00:28:53.362 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.365 [restartedMain] QueryTranslatorImpl - HQL: Select p from com.example.demo.entity.Prescription p where p.id = :id
[DEBUG] 2020-05-27 00:28:53.365 [restartedMain] QueryTranslatorImpl - SQL: select prescripti0_.id_prescription as id_presc1_5_, prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_ from prescription_table prescripti0_ where prescripti0_.id_prescription=?
[DEBUG] 2020-05-27 00:28:53.365 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.374 [restartedMain] JpaQueryFactory - Looking up query for method operations
[DEBUG] 2020-05-27 00:28:53.374 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.375 [restartedMain] QueryTranslatorImpl - parse() - HQL: Select p from com.example.demo.entity.Prescription p where p.prescriptionClass = 'operations'
[DEBUG] 2020-05-27 00:28:53.376 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.377 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Prescription'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'prescriptionClass'
          \-[QUOTED_STRING] Node: ''operations''

[DEBUG] 2020-05-27 00:28:53.377 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.377 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.Prescription (p) -> prescripti0_
[DEBUG] 2020-05-27 00:28:53.377 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.377 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.377 [restartedMain] DotNode - getDataType() : prescriptionClass -> org.hibernate.type.StringType@5defd596
[DEBUG] 2020-05-27 00:28:53.377 [restartedMain] FromReferenceNode - Resolved : p.prescriptionClass -> prescripti0_.prescription_class
[DEBUG] 2020-05-27 00:28:53.378 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.378 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} prescripti0_.id_prescription ) ( FromClause{level=1} prescription_table prescripti0_ ) ( where ( = ( prescripti0_.prescription_class prescripti0_.id_prescription prescriptionClass ) 'operations' ) ) )
[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Prescription): [prescription_table]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
    |  | originalText: p
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
          | path: p.prescriptionClass
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: prescriptionClass
          \-LiteralNode

[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] JoinProcessor - Using FROM fragment [prescription_table prescripti0_]
[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (prescription_table)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription as id_presc1_5_' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[prescripti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'prescription_table prescripti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=prescription_table,tableAlias=prescripti0_,origin=null,columns={,className=com.example.demo.entity.Prescription}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'prescripti0_.prescription_class' {propertyName=prescriptionClass,dereferenceType=PRIMITIVE,getPropertyPath=prescriptionClass,path=p.prescriptionClass,tableAlias=prescripti0_,className=com.example.demo.entity.Prescription,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
          |  \-[IDENT] IdentNode: 'prescriptionClass' {originalText=prescriptionClass}
          \-[QUOTED_STRING] LiteralNode: ''operations''

[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] QueryTranslatorImpl - HQL: Select p from com.example.demo.entity.Prescription p where p.prescriptionClass = 'operations'
[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] QueryTranslatorImpl - SQL: select prescripti0_.id_prescription as id_presc1_5_, prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_ from prescription_table prescripti0_ where prescripti0_.prescription_class='operations'
[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] JpaQueryFactory - Looking up query for method allPrescriptions
[DEBUG] 2020-05-27 00:28:53.379 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.380 [restartedMain] QueryTranslatorImpl - parse() - HQL: Select p from com.example.demo.entity.Prescription p
[DEBUG] 2020-05-27 00:28:53.380 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'example'
       |     |  |  |  \-[IDENT] Node: 'demo'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Prescription'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'p'

[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.Prescription (p) -> prescripti0_
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} prescripti0_.id_prescription ) ( FromClause{level=1} prescription_table prescripti0_ ) )
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Prescription): [prescription_table]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] JoinProcessor - Using FROM fragment [prescription_table prescripti0_]
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (prescription_table)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription as id_presc1_5_' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[prescripti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'prescription_table prescripti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=prescription_table,tableAlias=prescripti0_,origin=null,columns={,className=com.example.demo.entity.Prescription}}

[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] QueryTranslatorImpl - HQL: Select p from com.example.demo.entity.Prescription p
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] QueryTranslatorImpl - SQL: select prescripti0_.id_prescription as id_presc1_5_, prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_ from prescription_table prescripti0_
[DEBUG] 2020-05-27 00:28:53.381 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.382 [restartedMain] JpaQueryFactory - Looking up query for method procedures
[DEBUG] 2020-05-27 00:28:53.382 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.383 [restartedMain] QueryTranslatorImpl - parse() - HQL: Select p from com.example.demo.entity.Prescription p where p.prescriptionClass = 'procedures'
[DEBUG] 2020-05-27 00:28:53.383 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.383 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Prescription'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'prescriptionClass'
          \-[QUOTED_STRING] Node: ''procedures''

[DEBUG] 2020-05-27 00:28:53.383 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.384 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.Prescription (p) -> prescripti0_
[DEBUG] 2020-05-27 00:28:53.384 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.385 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.385 [restartedMain] DotNode - getDataType() : prescriptionClass -> org.hibernate.type.StringType@5defd596
[DEBUG] 2020-05-27 00:28:53.385 [restartedMain] FromReferenceNode - Resolved : p.prescriptionClass -> prescripti0_.prescription_class
[DEBUG] 2020-05-27 00:28:53.385 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.385 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} prescripti0_.id_prescription ) ( FromClause{level=1} prescription_table prescripti0_ ) ( where ( = ( prescripti0_.prescription_class prescripti0_.id_prescription prescriptionClass ) 'procedures' ) ) )
[DEBUG] 2020-05-27 00:28:53.385 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Prescription): [prescription_table]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
    |  | originalText: p
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
          | path: p.prescriptionClass
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: prescriptionClass
          \-LiteralNode

[DEBUG] 2020-05-27 00:28:53.385 [restartedMain] JoinProcessor - Using FROM fragment [prescription_table prescripti0_]
[DEBUG] 2020-05-27 00:28:53.386 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.386 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (prescription_table)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription as id_presc1_5_' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[prescripti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'prescription_table prescripti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=prescription_table,tableAlias=prescripti0_,origin=null,columns={,className=com.example.demo.entity.Prescription}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'prescripti0_.prescription_class' {propertyName=prescriptionClass,dereferenceType=PRIMITIVE,getPropertyPath=prescriptionClass,path=p.prescriptionClass,tableAlias=prescripti0_,className=com.example.demo.entity.Prescription,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
          |  \-[IDENT] IdentNode: 'prescriptionClass' {originalText=prescriptionClass}
          \-[QUOTED_STRING] LiteralNode: ''procedures''

[DEBUG] 2020-05-27 00:28:53.386 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.386 [restartedMain] QueryTranslatorImpl - HQL: Select p from com.example.demo.entity.Prescription p where p.prescriptionClass = 'procedures'
[DEBUG] 2020-05-27 00:28:53.386 [restartedMain] QueryTranslatorImpl - SQL: select prescripti0_.id_prescription as id_presc1_5_, prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_ from prescription_table prescripti0_ where prescripti0_.prescription_class='procedures'
[DEBUG] 2020-05-27 00:28:53.386 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.388 [restartedMain] JpaQueryFactory - Looking up query for method medicine
[DEBUG] 2020-05-27 00:28:53.388 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.389 [restartedMain] QueryTranslatorImpl - parse() - HQL: Select p from com.example.demo.entity.Prescription p where p.prescriptionClass = 'medicine'
[DEBUG] 2020-05-27 00:28:53.389 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.389 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Prescription'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'prescriptionClass'
          \-[QUOTED_STRING] Node: ''medicine''

[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.Prescription (p) -> prescripti0_
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] FromReferenceNode - Resolved : p -> prescripti0_.id_prescription
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] DotNode - getDataType() : prescriptionClass -> org.hibernate.type.StringType@5defd596
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] FromReferenceNode - Resolved : p.prescriptionClass -> prescripti0_.prescription_class
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} prescripti0_.id_prescription ) ( FromClause{level=1} prescription_table prescripti0_ ) ( where ( = ( prescripti0_.prescription_class prescripti0_.id_prescription prescriptionClass ) 'medicine' ) ) )
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Prescription): [prescription_table]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
    |  | originalText: p
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
          | path: p.prescriptionClass
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.Prescription)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: prescriptionClass
          \-LiteralNode

[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] JoinProcessor - Using FROM fragment [prescription_table prescripti0_]
[DEBUG] 2020-05-27 00:28:53.390 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.391 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (prescription_table)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription as id_presc1_5_' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[prescripti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'prescription_table prescripti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=prescription_table,tableAlias=prescripti0_,origin=null,columns={,className=com.example.demo.entity.Prescription}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'prescripti0_.prescription_class' {propertyName=prescriptionClass,dereferenceType=PRIMITIVE,getPropertyPath=prescriptionClass,path=p.prescriptionClass,tableAlias=prescripti0_,className=com.example.demo.entity.Prescription,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'prescripti0_.id_prescription' {alias=p, className=com.example.demo.entity.Prescription, tableAlias=prescripti0_}
          |  \-[IDENT] IdentNode: 'prescriptionClass' {originalText=prescriptionClass}
          \-[QUOTED_STRING] LiteralNode: ''medicine''

[DEBUG] 2020-05-27 00:28:53.391 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.391 [restartedMain] QueryTranslatorImpl - HQL: Select p from com.example.demo.entity.Prescription p where p.prescriptionClass = 'medicine'
[DEBUG] 2020-05-27 00:28:53.391 [restartedMain] QueryTranslatorImpl - SQL: select prescripti0_.id_prescription as id_presc1_5_, prescripti0_.prescription_name as prescrip2_5_, prescripti0_.prescription_class as prescrip3_5_ from prescription_table prescripti0_ where prescripti0_.prescription_class='medicine'
[DEBUG] 2020-05-27 00:28:53.391 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.402 [restartedMain] RepositoryFactorySupport - Finished creation of repository instance for com.example.demo.repos.PrescriptionRepo.
[DEBUG] 2020-05-27 00:28:53.404 [restartedMain] RepositoryFactorySupport - Initializing repository instance for com.example.demo.repos.MedicineListRepo…
[DEBUG] 2020-05-27 00:28:53.405 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.414 [restartedMain] JpaQueryFactory - Looking up query for method medicine
[DEBUG] 2020-05-27 00:28:53.414 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.415 [restartedMain] QueryTranslatorImpl - parse() - HQL: Select m from com.example.demo.entity.MedicineList m where m.name =:name
[DEBUG] 2020-05-27 00:28:53.415 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.415 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'MedicineList'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'm'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

[DEBUG] 2020-05-27 00:28:53.415 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.415 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.MedicineList (m) -> medicineli0_
[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] FromReferenceNode - Resolved : m -> medicineli0_.medicine_id
[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] FromReferenceNode - Resolved : m -> medicineli0_.medicine_id
[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] DotNode - getDataType() : name -> org.hibernate.type.StringType@5defd596
[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] FromReferenceNode - Resolved : m.name -> medicineli0_.medicine_name
[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} medicineli0_.medicine_id ) ( FromClause{level=1} medicine_list medicineli0_ ) ( where ( = ( medicineli0_.medicine_name medicineli0_.medicine_id name ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MedicineList): [medicine_list]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.MedicineList)
    |  | originalText: m
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.MedicineList)
          | path: m.name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.MedicineList)
          |  | originalText: m
          |  \-IdentNode
          |    persister: null
          |    originalText: name
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] JoinProcessor - Using FROM fragment [medicine_list medicineli0_]
[DEBUG] 2020-05-27 00:28:53.416 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.417 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (medicine_list)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'medicineli0_.medicine_id as medicine1_2_' {alias=m, className=com.example.demo.entity.MedicineList, tableAlias=medicineli0_}
    |  \-[SQL_TOKEN] SqlFragment: 'medicineli0_.medicine_amount as medicine2_2_, medicineli0_.medicine_name as medicine3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[medicineli0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'medicine_list medicineli0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=medicine_list,tableAlias=medicineli0_,origin=null,columns={,className=com.example.demo.entity.MedicineList}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'medicineli0_.medicine_name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=m.name,tableAlias=medicineli0_,className=com.example.demo.entity.MedicineList,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'medicineli0_.medicine_id' {alias=m, className=com.example.demo.entity.MedicineList, tableAlias=medicineli0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@5defd596}

[DEBUG] 2020-05-27 00:28:53.417 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.417 [restartedMain] QueryTranslatorImpl - HQL: Select m from com.example.demo.entity.MedicineList m where m.name =:name
[DEBUG] 2020-05-27 00:28:53.417 [restartedMain] QueryTranslatorImpl - SQL: select medicineli0_.medicine_id as medicine1_2_, medicineli0_.medicine_amount as medicine2_2_, medicineli0_.medicine_name as medicine3_2_ from medicine_list medicineli0_ where medicineli0_.medicine_name=?
[DEBUG] 2020-05-27 00:28:53.417 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.418 [restartedMain] RepositoryFactorySupport - Finished creation of repository instance for com.example.demo.repos.MedicineListRepo.
[DEBUG] 2020-05-27 00:28:53.419 [restartedMain] RepositoryFactorySupport - Initializing repository instance for com.example.demo.repos.PatientDataRepo…
[DEBUG] 2020-05-27 00:28:53.419 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.431 [restartedMain] JpaQueryFactory - Looking up query for method findPatientWithoutNurse
[DEBUG] 2020-05-27 00:28:53.431 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.431 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.nurse.id IS NULL and u.patientStatus = 1
[DEBUG] 2020-05-27 00:28:53.432 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.432 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'PatientData'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[IS_NULL] Node: 'is null'
          |  \-[DOT] Node: '.'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'u'
          |     |  \-[IDENT] Node: 'nurse'
          |     \-[IDENT] Node: 'id'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'patientStatus'
             \-[NUM_INT] Node: '1'

[DEBUG] 2020-05-27 00:28:53.432 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.432 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.PatientData (u) -> patientdat0_
[DEBUG] 2020-05-27 00:28:53.433 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] DotNode - getDataType() : nurse -> org.hibernate.type.ManyToOneType(com.example.demo.entity.AppUser)
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] DotNode - dereferenceShortcut() : property id in com.example.demo.entity.PatientData does not require a join.
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] DotNode - Unresolved property path is now 'nurse.id'
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] FromReferenceNode - Resolved : u.nurse -> patientdat0_.nurse_id
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] DotNode - getDataType() : nurse.id -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] FromReferenceNode - Resolved : u.nurse.id -> patientdat0_.nurse_id
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] DotNode - getDataType() : patientStatus -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.434 [restartedMain] FromReferenceNode - Resolved : u.patientStatus -> patientdat0_.patient_status
[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patientdat0_.id ) ( FromClause{level=1} patient_data patientdat0_ ) ( WHERE ( and ( is null ( patientdat0_.nurse_id ( patientdat0_.nurse_id patientdat0_.id nurse ) id ) ) ( = ( patientdat0_.patient_status patientdat0_.id patientStatus ) 1 ) ) ) )
[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity PatientData): [patient_data]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-IsNullLogicOperatorNode
          |  \-DotNode
          |    persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |    path: u.nurse.id
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |     | path: u.nurse
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |     |  | originalText: u
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: nurse
          |     \-IdentNode
          |       persister: null
          |       originalText: id
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
             | path: u.patientStatus
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
             |  | originalText: u
             |  \-IdentNode
             |    persister: null
             |    originalText: patientStatus
             \-LiteralNode

[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] JoinProcessor - Using FROM fragment [patient_data patientdat0_]
[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient_data)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id as id1_3_' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[patientdat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'patient_data patientdat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=patient_data,tableAlias=patientdat0_,origin=null,columns={,className=com.example.demo.entity.PatientData}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          |  \-[DOT] DotNode: 'patientdat0_.nurse_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=nurse.id,path=u.nurse.id,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |     +-[DOT] DotNode: 'patientdat0_.nurse_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=nurse.id,path=u.nurse,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |     |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
          |     |  \-[IDENT] IdentNode: 'nurse' {originalText=nurse}
          |     \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'patientdat0_.patient_status' {propertyName=patientStatus,dereferenceType=PRIMITIVE,getPropertyPath=patientStatus,path=u.patientStatus,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
             |  \-[IDENT] IdentNode: 'patientStatus' {originalText=patientStatus}
             \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] QueryTranslatorImpl - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.nurse.id IS NULL and u.patientStatus = 1
[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] QueryTranslatorImpl - SQL: select patientdat0_.id as id1_3_, patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_ from patient_data patientdat0_ where (patientdat0_.nurse_id is null) and patientdat0_.patient_status=1
[DEBUG] 2020-05-27 00:28:53.435 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.436 [restartedMain] JpaQueryFactory - Looking up query for method findExistingDoctorPatients
[DEBUG] 2020-05-27 00:28:53.436 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.437 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.doctor.id = :doctor_id
[DEBUG] 2020-05-27 00:28:53.438 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.438 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'PatientData'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'doctor'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'doctor_id'

[DEBUG] 2020-05-27 00:28:53.438 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.438 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.PatientData (u) -> patientdat0_
[DEBUG] 2020-05-27 00:28:53.438 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.439 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.439 [restartedMain] DotNode - getDataType() : doctor -> org.hibernate.type.ManyToOneType(com.example.demo.entity.AppUser)
[DEBUG] 2020-05-27 00:28:53.439 [restartedMain] DotNode - dereferenceShortcut() : property id in com.example.demo.entity.PatientData does not require a join.
[DEBUG] 2020-05-27 00:28:53.439 [restartedMain] DotNode - Unresolved property path is now 'doctor.id'
[DEBUG] 2020-05-27 00:28:53.439 [restartedMain] FromReferenceNode - Resolved : u.doctor -> patientdat0_.doctor_id
[DEBUG] 2020-05-27 00:28:53.439 [restartedMain] DotNode - getDataType() : doctor.id -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.439 [restartedMain] FromReferenceNode - Resolved : u.doctor.id -> patientdat0_.doctor_id
[DEBUG] 2020-05-27 00:28:53.440 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.440 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patientdat0_.id ) ( FromClause{level=1} patient_data patientdat0_ ) ( WHERE ( = ( patientdat0_.doctor_id ( patientdat0_.doctor_id patientdat0_.id doctor ) id ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.440 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity PatientData): [patient_data]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          | path: u.doctor.id
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |  | path: u.doctor
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |  |  | originalText: u
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: doctor
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.440 [restartedMain] JoinProcessor - Using FROM fragment [patient_data patientdat0_]
[DEBUG] 2020-05-27 00:28:53.440 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.441 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient_data)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id as id1_3_' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[patientdat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'patient_data patientdat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=patient_data,tableAlias=patientdat0_,origin=null,columns={,className=com.example.demo.entity.PatientData}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'patientdat0_.doctor_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=doctor.id,path=u.doctor.id,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |  +-[DOT] DotNode: 'patientdat0_.doctor_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=doctor.id,path=u.doctor,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
          |  |  \-[IDENT] IdentNode: 'doctor' {originalText=doctor}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=doctor_id, expectedType=org.hibernate.type.IntegerType@50b32cac}

[DEBUG] 2020-05-27 00:28:53.441 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.441 [restartedMain] QueryTranslatorImpl - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.doctor.id = :doctor_id
[DEBUG] 2020-05-27 00:28:53.441 [restartedMain] QueryTranslatorImpl - SQL: select patientdat0_.id as id1_3_, patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_ from patient_data patientdat0_ where patientdat0_.doctor_id=?
[DEBUG] 2020-05-27 00:28:53.441 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.442 [restartedMain] JpaQueryFactory - Looking up query for method findPatientWithoutDoctor
[DEBUG] 2020-05-27 00:28:53.442 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.doctor.id IS NULL and u.patientStatus = 1
[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'PatientData'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'and'
          +-[IS_NULL] Node: 'is null'
          |  \-[DOT] Node: '.'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'u'
          |     |  \-[IDENT] Node: 'doctor'
          |     \-[IDENT] Node: 'id'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'patientStatus'
             \-[NUM_INT] Node: '1'

[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.PatientData (u) -> patientdat0_
[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] DotNode - getDataType() : doctor -> org.hibernate.type.ManyToOneType(com.example.demo.entity.AppUser)
[DEBUG] 2020-05-27 00:28:53.443 [restartedMain] DotNode - dereferenceShortcut() : property id in com.example.demo.entity.PatientData does not require a join.
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] DotNode - Unresolved property path is now 'doctor.id'
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] FromReferenceNode - Resolved : u.doctor -> patientdat0_.doctor_id
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] DotNode - getDataType() : doctor.id -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] FromReferenceNode - Resolved : u.doctor.id -> patientdat0_.doctor_id
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] DotNode - getDataType() : patientStatus -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] FromReferenceNode - Resolved : u.patientStatus -> patientdat0_.patient_status
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patientdat0_.id ) ( FromClause{level=1} patient_data patientdat0_ ) ( WHERE ( and ( is null ( patientdat0_.doctor_id ( patientdat0_.doctor_id patientdat0_.id doctor ) id ) ) ( = ( patientdat0_.patient_status patientdat0_.id patientStatus ) 1 ) ) ) )
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity PatientData): [patient_data]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-IsNullLogicOperatorNode
          |  \-DotNode
          |    persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |    path: u.doctor.id
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |     | path: u.doctor
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |     |  | originalText: u
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: doctor
          |     \-IdentNode
          |       persister: null
          |       originalText: id
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
             | path: u.patientStatus
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
             |  | originalText: u
             |  \-IdentNode
             |    persister: null
             |    originalText: patientStatus
             \-LiteralNode

[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] JoinProcessor - Using FROM fragment [patient_data patientdat0_]
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient_data)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id as id1_3_' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[patientdat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'patient_data patientdat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=patient_data,tableAlias=patientdat0_,origin=null,columns={,className=com.example.demo.entity.PatientData}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'and'
          +-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          |  \-[DOT] DotNode: 'patientdat0_.doctor_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=doctor.id,path=u.doctor.id,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |     +-[DOT] DotNode: 'patientdat0_.doctor_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=doctor.id,path=u.doctor,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |     |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
          |     |  \-[IDENT] IdentNode: 'doctor' {originalText=doctor}
          |     \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'patientdat0_.patient_status' {propertyName=patientStatus,dereferenceType=PRIMITIVE,getPropertyPath=patientStatus,path=u.patientStatus,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
             |  \-[IDENT] IdentNode: 'patientStatus' {originalText=patientStatus}
             \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2020-05-27 00:28:53.444 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.445 [restartedMain] QueryTranslatorImpl - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.doctor.id IS NULL and u.patientStatus = 1
[DEBUG] 2020-05-27 00:28:53.445 [restartedMain] QueryTranslatorImpl - SQL: select patientdat0_.id as id1_3_, patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_ from patient_data patientdat0_ where (patientdat0_.doctor_id is null) and patientdat0_.patient_status=1
[DEBUG] 2020-05-27 00:28:53.445 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.445 [restartedMain] JpaQueryFactory - Looking up query for method allPatientData
[DEBUG] 2020-05-27 00:28:53.445 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.446 [restartedMain] QueryTranslatorImpl - parse() - HQL: Select p from com.example.demo.entity.PatientData p
[DEBUG] 2020-05-27 00:28:53.446 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.446 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'example'
       |     |  |  |  \-[IDENT] Node: 'demo'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'PatientData'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'p'

[DEBUG] 2020-05-27 00:28:53.446 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.446 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.PatientData (p) -> patientdat0_
[DEBUG] 2020-05-27 00:28:53.446 [restartedMain] FromReferenceNode - Resolved : p -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.446 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.446 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patientdat0_.id ) ( FromClause{level=1} patient_data patientdat0_ ) )
[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity PatientData): [patient_data]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] JoinProcessor - Using FROM fragment [patient_data patientdat0_]
[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient_data)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id as id1_3_' {alias=p, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[patientdat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'patient_data patientdat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=patient_data,tableAlias=patientdat0_,origin=null,columns={,className=com.example.demo.entity.PatientData}}

[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] QueryTranslatorImpl - HQL: Select p from com.example.demo.entity.PatientData p
[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] QueryTranslatorImpl - SQL: select patientdat0_.id as id1_3_, patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_ from patient_data patientdat0_
[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.447 [restartedMain] JpaQueryFactory - Looking up query for method findExistingNursePatients
[DEBUG] 2020-05-27 00:28:53.448 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.448 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.nurse.id = :nurse_id
[DEBUG] 2020-05-27 00:28:53.448 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'PatientData'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'nurse'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'nurse_id'

[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.PatientData (u) -> patientdat0_
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] DotNode - getDataType() : nurse -> org.hibernate.type.ManyToOneType(com.example.demo.entity.AppUser)
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] DotNode - dereferenceShortcut() : property id in com.example.demo.entity.PatientData does not require a join.
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] DotNode - Unresolved property path is now 'nurse.id'
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] FromReferenceNode - Resolved : u.nurse -> patientdat0_.nurse_id
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] DotNode - getDataType() : nurse.id -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] FromReferenceNode - Resolved : u.nurse.id -> patientdat0_.nurse_id
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patientdat0_.id ) ( FromClause{level=1} patient_data patientdat0_ ) ( WHERE ( = ( patientdat0_.nurse_id ( patientdat0_.nurse_id patientdat0_.id nurse ) id ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity PatientData): [patient_data]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          | path: u.nurse.id
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |  | path: u.nurse
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |  |  | originalText: u
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: nurse
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] JoinProcessor - Using FROM fragment [patient_data patientdat0_]
[DEBUG] 2020-05-27 00:28:53.449 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.450 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient_data)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id as id1_3_' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[patientdat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'patient_data patientdat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=patient_data,tableAlias=patientdat0_,origin=null,columns={,className=com.example.demo.entity.PatientData}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'patientdat0_.nurse_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=nurse.id,path=u.nurse.id,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |  +-[DOT] DotNode: 'patientdat0_.nurse_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=nurse.id,path=u.nurse,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
          |  |  \-[IDENT] IdentNode: 'nurse' {originalText=nurse}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=nurse_id, expectedType=org.hibernate.type.IntegerType@50b32cac}

[DEBUG] 2020-05-27 00:28:53.450 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.450 [restartedMain] QueryTranslatorImpl - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.nurse.id = :nurse_id
[DEBUG] 2020-05-27 00:28:53.450 [restartedMain] QueryTranslatorImpl - SQL: select patientdat0_.id as id1_3_, patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_ from patient_data patientdat0_ where patientdat0_.nurse_id=?
[DEBUG] 2020-05-27 00:28:53.450 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.450 [restartedMain] JpaQueryFactory - Looking up query for method getPatientById
[DEBUG] 2020-05-27 00:28:53.451 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.451 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.patient.id = :patient_id
[DEBUG] 2020-05-27 00:28:53.451 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'PatientData'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'patient'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'patient_id'

[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.PatientData (u) -> patientdat0_
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] FromReferenceNode - Resolved : u -> patientdat0_.id
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] DotNode - getDataType() : patient -> org.hibernate.type.ManyToOneType(com.example.demo.entity.AppUser)
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] DotNode - dereferenceShortcut() : property id in com.example.demo.entity.PatientData does not require a join.
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] DotNode - Unresolved property path is now 'patient.id'
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] FromReferenceNode - Resolved : u.patient -> patientdat0_.patient_id
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] DotNode - getDataType() : patient.id -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] FromReferenceNode - Resolved : u.patient.id -> patientdat0_.patient_id
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} patientdat0_.id ) ( FromClause{level=1} patient_data patientdat0_ ) ( WHERE ( = ( patientdat0_.patient_id ( patientdat0_.patient_id patientdat0_.id patient ) id ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity PatientData): [patient_data]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          | path: u.patient.id
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |  | path: u.patient
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.example.demo.entity.PatientData)
          |  |  | originalText: u
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: patient
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] JoinProcessor - Using FROM fragment [patient_data patientdat0_]
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.452 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (patient_data)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id as id1_3_' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
    |  \-[SQL_TOKEN] SqlFragment: 'patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[patientdat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'patient_data patientdat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=patient_data,tableAlias=patientdat0_,origin=null,columns={,className=com.example.demo.entity.PatientData}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'patientdat0_.patient_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=patient.id,path=u.patient.id,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |  +-[DOT] DotNode: 'patientdat0_.patient_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=patient.id,path=u.patient,tableAlias=patientdat0_,className=com.example.demo.entity.PatientData,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'patientdat0_.id' {alias=u, className=com.example.demo.entity.PatientData, tableAlias=patientdat0_}
          |  |  \-[IDENT] IdentNode: 'patient' {originalText=patient}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=patient_id, expectedType=org.hibernate.type.IntegerType@50b32cac}

[DEBUG] 2020-05-27 00:28:53.453 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.453 [restartedMain] QueryTranslatorImpl - HQL: SELECT u FROM com.example.demo.entity.PatientData u WHERE u.patient.id = :patient_id
[DEBUG] 2020-05-27 00:28:53.453 [restartedMain] QueryTranslatorImpl - SQL: select patientdat0_.id as id1_3_, patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_ from patient_data patientdat0_ where patientdat0_.patient_id=?
[DEBUG] 2020-05-27 00:28:53.453 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.455 [restartedMain] RepositoryFactorySupport - Finished creation of repository instance for com.example.demo.repos.PatientDataRepo.
[DEBUG] 2020-05-27 00:28:53.456 [restartedMain] RepositoryFactorySupport - Initializing repository instance for com.example.demo.repos.UserRepo…
[DEBUG] 2020-05-27 00:28:53.457 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.465 [restartedMain] JpaQueryFactory - Looking up query for method getUserByUsername
[DEBUG] 2020-05-27 00:28:53.465 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.466 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT u FROM com.example.demo.entity.AppUser u WHERE u.email = :email
[DEBUG] 2020-05-27 00:28:53.466 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.466 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'AppUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

[DEBUG] 2020-05-27 00:28:53.466 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.466 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.AppUser (u) -> appuser0_
[DEBUG] 2020-05-27 00:28:53.466 [restartedMain] FromReferenceNode - Resolved : u -> appuser0_.user_id
[DEBUG] 2020-05-27 00:28:53.467 [restartedMain] FromReferenceNode - Resolved : u -> appuser0_.user_id
[DEBUG] 2020-05-27 00:28:53.467 [restartedMain] DotNode - getDataType() : email -> org.hibernate.type.StringType@5defd596
[DEBUG] 2020-05-27 00:28:53.467 [restartedMain] FromReferenceNode - Resolved : u.email -> appuser0_.email
[DEBUG] 2020-05-27 00:28:53.467 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.467 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} appuser0_.user_id ) ( FromClause{level=1} users appuser0_ ) ( WHERE ( = ( appuser0_.email appuser0_.user_id email ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.467 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity AppUser): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
          | path: u.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.467 [restartedMain] JoinProcessor - Using FROM fragment [users appuser0_]
[DEBUG] 2020-05-27 00:28:53.467 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.468 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'appuser0_.user_id as user_id1_7_' {alias=u, className=com.example.demo.entity.AppUser, tableAlias=appuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'appuser0_.email as email2_7_, appuser0_.enabled as enabled3_7_, appuser0_.name as name4_7_, appuser0_.password as password5_7_, appuser0_.role as role7_7_, appuser0_.surname as surname6_7_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[appuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users appuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=appuser0_,origin=null,columns={,className=com.example.demo.entity.AppUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'appuser0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=appuser0_,className=com.example.demo.entity.AppUser,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'appuser0_.user_id' {alias=u, className=com.example.demo.entity.AppUser, tableAlias=appuser0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@5defd596}

[DEBUG] 2020-05-27 00:28:53.468 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.468 [restartedMain] QueryTranslatorImpl - HQL: SELECT u FROM com.example.demo.entity.AppUser u WHERE u.email = :email
[DEBUG] 2020-05-27 00:28:53.468 [restartedMain] QueryTranslatorImpl - SQL: select appuser0_.user_id as user_id1_7_, appuser0_.email as email2_7_, appuser0_.enabled as enabled3_7_, appuser0_.name as name4_7_, appuser0_.password as password5_7_, appuser0_.role as role7_7_, appuser0_.surname as surname6_7_ from users appuser0_ where appuser0_.email=?
[DEBUG] 2020-05-27 00:28:53.468 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.468 [restartedMain] JpaQueryFactory - Looking up query for method getUserByRole
[DEBUG] 2020-05-27 00:28:53.468 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.469 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT u FROM com.example.demo.entity.AppUser u WHERE u.role = :role
[DEBUG] 2020-05-27 00:28:53.469 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.469 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'AppUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'role'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'role'

[DEBUG] 2020-05-27 00:28:53.469 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.469 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.AppUser (u) -> appuser0_
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] FromReferenceNode - Resolved : u -> appuser0_.user_id
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] FromReferenceNode - Resolved : u -> appuser0_.user_id
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] DotNode - getDataType() : role -> org.hibernate.type.ManyToOneType(com.example.demo.entity.Role)
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] DotNode - dereferenceShortcut() : property role in com.example.demo.entity.AppUser does not require a join.
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] DotNode - Terminal getPropertyPath = [role]
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] FromReferenceNode - Resolved : u.role -> appuser0_.role
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} appuser0_.user_id ) ( FromClause{level=1} users appuser0_ ) ( WHERE ( = ( appuser0_.role appuser0_.user_id role ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.470 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity AppUser): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
          | path: u.role
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: role
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.471 [restartedMain] JoinProcessor - Using FROM fragment [users appuser0_]
[DEBUG] 2020-05-27 00:28:53.471 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.471 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'appuser0_.user_id as user_id1_7_' {alias=u, className=com.example.demo.entity.AppUser, tableAlias=appuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'appuser0_.email as email2_7_, appuser0_.enabled as enabled3_7_, appuser0_.name as name4_7_, appuser0_.password as password5_7_, appuser0_.role as role7_7_, appuser0_.surname as surname6_7_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[appuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users appuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=appuser0_,origin=null,columns={,className=com.example.demo.entity.AppUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'appuser0_.role' {propertyName=role,dereferenceType=UNKNOWN,getPropertyPath=role,path=u.role,tableAlias=appuser0_,className=com.example.demo.entity.AppUser,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'appuser0_.user_id' {alias=u, className=com.example.demo.entity.AppUser, tableAlias=appuser0_}
          |  \-[IDENT] IdentNode: 'role' {originalText=role}
          \-[NAMED_PARAM] ParameterNode: '?' {name=role, expectedType=org.hibernate.type.ManyToOneType(com.example.demo.entity.Role)}

[DEBUG] 2020-05-27 00:28:53.471 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.471 [restartedMain] QueryTranslatorImpl - HQL: SELECT u FROM com.example.demo.entity.AppUser u WHERE u.role = :role
[DEBUG] 2020-05-27 00:28:53.471 [restartedMain] QueryTranslatorImpl - SQL: select appuser0_.user_id as user_id1_7_, appuser0_.email as email2_7_, appuser0_.enabled as enabled3_7_, appuser0_.name as name4_7_, appuser0_.password as password5_7_, appuser0_.role as role7_7_, appuser0_.surname as surname6_7_ from users appuser0_ where appuser0_.role=?
[DEBUG] 2020-05-27 00:28:53.471 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.472 [restartedMain] JpaQueryFactory - Looking up query for method getUserById
[DEBUG] 2020-05-27 00:28:53.472 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.474 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT u FROM com.example.demo.entity.AppUser u WHERE u.id = :id
[DEBUG] 2020-05-27 00:28:53.474 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'AppUser'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.AppUser (u) -> appuser0_
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] FromReferenceNode - Resolved : u -> appuser0_.user_id
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] FromReferenceNode - Resolved : u -> appuser0_.user_id
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@50b32cac
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] FromReferenceNode - Resolved : u.id -> appuser0_.user_id
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} appuser0_.user_id ) ( FromClause{level=1} users appuser0_ ) ( WHERE ( = ( appuser0_.user_id appuser0_.user_id id ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity AppUser): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
          | path: u.id
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.AppUser)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: id
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] JoinProcessor - Using FROM fragment [users appuser0_]
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.475 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'appuser0_.user_id as user_id1_7_' {alias=u, className=com.example.demo.entity.AppUser, tableAlias=appuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'appuser0_.email as email2_7_, appuser0_.enabled as enabled3_7_, appuser0_.name as name4_7_, appuser0_.password as password5_7_, appuser0_.role as role7_7_, appuser0_.surname as surname6_7_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[appuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users appuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=appuser0_,origin=null,columns={,className=com.example.demo.entity.AppUser}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'appuser0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=appuser0_,className=com.example.demo.entity.AppUser,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'appuser0_.user_id' {alias=u, className=com.example.demo.entity.AppUser, tableAlias=appuser0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@50b32cac}

[DEBUG] 2020-05-27 00:28:53.476 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.476 [restartedMain] QueryTranslatorImpl - HQL: SELECT u FROM com.example.demo.entity.AppUser u WHERE u.id = :id
[DEBUG] 2020-05-27 00:28:53.476 [restartedMain] QueryTranslatorImpl - SQL: select appuser0_.user_id as user_id1_7_, appuser0_.email as email2_7_, appuser0_.enabled as enabled3_7_, appuser0_.name as name4_7_, appuser0_.password as password5_7_, appuser0_.role as role7_7_, appuser0_.surname as surname6_7_ from users appuser0_ where appuser0_.user_id=?
[DEBUG] 2020-05-27 00:28:53.476 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.477 [restartedMain] RepositoryFactorySupport - Finished creation of repository instance for com.example.demo.repos.UserRepo.
[DEBUG] 2020-05-27 00:28:53.478 [restartedMain] RepositoryFactorySupport - Initializing repository instance for com.example.demo.repos.DiagnosisRepo…
[DEBUG] 2020-05-27 00:28:53.478 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.489 [restartedMain] JpaQueryFactory - Looking up query for method allDiagnoses
[DEBUG] 2020-05-27 00:28:53.489 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.491 [restartedMain] QueryTranslatorImpl - parse() - HQL: Select d from com.example.demo.entity.Diagnosis d
[DEBUG] 2020-05-27 00:28:53.491 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.492 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'example'
       |     |  |  |  \-[IDENT] Node: 'demo'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Diagnosis'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'Select'
          \-[IDENT] Node: 'd'

[DEBUG] 2020-05-27 00:28:53.492 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.493 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.Diagnosis (d) -> diagnosis0_
[DEBUG] 2020-05-27 00:28:53.493 [restartedMain] FromReferenceNode - Resolved : d -> diagnosis0_.id_diagnosis
[DEBUG] 2020-05-27 00:28:53.493 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.493 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} diagnosis0_.id_diagnosis ) ( FromClause{level=1} diagnosis_table diagnosis0_ ) )
[DEBUG] 2020-05-27 00:28:53.493 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Diagnosis): [diagnosis_table]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.Diagnosis)
    |  | originalText: d
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[DEBUG] 2020-05-27 00:28:53.493 [restartedMain] JoinProcessor - Using FROM fragment [diagnosis_table diagnosis0_]
[DEBUG] 2020-05-27 00:28:53.493 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.493 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (diagnosis_table)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'diagnosis0_.id_diagnosis as id_diagn1_1_' {alias=d, className=com.example.demo.entity.Diagnosis, tableAlias=diagnosis0_}
    |  \-[SQL_TOKEN] SqlFragment: 'diagnosis0_.diagnosis_difficulty as diagnosi2_1_, diagnosis0_.diagnosis_name as diagnosi3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[diagnosis0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'diagnosis_table diagnosis0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=diagnosis_table,tableAlias=diagnosis0_,origin=null,columns={,className=com.example.demo.entity.Diagnosis}}

[DEBUG] 2020-05-27 00:28:53.494 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.494 [restartedMain] QueryTranslatorImpl - HQL: Select d from com.example.demo.entity.Diagnosis d
[DEBUG] 2020-05-27 00:28:53.494 [restartedMain] QueryTranslatorImpl - SQL: select diagnosis0_.id_diagnosis as id_diagn1_1_, diagnosis0_.diagnosis_difficulty as diagnosi2_1_, diagnosis0_.diagnosis_name as diagnosi3_1_ from diagnosis_table diagnosis0_
[DEBUG] 2020-05-27 00:28:53.494 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.495 [restartedMain] RepositoryFactorySupport - Finished creation of repository instance for com.example.demo.repos.DiagnosisRepo.
[DEBUG] 2020-05-27 00:28:53.495 [restartedMain] RepositoryFactorySupport - Initializing repository instance for com.example.demo.repos.RoleRepo…
[DEBUG] 2020-05-27 00:28:53.496 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.504 [restartedMain] JpaQueryFactory - Looking up query for method findByName
[DEBUG] 2020-05-27 00:28:53.504 [restartedMain] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:28:53.505 [restartedMain] QueryTranslatorImpl - parse() - HQL: SELECT r FROM com.example.demo.entity.Role r WHERE r.name = :name
[DEBUG] 2020-05-27 00:28:53.505 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  \-[IDENT] Node: 'demo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Role'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'r'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] FromElement - FromClause{level=1} : com.example.demo.entity.Role (r) -> role0_
[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] FromReferenceNode - Resolved : r -> role0_.role_id
[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] FromReferenceNode - Resolved : r -> role0_.role_id
[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] DotNode - getDataType() : name -> org.hibernate.type.StringType@5defd596
[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] FromReferenceNode - Resolved : r.name -> role0_.name
[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.506 [restartedMain] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} user_roles role0_ ) ( WHERE ( = ( role0_.name role0_.role_id name ) ? ) ) )
[DEBUG] 2020-05-27 00:28:53.507 [restartedMain] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Role): [user_roles]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.example.demo.entity.Role)
    |  | originalText: r
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.example.demo.entity.Role)
          | path: r.name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.example.demo.entity.Role)
          |  | originalText: r
          |  \-IdentNode
          |    persister: null
          |    originalText: name
          \-ParameterNode

[DEBUG] 2020-05-27 00:28:53.507 [restartedMain] JoinProcessor - Using FROM fragment [user_roles role0_]
[DEBUG] 2020-05-27 00:28:53.507 [restartedMain] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-05-27 00:28:53.507 [restartedMain] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_roles)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_6_' {alias=r, className=com.example.demo.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.name as name2_6_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_roles role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=user_roles,tableAlias=role0_,origin=null,columns={,className=com.example.demo.entity.Role}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'role0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=r.name,tableAlias=role0_,className=com.example.demo.entity.Role,classAlias=r}
          |  +-[ALIAS_REF] IdentNode: 'role0_.role_id' {alias=r, className=com.example.demo.entity.Role, tableAlias=role0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@5defd596}

[DEBUG] 2020-05-27 00:28:53.507 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.508 [restartedMain] QueryTranslatorImpl - HQL: SELECT r FROM com.example.demo.entity.Role r WHERE r.name = :name
[DEBUG] 2020-05-27 00:28:53.508 [restartedMain] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_6_, role0_.name as name2_6_ from user_roles role0_ where role0_.name=?
[DEBUG] 2020-05-27 00:28:53.508 [restartedMain] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-05-27 00:28:53.510 [restartedMain] RepositoryFactorySupport - Finished creation of repository instance for com.example.demo.repos.RoleRepo.
[INFO ] 2020-05-27 00:28:53.511 [restartedMain] DeferredRepositoryInitializationListener - Spring Data repositories initialized!
[DEBUG] 2020-05-27 00:28:53.524 [restartedMain] ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.DataSourceTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) matched (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MustacheAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MustacheAutoConfiguration#mustacheCompiler matched:
      - @ConditionalOnMissingBean (types: com.samskivert.mustache.Mustache$Compiler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MustacheAutoConfiguration#mustacheTemplateLoader matched:
      - @ConditionalOnMissingBean (types: com.samskivert.mustache.Mustache$TemplateLoader; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MustacheServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MustacheServletWebConfiguration#mustacheViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.view.MustacheViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   OAuth2ResourceServerAutoConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BitronixJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'bitronix.tm.jndi.BitronixContext' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.DataSourceTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.PlatformTransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.SessionFactory' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.Neo4jSession' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   Oauth2ResourceServerConfiguration.JwtConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken', 'org.springframework.security.oauth2.jwt.JwtDecoder' (OnClassCondition)

   Oauth2ResourceServerConfiguration.OpaqueTokenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken', 'org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.DatabaseClient' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.connectionfactory.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocketFactory' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootWebSecurityConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' webSecurityConfig (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService and found beans of type 'org.springframework.security.authentication.AuthenticationProvider' authenticationProvider (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#localeResolver:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.locale) did not find property 'locale' (OnPropertyCondition)

   WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



[DEBUG] 2020-05-27 00:28:53.537 [restartedMain] PropertySourcesPropertyResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[INFO ] 2020-05-27 00:28:53.539 [restartedMain] DemoApplication - Started DemoApplication in 5.344 seconds (JVM running for 7.374)
[DEBUG] 2020-05-27 00:28:53.541 [restartedMain] Restarter - Creating new Restarter for thread Thread[main,5,main]
[DEBUG] 2020-05-27 00:28:53.541 [restartedMain] Restarter - Immediately restarting application
[DEBUG] 2020-05-27 00:28:53.541 [restartedMain] Restarter - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3426448b
[DEBUG] 2020-05-27 00:28:53.541 [restartedMain] Restarter - Starting application com.example.demo.DemoApplication with URLs [file:/F:/GitRepository/Study/demo/target/classes/]
[INFO ] 2020-05-27 00:29:17.129 [http-nio-8077-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2020-05-27 00:29:17.129 [http-nio-8077-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[DEBUG] 2020-05-27 00:29:17.130 [http-nio-8077-exec-1] DispatcherServlet - Detected StandardServletMultipartResolver
[DEBUG] 2020-05-27 00:29:17.140 [http-nio-8077-exec-1] DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[INFO ] 2020-05-27 00:29:17.140 [http-nio-8077-exec-1] DispatcherServlet - Completed initialization in 11 ms
[DEBUG] 2020-05-27 00:29:17.155 [http-nio-8077-exec-1] FilterChainProxy - / at position 1 of 12 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
[DEBUG] 2020-05-27 00:29:17.156 [http-nio-8077-exec-1] FilterChainProxy - / at position 2 of 12 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
[DEBUG] 2020-05-27 00:29:17.156 [http-nio-8077-exec-1] HttpSessionSecurityContextRepository - No HttpSession currently exists
[DEBUG] 2020-05-27 00:29:17.156 [http-nio-8077-exec-1] HttpSessionSecurityContextRepository - No SecurityContext was available from the HttpSession: null. A new one will be created.
[DEBUG] 2020-05-27 00:29:17.157 [http-nio-8077-exec-1] FilterChainProxy - / at position 3 of 12 in additional filter chain; firing Filter: 'HeaderWriterFilter'
[DEBUG] 2020-05-27 00:29:17.158 [http-nio-8077-exec-1] FilterChainProxy - / at position 4 of 12 in additional filter chain; firing Filter: 'CsrfFilter'
[DEBUG] 2020-05-27 00:29:17.159 [http-nio-8077-exec-1] FilterChainProxy - / at position 5 of 12 in additional filter chain; firing Filter: 'LogoutFilter'
[DEBUG] 2020-05-27 00:29:17.159 [http-nio-8077-exec-1] AntPathRequestMatcher - Request 'GET /' doesn't match 'POST /logout'
[DEBUG] 2020-05-27 00:29:17.159 [http-nio-8077-exec-1] FilterChainProxy - / at position 6 of 12 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:17.159 [http-nio-8077-exec-1] AntPathRequestMatcher - Request 'GET /' doesn't match 'POST /login'
[DEBUG] 2020-05-27 00:29:17.159 [http-nio-8077-exec-1] FilterChainProxy - / at position 7 of 12 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
[DEBUG] 2020-05-27 00:29:17.159 [http-nio-8077-exec-1] HttpSessionRequestCache - saved request doesn't match
[DEBUG] 2020-05-27 00:29:17.159 [http-nio-8077-exec-1] FilterChainProxy - / at position 8 of 12 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
[DEBUG] 2020-05-27 00:29:17.159 [http-nio-8077-exec-1] FilterChainProxy - / at position 9 of 12 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:17.160 [http-nio-8077-exec-1] AnonymousAuthenticationFilter - Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@1dd61d5c: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
[DEBUG] 2020-05-27 00:29:17.160 [http-nio-8077-exec-1] FilterChainProxy - / at position 10 of 12 in additional filter chain; firing Filter: 'SessionManagementFilter'
[DEBUG] 2020-05-27 00:29:17.160 [http-nio-8077-exec-1] SessionManagementFilter - Requested session ID F02DE0DD54F3985D2C827E7ED92E3F54 is invalid.
[DEBUG] 2020-05-27 00:29:17.160 [http-nio-8077-exec-1] FilterChainProxy - / at position 11 of 12 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
[DEBUG] 2020-05-27 00:29:17.160 [http-nio-8077-exec-1] FilterChainProxy - / at position 12 of 12 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
[DEBUG] 2020-05-27 00:29:17.161 [http-nio-8077-exec-1] AntPathRequestMatcher - Request 'GET /' doesn't match 'POST /logout'
[DEBUG] 2020-05-27 00:29:17.161 [http-nio-8077-exec-1] AntPathRequestMatcher - Checking match of request : '/'; against '/'
[DEBUG] 2020-05-27 00:29:17.161 [http-nio-8077-exec-1] FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /; Attributes: [permitAll]
[DEBUG] 2020-05-27 00:29:17.161 [http-nio-8077-exec-1] FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@1dd61d5c: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
[DEBUG] 2020-05-27 00:29:17.179 [http-nio-8077-exec-1] AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@6336c12c, returned: 1
[DEBUG] 2020-05-27 00:29:17.179 [http-nio-8077-exec-1] FilterSecurityInterceptor - Authorization successful
[DEBUG] 2020-05-27 00:29:17.179 [http-nio-8077-exec-1] FilterSecurityInterceptor - RunAsManager did not change Authentication object
[DEBUG] 2020-05-27 00:29:17.179 [http-nio-8077-exec-1] FilterChainProxy - / reached end of additional filter chain; proceeding with original chain
[DEBUG] 2020-05-27 00:29:17.181 [http-nio-8077-exec-1] DispatcherServlet - GET "/", parameters={}
[DEBUG] 2020-05-27 00:29:17.191 [http-nio-8077-exec-1] WelcomePageHandlerMapping - Mapped to ParameterizableViewController [view="index"]
[DEBUG] 2020-05-27 00:29:17.192 [http-nio-8077-exec-1] OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] 2020-05-27 00:29:17.209 [http-nio-8077-exec-1] ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
[DEBUG] 2020-05-27 00:29:17.213 [http-nio-8077-exec-1] TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[DEBUG] 2020-05-27 00:29:17.373 [http-nio-8077-exec-1] CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@789338cb
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7faa73cc
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3f3df079
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[DEBUG] 2020-05-27 00:29:17.374 [http-nio-8077-exec-1] TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[DEBUG] 2020-05-27 00:29:17.446 [http-nio-8077-exec-1] HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@4282f5d7
[DEBUG] 2020-05-27 00:29:17.447 [http-nio-8077-exec-1] HttpSessionSecurityContextRepository - SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
[DEBUG] 2020-05-27 00:29:17.454 [http-nio-8077-exec-1] OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] 2020-05-27 00:29:17.455 [http-nio-8077-exec-1] DispatcherServlet - Completed 200 OK
[DEBUG] 2020-05-27 00:29:17.456 [http-nio-8077-exec-1] ExceptionTranslationFilter - Chain processed normally
[DEBUG] 2020-05-27 00:29:17.456 [http-nio-8077-exec-1] SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 1 of 12 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 2 of 12 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] HttpSessionSecurityContextRepository - No HttpSession currently exists
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] HttpSessionSecurityContextRepository - No SecurityContext was available from the HttpSession: null. A new one will be created.
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 3 of 12 in additional filter chain; firing Filter: 'HeaderWriterFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 4 of 12 in additional filter chain; firing Filter: 'CsrfFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 5 of 12 in additional filter chain; firing Filter: 'LogoutFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] AntPathRequestMatcher - Request 'GET /doctor' doesn't match 'POST /logout'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 6 of 12 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] AntPathRequestMatcher - Request 'GET /doctor' doesn't match 'POST /login'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 7 of 12 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] HttpSessionRequestCache - saved request doesn't match
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 8 of 12 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 9 of 12 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] AnonymousAuthenticationFilter - Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@1dd61d5c: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 10 of 12 in additional filter chain; firing Filter: 'SessionManagementFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] SessionManagementFilter - Requested session ID F02DE0DD54F3985D2C827E7ED92E3F54 is invalid.
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 11 of 12 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterChainProxy - /doctor at position 12 of 12 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] AntPathRequestMatcher - Request 'GET /doctor' doesn't match 'POST /logout'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] AntPathRequestMatcher - Checking match of request : '/doctor'; against '/'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] AntPathRequestMatcher - Checking match of request : '/doctor'; against '/registration'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] AntPathRequestMatcher - Checking match of request : '/doctor'; against '/doctor/**'
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /doctor; Attributes: [hasAuthority('DOCTOR')]
[DEBUG] 2020-05-27 00:29:18.938 [http-nio-8077-exec-2] FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@1dd61d5c: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@b364: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: null; Granted Authorities: ROLE_ANONYMOUS
[DEBUG] 2020-05-27 00:29:18.939 [http-nio-8077-exec-2] AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@6336c12c, returned: -1
[DEBUG] 2020-05-27 00:29:18.942 [http-nio-8077-exec-2] ExceptionTranslationFilter - Access is denied (user is anonymous); redirecting to authentication entry point
org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:84) ~[spring-security-core-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:233) ~[spring-security-core-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:123) ~[spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) ~[spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.3.2.RELEASE.jar:5.3.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[DEBUG] 2020-05-27 00:29:18.959 [http-nio-8077-exec-2] AndRequestMatcher - Trying to match using Ant [pattern='/**', GET]
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] AntPathRequestMatcher - Request '/doctor' matched by universal pattern '/**'
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] AndRequestMatcher - Trying to match using NegatedRequestMatcher [requestMatcher=Ant [pattern='/**/favicon.*']]
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] AntPathRequestMatcher - Checking match of request : '/doctor'; against '/**/favicon.*'
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] NegatedRequestMatcher - matches = true
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] AndRequestMatcher - Trying to match using NegatedRequestMatcher [requestMatcher=MediaTypeRequestMatcher [contentNegotiationStrategy=org.springframework.web.accept.ContentNegotiationManager@7647cdb1, matchingMediaTypes=[application/json], useEquals=false, ignoredMediaTypes=[*/*]]]
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - httpRequestMediaTypes=[text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing text/html
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - application/json .isCompatibleWith text/html = false
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/xhtml+xml
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - application/json .isCompatibleWith application/xhtml+xml = false
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing image/webp
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - application/json .isCompatibleWith image/webp = false
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing image/apng
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - application/json .isCompatibleWith image/apng = false
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/xml;q=0.9
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - application/json .isCompatibleWith application/xml;q=0.9 = false
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/signed-exchange;v=b3;q=0.9
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - application/json .isCompatibleWith application/signed-exchange;v=b3;q=0.9 = false
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing */*;q=0.8
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Ignoring
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Did not match any media types
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] NegatedRequestMatcher - matches = true
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] AndRequestMatcher - Trying to match using NegatedRequestMatcher [requestMatcher=RequestHeaderRequestMatcher [expectedHeaderName=X-Requested-With, expectedHeaderValue=XMLHttpRequest]]
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] NegatedRequestMatcher - matches = true
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] AndRequestMatcher - Trying to match using NegatedRequestMatcher [requestMatcher=MediaTypeRequestMatcher [contentNegotiationStrategy=org.springframework.web.accept.ContentNegotiationManager@7647cdb1, matchingMediaTypes=[multipart/form-data], useEquals=false, ignoredMediaTypes=[*/*]]]
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - httpRequestMediaTypes=[text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing text/html
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - multipart/form-data .isCompatibleWith text/html = false
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/xhtml+xml
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - multipart/form-data .isCompatibleWith application/xhtml+xml = false
[DEBUG] 2020-05-27 00:29:18.960 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing image/webp
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - multipart/form-data .isCompatibleWith image/webp = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing image/apng
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - multipart/form-data .isCompatibleWith image/apng = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/xml;q=0.9
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - multipart/form-data .isCompatibleWith application/xml;q=0.9 = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/signed-exchange;v=b3;q=0.9
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - multipart/form-data .isCompatibleWith application/signed-exchange;v=b3;q=0.9 = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing */*;q=0.8
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Ignoring
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Did not match any media types
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] NegatedRequestMatcher - matches = true
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] AndRequestMatcher - Trying to match using NegatedRequestMatcher [requestMatcher=MediaTypeRequestMatcher [contentNegotiationStrategy=org.springframework.web.accept.ContentNegotiationManager@7647cdb1, matchingMediaTypes=[text/event-stream], useEquals=false, ignoredMediaTypes=[*/*]]]
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - httpRequestMediaTypes=[text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing text/html
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - text/event-stream .isCompatibleWith text/html = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/xhtml+xml
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - text/event-stream .isCompatibleWith application/xhtml+xml = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing image/webp
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - text/event-stream .isCompatibleWith image/webp = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing image/apng
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - text/event-stream .isCompatibleWith image/apng = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/xml;q=0.9
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - text/event-stream .isCompatibleWith application/xml;q=0.9 = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing application/signed-exchange;v=b3;q=0.9
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - text/event-stream .isCompatibleWith application/signed-exchange;v=b3;q=0.9 = false
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Processing */*;q=0.8
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Ignoring
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] MediaTypeRequestMatcher - Did not match any media types
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] NegatedRequestMatcher - matches = true
[DEBUG] 2020-05-27 00:29:18.961 [http-nio-8077-exec-2] AndRequestMatcher - All requestMatchers returned true
[WARN ] 2020-05-27 00:29:19.185 [http-nio-8077-exec-2] SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [217] milliseconds.
[DEBUG] 2020-05-27 00:29:19.186 [http-nio-8077-exec-2] HttpSessionRequestCache - DefaultSavedRequest added to Session: DefaultSavedRequest[http://localhost:8077/doctor]
[DEBUG] 2020-05-27 00:29:19.186 [http-nio-8077-exec-2] ExceptionTranslationFilter - Calling Authentication entry point.
[DEBUG] 2020-05-27 00:29:19.187 [http-nio-8077-exec-2] DefaultRedirectStrategy - Redirecting to 'http://localhost:8077/login'
[DEBUG] 2020-05-27 00:29:19.187 [http-nio-8077-exec-2] HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@4282f5d7
[DEBUG] 2020-05-27 00:29:19.187 [http-nio-8077-exec-2] HttpSessionSecurityContextRepository - SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
[DEBUG] 2020-05-27 00:29:19.188 [http-nio-8077-exec-2] SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 1 of 12 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 2 of 12 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] HttpSessionSecurityContextRepository - HttpSession returned null object for SPRING_SECURITY_CONTEXT
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] HttpSessionSecurityContextRepository - No SecurityContext was available from the HttpSession: org.apache.catalina.session.StandardSessionFacade@7e7d9076. A new one will be created.
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 3 of 12 in additional filter chain; firing Filter: 'HeaderWriterFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 4 of 12 in additional filter chain; firing Filter: 'CsrfFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 5 of 12 in additional filter chain; firing Filter: 'LogoutFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] AntPathRequestMatcher - Request 'GET /login' doesn't match 'POST /logout'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 6 of 12 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] AntPathRequestMatcher - Request 'GET /login' doesn't match 'POST /login'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 7 of 12 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] DefaultSavedRequest - pathInfo: both null (property equals)
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] DefaultSavedRequest - queryString: both null (property equals)
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] DefaultSavedRequest - requestURI: arg1=/doctor; arg2=/login (property not equals)
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] HttpSessionRequestCache - saved request doesn't match
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 8 of 12 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 9 of 12 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] AnonymousAuthenticationFilter - Populated SecurityContextHolder with anonymous token: 'org.springframework.security.authentication.AnonymousAuthenticationToken@2910f3d4: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: D26673D76146937BCEEEEB3520E0F442; Granted Authorities: ROLE_ANONYMOUS'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 10 of 12 in additional filter chain; firing Filter: 'SessionManagementFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 11 of 12 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login at position 12 of 12 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /login; Attributes: [permitAll]
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.AnonymousAuthenticationToken@2910f3d4: Principal: anonymousUser; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: D26673D76146937BCEEEEB3520E0F442; Granted Authorities: ROLE_ANONYMOUS
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@6336c12c, returned: 1
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterSecurityInterceptor - Authorization successful
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterSecurityInterceptor - RunAsManager did not change Authentication object
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] FilterChainProxy - /login reached end of additional filter chain; proceeding with original chain
[DEBUG] 2020-05-27 00:29:19.196 [http-nio-8077-exec-3] DispatcherServlet - GET "/login", parameters={}
[DEBUG] 2020-05-27 00:29:19.197 [http-nio-8077-exec-3] RequestMappingHandlerMapping - Mapped to com.example.demo.controllers.AppController#login()
[DEBUG] 2020-05-27 00:29:19.197 [http-nio-8077-exec-3] OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] 2020-05-27 00:29:19.211 [http-nio-8077-exec-3] ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
[DEBUG] 2020-05-27 00:29:19.364 [http-nio-8077-exec-3] HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@4282f5d7
[DEBUG] 2020-05-27 00:29:19.364 [http-nio-8077-exec-3] HttpSessionSecurityContextRepository - SecurityContext is empty or contents are anonymous - context will not be stored in HttpSession.
[DEBUG] 2020-05-27 00:29:19.366 [http-nio-8077-exec-3] OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] 2020-05-27 00:29:19.366 [http-nio-8077-exec-3] DispatcherServlet - Completed 200 OK
[DEBUG] 2020-05-27 00:29:19.366 [http-nio-8077-exec-3] ExceptionTranslationFilter - Chain processed normally
[DEBUG] 2020-05-27 00:29:19.366 [http-nio-8077-exec-3] SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
[DEBUG] 2020-05-27 00:29:21.277 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[DEBUG] 2020-05-27 00:29:21.277 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[DEBUG] 2020-05-27 00:29:22.943 [http-nio-8077-exec-4] FilterChainProxy - /login at position 1 of 12 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
[DEBUG] 2020-05-27 00:29:22.943 [http-nio-8077-exec-4] FilterChainProxy - /login at position 2 of 12 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
[DEBUG] 2020-05-27 00:29:22.943 [http-nio-8077-exec-4] HttpSessionSecurityContextRepository - HttpSession returned null object for SPRING_SECURITY_CONTEXT
[DEBUG] 2020-05-27 00:29:22.943 [http-nio-8077-exec-4] HttpSessionSecurityContextRepository - No SecurityContext was available from the HttpSession: org.apache.catalina.session.StandardSessionFacade@7e7d9076. A new one will be created.
[DEBUG] 2020-05-27 00:29:22.944 [http-nio-8077-exec-4] FilterChainProxy - /login at position 3 of 12 in additional filter chain; firing Filter: 'HeaderWriterFilter'
[DEBUG] 2020-05-27 00:29:22.944 [http-nio-8077-exec-4] FilterChainProxy - /login at position 4 of 12 in additional filter chain; firing Filter: 'CsrfFilter'
[DEBUG] 2020-05-27 00:29:22.944 [http-nio-8077-exec-4] FilterChainProxy - /login at position 5 of 12 in additional filter chain; firing Filter: 'LogoutFilter'
[DEBUG] 2020-05-27 00:29:22.944 [http-nio-8077-exec-4] AntPathRequestMatcher - Checking match of request : '/login'; against '/logout'
[DEBUG] 2020-05-27 00:29:22.945 [http-nio-8077-exec-4] FilterChainProxy - /login at position 6 of 12 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:22.945 [http-nio-8077-exec-4] AntPathRequestMatcher - Checking match of request : '/login'; against '/login'
[DEBUG] 2020-05-27 00:29:22.945 [http-nio-8077-exec-4] UsernamePasswordAuthenticationFilter - Request is to process authentication
[DEBUG] 2020-05-27 00:29:22.945 [http-nio-8077-exec-4] ProviderManager - Authentication attempt using org.springframework.security.authentication.dao.DaoAuthenticationProvider
[DEBUG] 2020-05-27 00:29:23.066 [http-nio-8077-exec-4] SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
[DEBUG] 2020-05-27 00:29:23.096 [http-nio-8077-exec-4] SQL - select appuser0_.user_id as user_id1_7_, appuser0_.email as email2_7_, appuser0_.enabled as enabled3_7_, appuser0_.name as name4_7_, appuser0_.password as password5_7_, appuser0_.role as role7_7_, appuser0_.surname as surname6_7_ from users appuser0_ where appuser0_.email=?
[DEBUG] 2020-05-27 00:29:23.125 [http-nio-8077-exec-4] Loader - Result set row: 0
[DEBUG] 2020-05-27 00:29:23.129 [http-nio-8077-exec-4] Loader - Result row: EntityKey[com.example.demo.entity.AppUser#1]
[DEBUG] 2020-05-27 00:29:23.139 [http-nio-8077-exec-4] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.AppUser#1]
[DEBUG] 2020-05-27 00:29:23.139 [http-nio-8077-exec-4] TwoPhaseLoad - Processing attribute `email` : value = stevemadden@gmail.com
[DEBUG] 2020-05-27 00:29:23.139 [http-nio-8077-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.140 [http-nio-8077-exec-4] TwoPhaseLoad - Processing attribute `enabled` : value = true
[DEBUG] 2020-05-27 00:29:23.140 [http-nio-8077-exec-4] TwoPhaseLoad - Attribute (`enabled`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.140 [http-nio-8077-exec-4] TwoPhaseLoad - Processing attribute `name` : value = Steve
[DEBUG] 2020-05-27 00:29:23.140 [http-nio-8077-exec-4] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.140 [http-nio-8077-exec-4] TwoPhaseLoad - Processing attribute `password` : value = $2y$12$oAYqW4OYRqk2.E0/qWrb6.fuaWj60cavlhlKX2VGoUsZtPnDximt2
[DEBUG] 2020-05-27 00:29:23.140 [http-nio-8077-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.140 [http-nio-8077-exec-4] TwoPhaseLoad - Processing attribute `role` : value = 2
[DEBUG] 2020-05-27 00:29:23.140 [http-nio-8077-exec-4] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.143 [http-nio-8077-exec-4] SQL - select role0_.role_id as role_id1_6_0_, role0_.name as name2_6_0_ from user_roles role0_ where role0_.role_id=?
[DEBUG] 2020-05-27 00:29:23.148 [http-nio-8077-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-05-27 00:29:23.149 [http-nio-8077-exec-4] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Role#2]
[DEBUG] 2020-05-27 00:29:23.149 [http-nio-8077-exec-4] TwoPhaseLoad - Processing attribute `name` : value = DOCTOR
[DEBUG] 2020-05-27 00:29:23.149 [http-nio-8077-exec-4] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.149 [http-nio-8077-exec-4] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Role#2]
[DEBUG] 2020-05-27 00:29:23.150 [http-nio-8077-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : com.example.demo.entity.Role#2
[DEBUG] 2020-05-27 00:29:23.152 [http-nio-8077-exec-4] TwoPhaseLoad - Processing attribute `surname` : value = Madden
[DEBUG] 2020-05-27 00:29:23.152 [http-nio-8077-exec-4] TwoPhaseLoad - Attribute (`surname`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.152 [http-nio-8077-exec-4] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.AppUser#1]
[DEBUG] 2020-05-27 00:29:23.599 [http-nio-8077-exec-4] CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy@6fcb946e
[DEBUG] 2020-05-27 00:29:23.600 [http-nio-8077-exec-4] CompositeSessionAuthenticationStrategy - Delegating to org.springframework.security.web.csrf.CsrfAuthenticationStrategy@1d3ec1a2
[DEBUG] 2020-05-27 00:29:23.600 [http-nio-8077-exec-4] UsernamePasswordAuthenticationFilter - Authentication success. Updating SecurityContextHolder to contain: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@634f7635: Principal: com.example.demo.MyUserDetails@1bcd4072; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: D26673D76146937BCEEEEB3520E0F442; Granted Authorities: DOCTOR
[DEBUG] 2020-05-27 00:29:23.601 [http-nio-8077-exec-4] SavedRequestAwareAuthenticationSuccessHandler - Redirecting to DefaultSavedRequest Url: http://localhost:8077/doctor
[DEBUG] 2020-05-27 00:29:23.601 [http-nio-8077-exec-4] DefaultRedirectStrategy - Redirecting to 'http://localhost:8077/doctor'
[DEBUG] 2020-05-27 00:29:23.601 [http-nio-8077-exec-4] HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@4282f5d7
[DEBUG] 2020-05-27 00:29:23.601 [http-nio-8077-exec-4] HttpSessionSecurityContextRepository - SecurityContext 'org.springframework.security.core.context.SecurityContextImpl@634f7635: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@634f7635: Principal: com.example.demo.MyUserDetails@1bcd4072; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: D26673D76146937BCEEEEB3520E0F442; Granted Authorities: DOCTOR' stored to HttpSession: 'org.apache.catalina.session.StandardSessionFacade@7e7d9076
[DEBUG] 2020-05-27 00:29:23.601 [http-nio-8077-exec-4] SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 1 of 12 in additional filter chain; firing Filter: 'WebAsyncManagerIntegrationFilter'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 2 of 12 in additional filter chain; firing Filter: 'SecurityContextPersistenceFilter'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] HttpSessionSecurityContextRepository - Obtained a valid SecurityContext from SPRING_SECURITY_CONTEXT: 'org.springframework.security.core.context.SecurityContextImpl@634f7635: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@634f7635: Principal: com.example.demo.MyUserDetails@1bcd4072; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: D26673D76146937BCEEEEB3520E0F442; Granted Authorities: DOCTOR'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 3 of 12 in additional filter chain; firing Filter: 'HeaderWriterFilter'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 4 of 12 in additional filter chain; firing Filter: 'CsrfFilter'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 5 of 12 in additional filter chain; firing Filter: 'LogoutFilter'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] AntPathRequestMatcher - Request 'GET /doctor' doesn't match 'POST /logout'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 6 of 12 in additional filter chain; firing Filter: 'UsernamePasswordAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] AntPathRequestMatcher - Request 'GET /doctor' doesn't match 'POST /login'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 7 of 12 in additional filter chain; firing Filter: 'RequestCacheAwareFilter'
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - pathInfo: both null (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - queryString: both null (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - requestURI: arg1=/doctor; arg2=/doctor (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - serverPort: arg1=8077; arg2=8077 (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - requestURL: arg1=http://localhost:8077/doctor; arg2=http://localhost:8077/doctor (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - scheme: arg1=http; arg2=http (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - serverName: arg1=localhost; arg2=localhost (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - contextPath: arg1=; arg2= (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] DefaultSavedRequest - servletPath: arg1=/doctor; arg2=/doctor (property equals)
[DEBUG] 2020-05-27 00:29:23.608 [http-nio-8077-exec-5] HttpSessionRequestCache - Removing DefaultSavedRequest from session if present
[DEBUG] 2020-05-27 00:29:23.609 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 8 of 12 in additional filter chain; firing Filter: 'SecurityContextHolderAwareRequestFilter'
[DEBUG] 2020-05-27 00:29:23.609 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 9 of 12 in additional filter chain; firing Filter: 'AnonymousAuthenticationFilter'
[DEBUG] 2020-05-27 00:29:23.609 [http-nio-8077-exec-5] AnonymousAuthenticationFilter - SecurityContextHolder not populated with anonymous token, as it already contained: 'org.springframework.security.authentication.UsernamePasswordAuthenticationToken@634f7635: Principal: com.example.demo.MyUserDetails@1bcd4072; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: D26673D76146937BCEEEEB3520E0F442; Granted Authorities: DOCTOR'
[DEBUG] 2020-05-27 00:29:23.609 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 10 of 12 in additional filter chain; firing Filter: 'SessionManagementFilter'
[DEBUG] 2020-05-27 00:29:23.609 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 11 of 12 in additional filter chain; firing Filter: 'ExceptionTranslationFilter'
[DEBUG] 2020-05-27 00:29:23.609 [http-nio-8077-exec-5] FilterChainProxy - /doctor at position 12 of 12 in additional filter chain; firing Filter: 'FilterSecurityInterceptor'
[DEBUG] 2020-05-27 00:29:23.609 [http-nio-8077-exec-5] AntPathRequestMatcher - Request 'GET /doctor' doesn't match 'POST /logout'
[DEBUG] 2020-05-27 00:29:23.609 [http-nio-8077-exec-5] AntPathRequestMatcher - Checking match of request : '/doctor'; against '/'
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] AntPathRequestMatcher - Checking match of request : '/doctor'; against '/registration'
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] AntPathRequestMatcher - Checking match of request : '/doctor'; against '/doctor/**'
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] FilterSecurityInterceptor - Secure object: FilterInvocation: URL: /doctor; Attributes: [hasAuthority('DOCTOR')]
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] FilterSecurityInterceptor - Previously Authenticated: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@634f7635: Principal: com.example.demo.MyUserDetails@1bcd4072; Credentials: [PROTECTED]; Authenticated: true; Details: org.springframework.security.web.authentication.WebAuthenticationDetails@ffff4c9c: RemoteIpAddress: 0:0:0:0:0:0:0:1; SessionId: D26673D76146937BCEEEEB3520E0F442; Granted Authorities: DOCTOR
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] AffirmativeBased - Voter: org.springframework.security.web.access.expression.WebExpressionVoter@6336c12c, returned: 1
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] FilterSecurityInterceptor - Authorization successful
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] FilterSecurityInterceptor - RunAsManager did not change Authentication object
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] FilterChainProxy - /doctor reached end of additional filter chain; proceeding with original chain
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] DispatcherServlet - GET "/doctor", parameters={}
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] RequestMappingHandlerMapping - Mapped to com.example.demo.controllers.AppController#doctor(Authentication, Map)
[DEBUG] 2020-05-27 00:29:23.610 [http-nio-8077-exec-5] OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] 2020-05-27 00:29:23.616 [http-nio-8077-exec-5] SQL - select appuser0_.user_id as user_id1_7_, appuser0_.email as email2_7_, appuser0_.enabled as enabled3_7_, appuser0_.name as name4_7_, appuser0_.password as password5_7_, appuser0_.role as role7_7_, appuser0_.surname as surname6_7_ from users appuser0_ where appuser0_.email=?
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] Loader - Result set row: 0
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] Loader - Result row: EntityKey[com.example.demo.entity.AppUser#1]
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.AppUser#1]
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `email` : value = stevemadden@gmail.com
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `enabled` : value = true
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`enabled`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Steve
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `password` : value = $2y$12$oAYqW4OYRqk2.E0/qWrb6.fuaWj60cavlhlKX2VGoUsZtPnDximt2
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `role` : value = 2
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.618 [http-nio-8077-exec-5] SQL - select role0_.role_id as role_id1_6_0_, role0_.name as name2_6_0_ from user_roles role0_ where role0_.role_id=?
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Role#2]
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = DOCTOR
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Role#2]
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.example.demo.entity.Role#2
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `surname` : value = Madden
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`surname`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.619 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.AppUser#1]
[DEBUG] 2020-05-27 00:29:23.621 [http-nio-8077-exec-5] SQL - select patientdat0_.id as id1_3_, patientdat0_.diagnosis_id as diagnosi3_3_, patientdat0_.doctor_id as doctor_i4_3_, patientdat0_.nurse_id as nurse_id5_3_, patientdat0_.patient_id as patient_6_3_, patientdat0_.patient_status as patient_2_3_ from patient_data patientdat0_ where patientdat0_.doctor_id=?
[DEBUG] 2020-05-27 00:29:23.622 [http-nio-8077-exec-5] Loader - Result set row: 0
[DEBUG] 2020-05-27 00:29:23.622 [http-nio-8077-exec-5] Loader - Result row: EntityKey[com.example.demo.entity.PatientData#6]
[DEBUG] 2020-05-27 00:29:23.622 [http-nio-8077-exec-5] Loader - Result set row: 1
[DEBUG] 2020-05-27 00:29:23.623 [http-nio-8077-exec-5] Loader - Result row: EntityKey[com.example.demo.entity.PatientData#7]
[DEBUG] 2020-05-27 00:29:23.623 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.PatientData#6]
[DEBUG] 2020-05-27 00:29:23.623 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `currentPrescriptionsList` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.623 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`currentPrescriptionsList`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.629 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `diagnosis` : value = 1
[DEBUG] 2020-05-27 00:29:23.629 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`diagnosis`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.629 [http-nio-8077-exec-5] SQL - select diagnosis0_.id_diagnosis as id_diagn1_1_0_, diagnosis0_.diagnosis_difficulty as diagnosi2_1_0_, diagnosis0_.diagnosis_name as diagnosi3_1_0_ from diagnosis_table diagnosis0_ where diagnosis0_.id_diagnosis=?
[DEBUG] 2020-05-27 00:29:23.631 [http-nio-8077-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-05-27 00:29:23.631 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Diagnosis#1]
[DEBUG] 2020-05-27 00:29:23.631 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `difficulty` : value = low
[DEBUG] 2020-05-27 00:29:23.631 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.631 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = cold
[DEBUG] 2020-05-27 00:29:23.631 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.631 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Diagnosis#1]
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.example.demo.entity.Diagnosis#1
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `doctor` : value = 1
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`doctor`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `nurse` : value = null
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`nurse`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patient` : value = 12
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patient`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] SQL - select appuser0_.user_id as user_id1_7_0_, appuser0_.email as email2_7_0_, appuser0_.enabled as enabled3_7_0_, appuser0_.name as name4_7_0_, appuser0_.password as password5_7_0_, appuser0_.role as role7_7_0_, appuser0_.surname as surname6_7_0_, role1_.role_id as role_id1_6_1_, role1_.name as name2_6_1_ from users appuser0_ left outer join user_roles role1_ on appuser0_.role=role1_.role_id where appuser0_.user_id=?
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.AppUser#12]
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `email` : value = santaann@gmail.com
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `enabled` : value = true
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`enabled`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Santa
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `password` : value = $2a$10$zzEfiXvB9iDTyCG6ja02fux7v9RhSuxl3X0CTe3x0SEuaPvb2RMuO
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `role` : value = 1
[DEBUG] 2020-05-27 00:29:23.633 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `surname` : value = Ann
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`surname`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.AppUser#12]
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Role#1]
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = PATIENT
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Role#1]
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.example.demo.entity.AppUser#12
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patientStatus` : value = 1
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patientStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptionHistory` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptionHistory`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.PatientData#6]
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.PatientData#7]
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `currentPrescriptionsList` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`currentPrescriptionsList`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `diagnosis` : value = 7
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`diagnosis`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] SQL - select diagnosis0_.id_diagnosis as id_diagn1_1_0_, diagnosis0_.diagnosis_difficulty as diagnosi2_1_0_, diagnosis0_.diagnosis_name as diagnosi3_1_0_ from diagnosis_table diagnosis0_ where diagnosis0_.id_diagnosis=?
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Diagnosis#7]
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `difficulty` : value = hard
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`difficulty`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = antritis2
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Diagnosis#7]
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.example.demo.entity.Diagnosis#7
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `doctor` : value = 1
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`doctor`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `nurse` : value = null
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`nurse`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patient` : value = 13
[DEBUG] 2020-05-27 00:29:23.635 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patient`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] SQL - select appuser0_.user_id as user_id1_7_0_, appuser0_.email as email2_7_0_, appuser0_.enabled as enabled3_7_0_, appuser0_.name as name4_7_0_, appuser0_.password as password5_7_0_, appuser0_.role as role7_7_0_, appuser0_.surname as surname6_7_0_, role1_.role_id as role_id1_6_1_, role1_.name as name2_6_1_ from users appuser0_ left outer join user_roles role1_ on appuser0_.role=role1_.role_id where appuser0_.user_id=?
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.AppUser#13]
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `email` : value = user1
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `enabled` : value = true
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`enabled`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = user1
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `password` : value = $2a$10$VJmHQVIOo6buZGJWXYW.Huzan9.iJ1DrCcX34mvxTWRUPKEXdFpFm
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `role` : value = 1
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `surname` : value = user1
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`surname`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.AppUser#13]
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.example.demo.entity.AppUser#13
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patientStatus` : value = 1
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patientStatus`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptionHistory` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptionHistory`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.637 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.PatientData#7]
[DEBUG] 2020-05-27 00:29:23.649 [http-nio-8077-exec-5] ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
[DEBUG] 2020-05-27 00:29:23.666 [http-nio-8077-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.example.demo.entity.PatientData.prescriptionHistory#6]
[DEBUG] 2020-05-27 00:29:23.666 [http-nio-8077-exec-5] SQL - select prescripti0_.patient_id as patient_2_4_0_, prescripti0_.prescription_id as prescrip1_4_0_, prescripti1_.id_prescription as id_presc1_5_1_, prescripti1_.prescription_name as prescrip2_5_1_, prescripti1_.prescription_class as prescrip3_5_1_ from prescription_history prescripti0_ inner join prescription_table prescripti1_ on prescripti0_.prescription_id=prescripti1_.id_prescription where prescripti0_.patient_id=?
[DEBUG] 2020-05-27 00:29:23.667 [http-nio-8077-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.example.demo.entity.PatientData.prescriptionHistory#6]
[DEBUG] 2020-05-27 00:29:23.669 [http-nio-8077-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.example.demo.entity.PatientData.prescriptionHistory#6]
[DEBUG] 2020-05-27 00:29:23.669 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Prescription#2]
[DEBUG] 2020-05-27 00:29:23.669 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = nozol
[DEBUG] 2020-05-27 00:29:23.669 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.669 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patientCurrentPrescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.669 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patientCurrentPrescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.669 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptionClass` : value = medicine
[DEBUG] 2020-05-27 00:29:23.669 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptionClass`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.670 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.670 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.670 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Prescription#2]
[DEBUG] 2020-05-27 00:29:23.670 [http-nio-8077-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.example.demo.entity.PatientData.prescriptionHistory
[DEBUG] 2020-05-27 00:29:23.670 [http-nio-8077-exec-5] CollectionLoadContext - Collection fully initialized: [com.example.demo.entity.PatientData.prescriptionHistory#6]
[DEBUG] 2020-05-27 00:29:23.670 [http-nio-8077-exec-5] CollectionLoadContext - 1 collections initialized for role: com.example.demo.entity.PatientData.prescriptionHistory
[DEBUG] 2020-05-27 00:29:23.670 [http-nio-8077-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-05-27 00:29:23.675 [http-nio-8077-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.example.demo.entity.PatientData.currentPrescriptionsList#6]
[DEBUG] 2020-05-27 00:29:23.675 [http-nio-8077-exec-5] SQL - select currentpre0_.patient_id as patient_2_0_0_, currentpre0_.prescription_id as prescrip1_0_0_, prescripti1_.id_prescription as id_presc1_5_1_, prescripti1_.prescription_name as prescrip2_5_1_, prescripti1_.prescription_class as prescrip3_5_1_ from current_prescriptions currentpre0_ inner join prescription_table prescripti1_ on currentpre0_.prescription_id=prescripti1_.id_prescription where currentpre0_.patient_id=?
[DEBUG] 2020-05-27 00:29:23.677 [http-nio-8077-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.example.demo.entity.PatientData.currentPrescriptionsList#6]
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.example.demo.entity.PatientData.currentPrescriptionsList#6]
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Prescription#1]
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = otrivin
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patientCurrentPrescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patientCurrentPrescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptionClass` : value = medicine
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptionClass`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Prescription#1]
[DEBUG] 2020-05-27 00:29:23.678 [http-nio-8077-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.example.demo.entity.PatientData.currentPrescriptionsList
[DEBUG] 2020-05-27 00:29:23.679 [http-nio-8077-exec-5] CollectionLoadContext - Collection fully initialized: [com.example.demo.entity.PatientData.currentPrescriptionsList#6]
[DEBUG] 2020-05-27 00:29:23.679 [http-nio-8077-exec-5] CollectionLoadContext - 1 collections initialized for role: com.example.demo.entity.PatientData.currentPrescriptionsList
[DEBUG] 2020-05-27 00:29:23.679 [http-nio-8077-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-05-27 00:29:23.686 [http-nio-8077-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.example.demo.entity.PatientData.prescriptionHistory#7]
[DEBUG] 2020-05-27 00:29:23.686 [http-nio-8077-exec-5] SQL - select prescripti0_.patient_id as patient_2_4_0_, prescripti0_.prescription_id as prescrip1_4_0_, prescripti1_.id_prescription as id_presc1_5_1_, prescripti1_.prescription_name as prescrip2_5_1_, prescripti1_.prescription_class as prescrip3_5_1_ from prescription_history prescripti0_ inner join prescription_table prescripti1_ on prescripti0_.prescription_id=prescripti1_.id_prescription where prescripti0_.patient_id=?
[DEBUG] 2020-05-27 00:29:23.687 [http-nio-8077-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.example.demo.entity.PatientData.prescriptionHistory#7]
[DEBUG] 2020-05-27 00:29:23.688 [http-nio-8077-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.example.demo.entity.PatientData.prescriptionHistory#7]
[DEBUG] 2020-05-27 00:29:23.688 [http-nio-8077-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.example.demo.entity.PatientData.prescriptionHistory#7]
[DEBUG] 2020-05-27 00:29:23.688 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Prescription#3]
[DEBUG] 2020-05-27 00:29:23.688 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = pinosol
[DEBUG] 2020-05-27 00:29:23.688 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.688 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patientCurrentPrescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patientCurrentPrescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptionClass` : value = medicine
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptionClass`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Prescription#3]
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Prescription#5]
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = procedure 2
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patientCurrentPrescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patientCurrentPrescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptionClass` : value = procedures
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptionClass`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Prescription#5]
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.example.demo.entity.PatientData.prescriptionHistory
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] CollectionLoadContext - Collection fully initialized: [com.example.demo.entity.PatientData.prescriptionHistory#7]
[DEBUG] 2020-05-27 00:29:23.689 [http-nio-8077-exec-5] CollectionLoadContext - 1 collections initialized for role: com.example.demo.entity.PatientData.prescriptionHistory
[DEBUG] 2020-05-27 00:29:23.690 [http-nio-8077-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-05-27 00:29:23.691 [http-nio-8077-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.example.demo.entity.PatientData.currentPrescriptionsList#7]
[DEBUG] 2020-05-27 00:29:23.691 [http-nio-8077-exec-5] SQL - select currentpre0_.patient_id as patient_2_0_0_, currentpre0_.prescription_id as prescrip1_0_0_, prescripti1_.id_prescription as id_presc1_5_1_, prescripti1_.prescription_name as prescrip2_5_1_, prescripti1_.prescription_class as prescrip3_5_1_ from current_prescriptions currentpre0_ inner join prescription_table prescripti1_ on currentpre0_.prescription_id=prescripti1_.id_prescription where currentpre0_.patient_id=?
[DEBUG] 2020-05-27 00:29:23.692 [http-nio-8077-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.example.demo.entity.PatientData.currentPrescriptionsList#7]
[DEBUG] 2020-05-27 00:29:23.692 [http-nio-8077-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.example.demo.entity.PatientData.currentPrescriptionsList#7]
[DEBUG] 2020-05-27 00:29:23.692 [http-nio-8077-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.example.demo.entity.PatientData.currentPrescriptionsList#7]
[DEBUG] 2020-05-27 00:29:23.692 [http-nio-8077-exec-5] TwoPhaseLoad - Resolving attributes for [com.example.demo.entity.Prescription#7]
[DEBUG] 2020-05-27 00:29:23.692 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `name` : value = operation 1
[DEBUG] 2020-05-27 00:29:23.692 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `patientCurrentPrescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`patientCurrentPrescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptionClass` : value = operations
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptionClass`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] TwoPhaseLoad - Processing attribute `prescriptions` : value = NOT NULL COLLECTION
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] TwoPhaseLoad - Attribute (`prescriptions`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] TwoPhaseLoad - Done materializing entity [com.example.demo.entity.Prescription#7]
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.example.demo.entity.PatientData.currentPrescriptionsList
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] CollectionLoadContext - Collection fully initialized: [com.example.demo.entity.PatientData.currentPrescriptionsList#7]
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] CollectionLoadContext - 1 collections initialized for role: com.example.demo.entity.PatientData.currentPrescriptionsList
[DEBUG] 2020-05-27 00:29:23.693 [http-nio-8077-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-05-27 00:29:23.712 [http-nio-8077-exec-5] HstsHeaderWriter - Not injecting HSTS header since it did not match the requestMatcher org.springframework.security.web.header.writers.HstsHeaderWriter$SecureRequestMatcher@4282f5d7
[DEBUG] 2020-05-27 00:29:23.712 [http-nio-8077-exec-5] OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
[DEBUG] 2020-05-27 00:29:23.713 [http-nio-8077-exec-5] DispatcherServlet - Completed 200 OK
[DEBUG] 2020-05-27 00:29:23.714 [http-nio-8077-exec-5] ExceptionTranslationFilter - Chain processed normally
[DEBUG] 2020-05-27 00:29:23.714 [http-nio-8077-exec-5] SecurityContextPersistenceFilter - SecurityContextHolder now cleared, as request processing completed
[DEBUG] 2020-05-27 00:29:51.279 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[DEBUG] 2020-05-27 00:29:51.279 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[DEBUG] 2020-05-27 00:30:21.279 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[DEBUG] 2020-05-27 00:30:21.279 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
